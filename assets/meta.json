{"/blog": {"title": "Tech Trash Box", "description": "Angular / Djangoがメインのログゴミ置き場です。", "img": "https://tech.trash-box.dev/assets/images/blog.png"}, "/blog/1160526026": {"title": "Google Adsenseで詰まった話、サイト構成など | Tech Trash Box", "description": "このサイトの構成は     お名前ドットコム -> Route 53 -> AWS ALB - > AWS EC2     という形になっています。実装当初は     お名前ドットコム -> AWS ALB - > AWS EC2     となっていたのですがadsenseに登録する&ALBの仕様上", "img": "https://tech.trash-box.dev/assets/images/1160526026.png"}, "/blog/1160542827": {"title": "Django shortcutsまとめ\t | Tech Trash Box", "description": "[django shortcuts]        render       py  def render(request, template_name, context=None, content_type=None, status=None, using=None):      \"\"\"", "img": "https://tech.trash-box.dev/assets/images/1160542827.png"}, "/blog/1160542878": {"title": "MarkdownをHTMLに変換/cssを付与する | Tech Trash Box", "description": "markdownは以下のライブラリを使うことでHTMLに変換可能です。  [Python-Markdown]         install       bash  > pip install markdown             HTMLへの変換       bash  >>> markdow", "img": "https://tech.trash-box.dev/assets/images/1160542878.png"}, "/blog/1160542944": {"title": "Django4.0がリリースされたので適当に試してみる | Tech Trash Box", "description": "[release notes]         依存ライブラリ  - Django 3.2       asgiref==3.4.1  pytz==2021.3  sqlparse==0.4.2       - Django4.0       asgiref==3.4.1  backports.zo", "img": "https://tech.trash-box.dev/assets/images/1160542944.png"}, "/blog/1160543028": {"title": "Django Adminを自動生成する | Tech Trash Box", "description": "admin登録忘れてめんどくさいな～ということがあったのでメモ代わりに残しておきます。         便利なタイミング  - Django Adminにそれほど力をいれたくないけれど最低限の機能はほしい  - モデル追加時に admin.site.register を忘れてしまうのでなんとかしたい", "img": "https://tech.trash-box.dev/assets/images/1160543028.png"}, "/blog/1160543074": {"title": "Type safeにAngularのformを扱う | Tech Trash Box", "description": "@ngneat/reactive-formsを利用するとtype safeにformを書くことができます。    ---       通常のAngularのform       ts  import { FormBuilder } from '@angular/forms';    construc", "img": "https://tech.trash-box.dev/assets/images/1160543074.png"}, "/blog/1160543248": {"title": "DRF 紐づくモデルの表示件数を制限する | Tech Trash Box", "description": "djangoには prefetch_related  という機能が存在しており以下のように記載することで発行されるSQLを抑制することができます。       python  Article.objects.prefetch_related(\"tags\")         と記載することでManyT", "img": "https://tech.trash-box.dev/assets/images/1160543248.png"}, "/blog/1160543297": {"title": "フロントエンドのテストを書く(スナップショットテスト編) | Tech Trash Box", "description": "環境  Angular 13, node 16    今回はjestを利用するためデフォルトで入っているKarmaを削除します     sh  npm run ng add @briebug/jest-schematic         参考: https://github.com/brie", "img": "https://tech.trash-box.dev/assets/images/1160543297.png"}, "/blog/1160543378": {"title": "Gmail API push notificationを利用する | Tech Trash Box", "description": "メールにフックして処理を挟むことができるようになります。        環境  - Python 3.10  - google-api-python-client==2.36.0  - google_auth_oauthlib==0.4.6  - google-cloud-pubsub==2.9.0", "img": "https://tech.trash-box.dev/assets/images/1160543378.png"}, "/blog/1160543419": {"title": "Nuxtでキャッシュとうまくやる | Tech Trash Box", "description": "自動的に現在のコードが最新かどうかチェックし、キャッシュの更新を行います。         検証環境  - Nuxt: 2.15.8  - @nuxtjs/pwa: 3.3.5         コード   nuxt.config.js        js  {    plugins: ['plugi", "img": "https://tech.trash-box.dev/assets/images/1160543419.png"}, "/blog/1160653032": {"title": "GitHub ActionとPagesでブログを作る | Tech Trash Box", "description": "環境  - npm v8.3.1  - node: v16.14.0  - Angular: v13.2.5  - @ng-bootstrap/ng-bootstrap: 12.0.0    ※  npm run ng add @ng-bootstrap/ng-bootstrap  が失敗する", "img": "https://tech.trash-box.dev/assets/images/1160653032.png"}, "/blog/1167241988": {"title": "GitHub PagesでデプロイしたSPAにOGPを表示させる(気合) | Tech Trash Box", "description": "通常SPAをデプロイさせた場合、twitterなどでOGPが表示されません。    これはOGPを取得するbotがjsを実行しないこと、それとSPAのため該当するリンク先に静的なHTMLファイルが存在していないことが原因です。    そのため、通常はlambda等を利用しbot用のページ表示、それ以", "img": "https://tech.trash-box.dev/assets/images/1167241988.png"}, "/blog/1167568913": {"title": "Google AdsenseをAngularで利用する | Tech Trash Box", "description": "通常のSSRではGoogle Adsense用の自動広告スクリプトを  <head></head>  内に記載するだけで広告を配信し、収益化させることが可能です。    ただし、SPAの場合自動広告のみを利用するとページ遷移によるリロードが発生しないため、ページ下部の固定広告のみになってしまうなど表", "img": "https://tech.trash-box.dev/assets/images/1167568913.png"}, "/blog/1169430844": {"title": "Django Rest Framework OpenAPIドキュメントを起こす | Tech Trash Box", "description": "APIからOpenAPIドキュメントを生成する機会があったのでメモ    DRF自体に  generateschema  というコマンドが存在しているため       zsh  $ python manage.py generateschema > schema.yml         と実行するだ", "img": "https://tech.trash-box.dev/assets/images/1169430844.png"}, "/blog/1169514542": {"title": "Angular component内にscriptタグを設置する | Tech Trash Box", "description": "scriptタグを  src/index.html  以外に設置した場合、自動的に取り除く挙動を示します。    参考: [angular/angular 4903]     そのため、例えば[Twitter Publish] で取得できるようなボタンを設置した際、ツイートボタンのcssが当たらない", "img": "https://tech.trash-box.dev/assets/images/1169514542.png"}, "/blog/1170873471": {"title": "Angular よく書くコード/ライブラリ置き場 | Tech Trash Box", "description": "ライブラリ  - [@ngneat/reactive-forms]     - 型安全にformGroupを記載    - フォームの入力内容をsession storageに保存しリロードされたタイミング等で保存/ロード    - [@datorama/akita]     - 状態管理ラ", "img": "https://tech.trash-box.dev/assets/images/1170873471.png"}, "/blog/1174254849": {"title": "Angular 状態管理を行う @ngneat/elf  | Tech Trash Box", "description": "[@datorama/akita] を確認してねという以下の記載があったので動作確認     Elf, a newer state management solution, has been published. We recommend checking it out 🚀     ---", "img": "https://tech.trash-box.dev/assets/images/1174254849.png"}, "/blog/1174435949": {"title": "サイトの構成について | Tech Trash Box", "description": "旧サイト[kemu.site]   <img width=\"834\" alt=\"スクリーンショット 2022-03-20 13 11 44\" src=\"https://user- s.githubusercontent.com/29157528/159147797-67a49372-2bf", "img": "https://tech.trash-box.dev/assets/images/1174435949.png"}, "/blog/1174533240": {"title": "Angular reCAPTCHAを利用する | Tech Trash Box", "description": "reCAPTCHAを用いてbotからのアクセスを防ぐことができるようになります。    通常、reCAPTCHAを利用する場合、scriptタグをHTMLに仕込む必要があります。ただし、index.html上のscriptタグはエスケープされ、消されてしまうため[ng-recaptcha] を利用し", "img": "https://tech.trash-box.dev/assets/images/1174533240.png"}, "/blog/1175617296": {"title": "AWS Apex Domainとうまく付き合う | Tech Trash Box", "description": "サイトをAWS上に置いている場合、ロードバランサにSSL証明書を置き、ターゲットグループにEC2を指定するといった構成がよくある構成として挙げられます。    この構成の場合、ドメインのDNSレコードに通常CNAMEレコードを追加し、ロードバランサのDNS名を記載します。    <img width", "img": "https://tech.trash-box.dev/assets/images/1175617296.png"}, "/blog/1176713310": {"title": "IP Address Checkerをリリースしました | Tech Trash Box", "description": "閲覧ユーザのIPアドレス等を確認できる機能をリリースしました。    IPアドレスの収集は行なっておらず、ローカルストレージに前回の記録を残していくだけのため安心してご利用ください。    内部的な構成は以下の通りです。    <img width=\"555\" alt=\"スクリーンショット 2022", "img": "https://tech.trash-box.dev/assets/images/1176713310.png"}, "/blog/1180653910": {"title": "JSON Typerをリリースしました。 | Tech Trash Box", "description": "JSONデータを読み込ませることでTypeScriptの型を自動生成することができる機能を追加しました。    下記の例のような形でJSONを入力することで生成されます。    リスト型、JSONのキーのエスケープが課題ですがまあ手軽に型を生成したいタイミングでは使いやすいかと思います。    [U", "img": "https://tech.trash-box.dev/assets/images/1180653910.png"}, "/blog/1182698916": {"title": "GitHub Actionsよく使う設定まとめ | Tech Trash Box", "description": "任意のタイミングでテストを回す    pushとpull requestの両方で全てのケースで発火させた場合pull request上で同一の内容のテストが2回発火します。そのためpull requestが作成されたタイミング/pull requestが更新されたタイミング/マージされた(ma", "img": "https://tech.trash-box.dev/assets/images/1182698916.png"}, "/blog/1183289291": {"title": "OpenApiのドキュメントから型を自動で生成する | Tech Trash Box", "description": "以前生成したOpenApiドキュメントから型を生成します。[前回]     型の生成には [@openapitools/openapi-generator-cli] を利用します。       zsh  $ npx @openapitools/openapi-generator-cli genera", "img": "https://tech.trash-box.dev/assets/images/1183289291.png"}, "/blog/1189790754": {"title": "marked.jsとhighlight.jsでGitHub Flavored Markdownを扱う | Tech Trash Box", "description": "GitHub上で扱っているMarkdownの正式名称はGitHub Flavored Markdownと言われ、デフォルトのMarkdownを拡張した独自記法になっています。    今回はhighlight.jsのGitHub cssを適用してMarkdownテキストをHTMLに変換します。", "img": "https://tech.trash-box.dev/assets/images/1189790754.png"}, "/blog/1189843692": {"title": "Pillow 日本語フォントを利用する | Tech Trash Box", "description": "ホストOSのフォントに依存しがちなPillowの日本語フォントで他の環境/ランナーでもフォントのダウンロードが必要ない形で実装する方法を紹介します。", "img": "https://tech.trash-box.dev/assets/images/1189843692.png"}, "/blog/1191408274": {"title": "テキストエリアタグ内部でのTabキーの動作を管理する | Tech Trash Box", "description": "アプリケーション作成時にユースケースとして多いテキストエリア内部でのTabキーの動作の管理方法についてAny型で握りつぶすやり方が他サイト等で散見されたため、型に基づいた書き方を紹介します。", "img": "https://tech.trash-box.dev/assets/images/1191408274.png"}, "/blog/1198885661": {"title": "OpenApiドキュメントを可視化する | Tech Trash Box", "description": "REST APIから出力されるOpenApiファイルを元にCIで自動でドキュメント化し、GitHub Pagesで公開する手法、Swagger, Redocの違いを紹介しています。また、OpenApiファイルから生成されるドキュメントのビューアーを提供しています。", "img": "https://tech.trash-box.dev/assets/images/1198885661.png"}, "/blog/1206271863": {"title": "GitHub ActionsとGitHub Pagesで健康管理アプリを作成する | Tech Trash Box", "description": "GitHub ActionsとGitHub Pagesを組み合わせてユーザ入力フィールドを作成し、日々の健康データをグラフで表示することができるようにしたのでそのやり方と導入方法を紹介します。", "img": "https://tech.trash-box.dev/assets/images/1206271863.png"}, "/blog/1206344475": {"title": "Djangoプロジェクトをカスタムテンプレートから作成する | Tech Trash Box", "description": "いつも使うDjangoの構成をまとめたテンプレートレポジトリを作成したので使い方の紹介です。デフォルトでflake8, mypy, black, isortの設定を行なっており、CIではコードの静的チェック、テストの実行を行うようにしています。", "img": "https://tech.trash-box.dev/assets/images/1206344475.png"}, "/blog/1206789196": {"title": "Graphene Django Graphql ドキュメントを生成する | Tech Trash Box", "description": "Grapnene-Djangoを利用したプロジェクトでGraphql スキーマの出力、出力される情報の確認、出力されたスキーマからの自動ドキュメント生成を行います。生成したドキュメントはCIからGitHub Pagesにデプロイしています。", "img": "https://tech.trash-box.dev/assets/images/1206789196.png"}, "/blog/1210913643": {"title": "Django JWT認証を利用する | Tech Trash Box", "description": "Django Rest Framework, SimpleJWTのライブラリ動作確認を行ったのでそのメモ書き。トークンの作成 -> トークンの有効性検証 -> トークンの再発行処理 -> トークンを用いたログイン必須ページへのアクセス方法の確認を行っています。", "img": "https://tech.trash-box.dev/assets/images/1210913643.png"}, "/blog/1215117235": {"title": "RSSの作成 / Chrome Web Feederの動作確認 | Tech Trash Box", "description": "AndroidのChrome 94~にRSS Feeder機能がいつの間にか帰ってきていたのでRSSを作成、配信して見え方のテストを行いました。", "img": "https://tech.trash-box.dev/assets/images/1215117235.png"}, "/blog/1217467340": {"title": "MacOS Windowsインストールメディアの作成 | Tech Trash Box", "description": "手持ちのM1 Macでwindows10のboot mediaを作るタイミングがあったので作成方法を紹介します。", "img": "https://tech.trash-box.dev/assets/images/1217467340.png"}, "/blog/1223579698": {"title": "Pyodide JavaScriptからPythonスクリプトを実行する | Tech Trash Box", "description": "PyCon US 2022でPyScriptについての発表があったので流れに乗り、とりあえずPyodideを手元で触ったので紹介します。", "img": "https://tech.trash-box.dev/assets/images/1223579698.png"}, "/blog/1227975608": {"title": "Cloudflare Pages 認証されたユーザにのみページを表示する | Tech Trash Box", "description": "GitHub Pagesで静的サイトをホストし、バックエンドを保持しない場合、ユーザ認証をかけることができないためCloudflare Pagesでデプロイを行い、Cloudflare Accessで認証を行い通過したユーザのみサイトを閲覧できるようにします。", "img": "https://tech.trash-box.dev/assets/images/1227975608.png"}, "/blog/1228774700": {"title": "MacOS Clamavでウイルススキャンを行う | Tech Trash Box", "description": "Clamavを常駐させたくはないが定期的にフルスキャンをかけて安全性を担保しておきたいなと思ったのでやり方を紹介します。", "img": "https://tech.trash-box.dev/assets/images/1228774700.png"}, "/blog/1238798339": {"title": "SEOを考えながらSPAをGitHub Pagesにデプロイする | Tech Trash Box", "description": "GitHub Pages, Cloudflare PagesにサービスにSPAをデプロイする際、SEOの観点から注意しなくてはいけないこと、Angularデプロイのやり方についても説明します。", "img": "https://tech.trash-box.dev/assets/images/1238798339.png"}, "/blog/1239705698": {"title": "Django 4.1 Async View, Async ORMを試す | Tech Trash Box", "description": "Django4.1alpha1がリリースされていたので新機能&動作の確認を行いました。", "img": "https://tech.trash-box.dev/assets/images/1239705698.png"}, "/blog/1244192476": {"title": "mermaid.jsをリアルタイム描画する | Tech Trash Box", "description": "mermaid.jsを利用したグラフ図を利用したいタイミングが複数回あり、リアルタイム描画方法をまとめ、リアルタイム描画を行うツールを作成しました。", "img": "https://tech.trash-box.dev/assets/images/1244192476.png"}, "/blog/1250315076": {"title": "Angular + Scully Server Side Generate を試す | Tech Trash Box", "description": "Angular + ScullyでServer Side Generateを行ったのでやり方を共有します。", "img": "https://tech.trash-box.dev/assets/images/1250315076.png"}, "/blog/1251755523": {"title": "Angular Sentry エラートラッキングを行う | Tech Trash Box", "description": "Angular ApplicationのエラートラッキングとGitHub Actionsによるソースマップ自動アップロード、リリースの作成を行ったのでやり方を紹介します。", "img": "https://tech.trash-box.dev/assets/images/1251755523.png"}, "/blog/1251907198": {"title": "IOS Safari 15.4 リリースされたのでCSS新要素を試す svh, lvh, dvh | Tech Trash Box", "description": "iPhoneで悩まされてきたURLバーの高さ問題が解決されたようなので新要素を確認します。", "img": "https://tech.trash-box.dev/assets/images/1251907198.png"}, "/blog/1258346492": {"title": "Python オフラインで翻訳を行う argostranslate | Tech Trash Box", "description": "ブログの多言語対応を行なっている際、argostranslateを利用したオフライン翻訳をおこなったためやり方を共有します。", "img": "https://tech.trash-box.dev/assets/images/1258346492.png"}, "/blog/1260904707": {"title": "GraphQL graphene-django n+1問題の対策を行う | Tech Trash Box", "description": "GraphQLクエリを単純に実装してしまうと他モデルへの参照をフロント側が書いた際にn+1問題が発生してしまいます。その際の対応を記載します。", "img": "https://tech.trash-box.dev/assets/images/1260904707.png"}, "/blog/1260993418": {"title": "GitHub Actions 小技 (1) | Tech Trash Box", "description": "複数回Pushした際の前のJobの自動キャンセル、Job Summaryへの情報書き込み方を紹介します。", "img": "https://tech.trash-box.dev/assets/images/1260993418.png"}, "/blog/1268342824": {"title": "AWS CodePipelineとGitHubを連携させてECRにイメージをPushする | Tech Trash Box", "description": "GitHubのOAuth認証を利用しAWS CodePipelineと連携させ、トリガされたCodeBuildを用いたECRへのAuto Pushを行ったのでやり方を紹介します。", "img": "https://tech.trash-box.dev/assets/images/1268342824.png"}, "/blog/1276252097": {"title": "Python Typehint new / deprecated | Tech Trash Box", "description": "気がつかないうちに追加 / 非推奨になっていた項目があったため紹介します。非推奨項目が多いのでよく利用されるもののみ記載しています。", "img": "https://tech.trash-box.dev/assets/images/1276252097.png"}, "/blog/1288639392": {"title": "[M1 Mac] chromiumのエラーで npm install に失敗した話とその対応 | Tech Trash Box", "description": "M1 Macでnpm installした際chromiumのエラーが出たのでその対応方法のメモ", "img": "https://tech.trash-box.dev/assets/images/1288639392.png"}, "/blog/1288798647": {"title": "Graphene-Django JWT認証を併用する | Tech Trash Box", "description": "JWT認証を利用したGraphQLの実装を行ったので実装を紹介します。", "img": "https://tech.trash-box.dev/assets/images/1288798647.png"}, "/blog/1292067547": {"title": "GitHub CLI レポジトリを削除する | Tech Trash Box", "description": "手作業で不要になったレポジトリを削除するのが面倒になったのでコマンドから行えることを確認しました。", "img": "https://tech.trash-box.dev/assets/images/1292067547.png"}, "/blog/1297608930": {"title": "pipeを利用した場合のexitステータスの取り扱い | Tech Trash Box", "description": "pipeを利用してコマンドの実行結果を別ファイルに書き出すなどの手法を取る際、pipeを利用する前のexitステータスコードが必要になるケースが存在します。その際のexitステータスの取り扱い方について紹介します。", "img": "https://tech.trash-box.dev/assets/images/1297608930.png"}, "/tools": {"title": "Kemu Tools", "description": "自作ツール置き場 / Markdown Writer, QrCode Maker, JSON Typer, JSON Formatter, Base64 Translator...", "img": "https://tech.trash-box.dev/assets/images/tools.png"}, "/tools/jsonTyper": {"title": "JSON Typer | Kemu Tools", "description": "任意のJSONの値をTypeScriptのinterface型に変換します。\n        ローカルストレージ上に前回入力されたデータを保存することで利便性を高めており、ワンクリックで結果をコピーすることが可能です。", "img": "https://tech.trash-box.dev/assets/images/json-typer.png"}, "/tools/realtime": {"title": "REALTIME | Kemu Tools", "description": "現在時刻を100ms単位で更新し、正確な日時をお知らせします。\n        指定した時刻に指定したワードを呟きたいTwitterのmeme / 先着順の申し込みカウントダウンのようなケースでお使いください。", "img": "https://tech.trash-box.dev/assets/images/realtime.png"}, "/tools/jsonFormatter": {"title": "JSON Formatter | Kemu Tools", "description": "未整形のJSONデータを整形します。\n        ローカルストレージ上に前回入力されたデータを保存することで利便性を高めており、ワンクリックで結果をコピーすることが可能です。", "img": "https://tech.trash-box.dev/assets/images/json-formatter.png"}, "/tools/base64": {"title": "Base64 Encoder/Decoder | Kemu Tools", "description": "文字列データをBase64に、Base64データを文字列に変換します。\n        マルチバイト文字にも対応しており、フロントエンドからバックエンドにJSON形式でファイルを送信する場合のダミーデータ作成などに便利です。", "img": "https://tech.trash-box.dev/assets/images/base64.png"}, "/tools/mdwriter": {"title": "GitHub Flavored Markdown Writer | Kemu Tools", "description": "GitHub Flavored MarkdownをHTMLに変換します。変換データ及び元のMarkdwonデータをワンクリックでコピー可能です。", "img": "https://tech.trash-box.dev/assets/images/mdwriter.png"}, "/tools/regex": {"title": "Regex Checker | Kemu Tools", "description": "正規表現とテキストを入力することでテキストを対象とした正規表現のテストを行い、index, マッチ文字列を返却します。", "img": "https://tech.trash-box.dev/assets/images/regex.png"}, "/tools/fx-calc": {"title": "FX Calculator | Kemu Tools", "description": "FXに利用する証拠金率、ロスカット値、購入可能の最大ロット数などの値を計算します。", "img": "https://tech.trash-box.dev/assets/images/fx-calc.png"}, "/tools/year": {"title": "Year Checker | Kemu Tools", "description": "誕生日をもとに各種卒業年度/厄年といった年月日を計算します。", "img": "https://tech.trash-box.dev/assets/images/year.png"}, "/tools/openapi": {"title": "OpenApi Viewer | Kemu Tools", "description": "OpenApi JSON/YAMLをSwagger-UI / Redoc UIで表示します。", "img": "https://tech.trash-box.dev/assets/images/openapi.png"}, "/tools/mermaid": {"title": "Mermaid Live Editor | Kemu Tools", "description": "Mermaidをリアルタイムで描画し、記述を支援します。", "img": "https://tech.trash-box.dev/assets/images/mermaid.png"}, "/snippets": {"title": "Snippets | Trash Box", "description": "開発時によく利用するスニペット置き場", "img": "https://tech.trash-box.dev/assets/images/snippets.png"}}