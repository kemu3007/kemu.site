{"url": "https://api.github.com/repos/kemu3007/portal/issues/44", "repository_url": "https://api.github.com/repos/kemu3007/portal", "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/44/comments", "events_url": "https://api.github.com/repos/kemu3007/portal/issues/44/events", "html_url": "https://github.com/kemu3007/portal/issues/44", "id": 1238798339, "node_id": "I_kwDOG7qoq85J1pAD", "number": 44, "title": "SEOを考えながらSPAをGitHub Pagesにデプロイする", "user": {"login": "kemu3007", "id": 29157528, "node_id": "MDQ6VXNlcjI5MTU3NTI4", "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kemu3007", "html_url": "https://github.com/kemu3007", "followers_url": "https://api.github.com/users/kemu3007/followers", "following_url": "https://api.github.com/users/kemu3007/following{/other_user}", "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}", "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions", "organizations_url": "https://api.github.com/users/kemu3007/orgs", "repos_url": "https://api.github.com/users/kemu3007/repos", "events_url": "https://api.github.com/users/kemu3007/events{/privacy}", "received_events_url": "https://api.github.com/users/kemu3007/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3898939400, "node_id": "LA_kwDOG7qoq87oZRgI", "url": "https://api.github.com/repos/kemu3007/portal/labels/article", "name": "article", "color": "C200E5", "default": false, "description": ""}, {"id": 3900074882, "node_id": "LA_kwDOG7qoq87odmuC", "url": "https://api.github.com/repos/kemu3007/portal/labels/Angular", "name": "Angular", "color": "D93F0B", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-17T15:15:57Z", "updated_at": "2022-05-17T16:00:18Z", "closed_at": null, "author_association": "OWNER", "active_lock_reason": null, "body": "\r\nGitHub Pages, Cloudflare PagesにSPAをデプロイする際、SEOの観点から注意しなくてはいけないこと、Angularデプロイのやり方についても説明します。\r\n\r\n## Angular デプロイ\r\n\r\n### GitHub Pages\r\n#### Build\r\n```bash\r\n$ npm run build\r\n$ cp portal/dist/portal/index.html portal/dist/portal/404.html\r\n```\r\n#### GitHub Actions\r\n```yml\r\njobs:\r\n  deploy:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      ...\r\n      - name: deploy gh-pages\r\n        uses: peaceiris/actions-gh-pages@v3\r\n        with:\r\n          github_token: ${{ secrets.GITHUB_TOKEN }}\r\n          publish_dir: ./portal/dist/portal\r\n          cname: portal.kemu.site\r\n```\r\n\r\nGitHub Pagesは指定されたディレクトリにファイルが存在しない場合、`404.html` を参照します。そのため、`404.html` にも`index.html` を参照するようにします。\r\n\r\n### Cloudflare Pages\r\n\r\nCloudflareのGitHub連携機能を利用するか、アップロードするActionsが提供されているため利用することになります。\r\n\r\n[Cloudflare Pages GitHub Action](https://github.com/marketplace/actions/cloudflare-pages-github-action)\r\n\r\n※ `uses: cloudflare/pages-action@1` とサンプルには記載されていますが `uses: cloudflare/pages-action@v1.0.0` と記載しない場合バージョンを見つけられず失敗するため注意してください。\r\n\r\n## 問題点\r\n\r\n### ルートディレクトリにしかファイルが存在していないため `blog/` などのパスにアクセスした場合`404` -> `200` という挙動になる。\r\n\r\n404が発生する場合Google Search Consoleはそのリンクを不正なリンクと判断し、インデックス登録に失敗してしまいます。\r\n\r\n302などについても同様です。（URL検査にのみ成功します。）\r\n\r\n#### 解決策\r\n\r\n自前でサーバをホストする場合、nginxのtry_filesを記載することで対応可能ですが、GitHub Pagesなどのマネージドサービスでは設定することができないため全てのURLに対応するディレクトリにルートの `index.html` をコピーして配置します。\r\n\r\nGoogleBot向けのダミーページを用意し、UserAgentによって振り分けるという手段をこれまで取っていたのですがダミーページ内容の管理の煩雑さ、モバイルフレンドリー判定との戦いがあり、少し面倒だったので `index.html` を大量配置するようにしました。\r\n\r\nGoogleBotとユーザに与えられる情報の違いはなるべく発生させない方が良く、最近のGoogleBotはAngularコードを解釈できる形でクロールを行うためそういった観点からもできる限りAngularのコードを読ませるべきです。\r\n\r\nuseHashなどのルータ機能を利用し、 `/#/blog/` といったようなリンクにすることで、404の発生を防ぐことが可能ですが、Googleの検索結果は `#` を含んだURLを正規化してしまうためSEO的には最悪になります。\r\n\r\n### Twitterに共有した場合TwitterのbotはJSを処理しないためOGPを読んでくれない。\r\n\r\nブログのようなサイトではTwitterの共有時などでOGPを展開してもらえない場合サイトへの流入数が著しく低下してしまう。\r\n\r\n#### 解決策\r\n\r\nOGPの存在する別ページを用意し、Twitter共有リンクをOGP専用ページに向け、OGP専用ページにユーザがアクセスした際は正しいURLに遷移させます。\r\n\r\nツイートボタンの挙動は `data-url` などのパラメータを以下のように記載することで変更可能です。\r\n\r\n今回は現在のリンクではなく `$` を先頭につけたリンクがツイート時に表示されるようにし、変更先のページではJSで `$` を削除したページにリダイレクトするように設定します。\r\n\r\n```ts\r\nimport { Component, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tweet-btn',\r\n  template: ` <div style=\"height: 30px;\">\r\n    <a id=\"btn\" href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\" class=\"twitter-share-button\" [attr.data-url]=\"url\"\r\n      >tweet</a\r\n    >\r\n  </div>`,\r\n})\r\nexport class TweetBtnComponent implements AfterViewInit {\r\n  ngAfterViewInit(): void {\r\n    const script = document.createElement('script');\r\n    script.async = true;\r\n    script.src = 'https://platform.twitter.com/widgets.js';\r\n    const btn = document.getElementById('btn')!;\r\n    btn.insertAdjacentElement('afterend', script);\r\n  }\r\n\r\n  get url() {\r\n    return window.location.origin + '/$' + window.location.pathname + window.location.search;\r\n  }\r\n}\r\n```\r\n\r\n`/$/blog/` -> `/blog/` にリダイレクトするようにし、JSを解釈しないTwitter Botのみを対象にOGPを提供するダミーページを用意します。\r\n\r\n主に上記2点がSEO上の問題点とその対応策です。\r\n\r\n今後何かSEO的な問題点、改善点についてある場合はまた別の記事にまとめていこうと思います。\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/kemu3007/portal/issues/44/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/44/timeline", "performed_via_github_app": null}