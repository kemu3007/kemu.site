{"url": "https://api.github.com/repos/kemu3007/portal/issues/9", "repository_url": "https://api.github.com/repos/kemu3007/portal", "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/9/comments", "events_url": "https://api.github.com/repos/kemu3007/portal/issues/9/events", "html_url": "https://github.com/kemu3007/portal/issues/9", "id": 1160543297, "node_id": "I_kwDOG7qoq85FLHxB", "number": 9, "title": "フロントエンドのテストを書く(スナップショットテスト編)", "user": {"login": "kemu3007", "id": 29157528, "node_id": "MDQ6VXNlcjI5MTU3NTI4", "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kemu3007", "html_url": "https://github.com/kemu3007", "followers_url": "https://api.github.com/users/kemu3007/followers", "following_url": "https://api.github.com/users/kemu3007/following{/other_user}", "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}", "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions", "organizations_url": "https://api.github.com/users/kemu3007/orgs", "repos_url": "https://api.github.com/users/kemu3007/repos", "events_url": "https://api.github.com/users/kemu3007/events{/privacy}", "received_events_url": "https://api.github.com/users/kemu3007/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3898939400, "node_id": "LA_kwDOG7qoq87oZRgI", "url": "https://api.github.com/repos/kemu3007/portal/labels/article", "name": "article", "color": "C200E5", "default": false, "description": ""}, {"id": 3900074882, "node_id": "LA_kwDOG7qoq87odmuC", "url": "https://api.github.com/repos/kemu3007/portal/labels/Angular", "name": "Angular", "color": "D93F0B", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-03-06T07:47:02Z", "updated_at": "2022-03-06T15:20:21Z", "closed_at": null, "author_association": "OWNER", "active_lock_reason": null, "body": "### 環境\r\nAngular 13, node 16\r\n\r\n今回はjestを利用するためデフォルトで入っているKarmaを削除します\r\n```sh\r\nnpm run ng add @briebug/jest-schematic\r\n```\r\n\r\n参考: https://github.com/briebug/jest-schematic\r\n\r\n### テストを書く\r\n- app.component.spec.ts\r\n\r\n```ts\r\n  it('snapshot test', () => {\r\n    const fixture = TestBed.createComponent(AppComponent);\r\n    fixture.detectChanges();\r\n    const compiled = fixture.nativeElement;\r\n    expect(compiled).toMatchSnapshot();\r\n  })\r\n```\r\n\r\n### 実行\r\n\r\n`npm run test`でテストを実行する際、既存のスナップショットがない、もしくは` --update-snapshot`がオプションで付けられた場合、`__snapshots__`ディレクトリが作成されます。以下はその例です。\r\n\r\n- `__snapshots__/app.component.spec.ts.snap`\r\n\r\n```ts\r\n// Jest Snapshot v1, https://goo.gl/fbAQLP\r\n\r\nexports[`AppComponent snapshot test 1`] = `\r\n<div\r\n  id=\"root2\"\r\n>\r\n  <mat-toolbar>\r\n    <mat-toolbar-row\r\n      style=\"padding: 0 16px 0 0;\"\r\n    >\r\n      <button\r\n        mat-button=\"\"\r\n      >\r\n...\r\n```\r\nテスト失敗時には以下のように表示されます。\r\n\r\n```bash\r\n    expect(received).toMatchSnapshot()\r\n\r\n    Snapshot name: `AppComponent snapshot test 1`\r\n\r\n    - Snapshot  - 1\r\n    + Received  + 1\r\n\r\n    @@ -1,11 +1,11 @@\r\n      <div\r\n        id=\"root2\"\r\n      >\r\n        <mat-toolbar>\r\n          <mat-toolbar-row\r\n    -       style=\"padding: 0 16px 0 0;\"\r\n    +       style=\"padding: 1 16px 0 0;\"\r\n          >\r\n            <button\r\n              mat-button=\"\"\r\n            >\r\n              <mat-icon>\r\n\r\n      33 |     fixture.detectChanges();\r\n      34 |     const compiled = fixture.nativeElement;\r\n    > 35 |     expect(compiled).toMatchSnapshot();\r\n         |                      ^\r\n      36 |   })\r\n      37 | });\r\n      38 |\r\n\r\n      at src/app/app.component.spec.ts:35:22\r\n      at ZoneDelegate.Object.<anonymous>.ZoneDelegate.invoke (node_modules/zone.js/bundles/zone-testing-bundle.umd.js:407:30)\r\n      at ProxyZoneSpec.Object.<anonymous>.ProxyZoneSpec.onInvoke (node_modules/zone.js/bundles/zone-testing-bundle.umd.js:3765:43)\r\n      at ZoneDelegate.Object.<anonymous>.ZoneDelegate.invoke (node_modules/zone.js/bundles/zone-testing-bundle.umd.js:406:56)\r\n      at Zone.Object.<anonymous>.Zone.run (node_modules/zone.js/bundles/zone-testing-bundle.umd.js:167:47)\r\n      at Object.wrappedFunc (node_modules/zone.js/bundles/zone-testing-bundle.umd.js:4250:34)\r\n\r\n › 1 snapshot failed.\r\nSnapshot Summary\r\n › 1 snapshot failed from 1 test suite. Inspect your code changes or re-run jest with `-u` to update them.\r\n\r\nTest Suites: 1 failed, 1 total\r\nTests:       1 failed, 2 passed, 3 total\r\nSnapshots:   1 failed, 1 total\r\nTime:        1.667 s, estimated 2 s\r\nRan all test suites.\r\n```\r\n\r\n### テストの意味\r\n\r\nフロントエンドに対する修正を行った際、修正点の影響を軽くassertすることができます。\r\n\r\n問題点は以下の通りです。\r\n\r\n- cssをstyle形式でインライン記述しないとassertできない\r\n- 条件に応じて表示されるコンポーネントに関しては別途patchしてassertする必要あり(snapshotを毎回とっていると遅いので)\r\n\r\ncssに関しては顕著でテストで見るためにはインラインで記述する必要があるけれどcssをインラインで記述して可読性を下げたくないというジレンマに襲われます。\r\n\r\n### 注意点\r\n\r\n`__snapshots__` ディレクトリは見た目はちょっとあれですがgitに管理させる必要があります。\r\n\r\n### 総評\r\n\r\nまあ過度な期待はせずに軽く分かればいいかなというレベルのテストです。", "reactions": {"url": "https://api.github.com/repos/kemu3007/portal/issues/9/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/9/timeline", "performed_via_github_app": null}