{
    "url": "https://api.github.com/repos/kemu3007/portal/issues/44",
    "repository_url": "https://api.github.com/repos/kemu3007/portal",
    "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/44/labels{/name}",
    "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/44/comments",
    "events_url": "https://api.github.com/repos/kemu3007/portal/issues/44/events",
    "html_url": "https://github.com/kemu3007/portal/issues/44",
    "id": 1238798339,
    "node_id": "I_kwDOG7qoq85J1pAD",
    "number": 44,
    "title": "将SPA部署到GitHub页面并考虑到SEO。",
    "user": {
        "login": "kemu3007",
        "id": 29157528,
        "node_id": "MDQ6VXNlcjI5MTU3NTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kemu3007",
        "html_url": "https://github.com/kemu3007",
        "followers_url": "https://api.github.com/users/kemu3007/followers",
        "following_url": "https://api.github.com/users/kemu3007/following{/other_user}",
        "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions",
        "organizations_url": "https://api.github.com/users/kemu3007/orgs",
        "repos_url": "https://api.github.com/users/kemu3007/repos",
        "events_url": "https://api.github.com/users/kemu3007/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kemu3007/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3898939400,
            "node_id": "LA_kwDOG7qoq87oZRgI",
            "url": "https://api.github.com/repos/kemu3007/portal/labels/article",
            "name": "article",
            "color": "C200E5",
            "default": false,
            "description": ""
        },
        {
            "id": 3900074882,
            "node_id": "LA_kwDOG7qoq87odmuC",
            "url": "https://api.github.com/repos/kemu3007/portal/labels/Angular",
            "name": "Angular",
            "color": "D93F0B",
            "default": false,
            "description": ""
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-05-17T15:15:57Z",
    "updated_at": "2022-05-17T16:00:18Z",
    "closed_at": null,
    "author_association": "OWNER",
    "active_lock_reason": null,
    "body": "\n本节还解释了在将SPA部署到GitHub页面、Cloudflare页面以及如何进行Angular部署时，从SEO角度需要注意的事项。\n\n## Angular部署\n\n### GitHub页面。\n#### 建立\n```bash\n$ npm run build\n$ cp portal/dist/portal/index.html portal/dist/portal/404.html\n```\n#### GitHub行动\n```yml\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      ...\n      - name: deploy gh-pages\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          publish_dir: ./portal/dist/portal\n          cname: portal.kemu.site\n```\n\n如果文件不存在于指定的目录中，GitHub页面会引用`404.html`。因此，要确保`404.html`也指的是`index.html`。\n\n### Cloudflare页面。\n\n您可以使用Cloudflare的GitHub集成功能或使用提供的Actions进行上传。\n\n[Cloudflare Pages GitHub Action](https://github.com/marketplace/actions/cloudflare- pages- github- action)\n\n请注意，样本中提到了`uses: cloudflare/pages- action@1`，但如果你没有提到`uses: cloudflare/pages- action@v1.0.0`，它将无法找到该版本。\n\n##问题。\n\n### ### 如果一个路径如`blog/`被访问，因为文件只存在于根目录中，行为是`404`- >`200`。\n\n如果出现404，Google Search Console将认为该链接是一个无效的链接，将无法对其进行索引。\n\n这同样适用于302等。(只在URL检查中成功)。\n\n#### 解决方案。\n\n如果你托管自己的服务器，这可以通过说明nginx try_files来处理，但要复制并将根`index.html`放在与所有URL对应的目录中，因为用GitHub Pages这样的管理服务是不可能设置的。\n\n然而，在管理虚拟页面的内容方面有一些复杂的问题，而且与移动友好的决定有争执，有点麻烦，所以我开始放置大量的`index.html`。我们现在已经做到了这一点。\n\nGoogleBot和给用户的信息之间的差异应该尽可能地减少，从这个角度来看，应该可以让GoogleBot读取Angular代码，因为它现在的爬行方式可以解释Angular代码。\n\n通过使用诸如useHash这样的路由器函数并使链接`/#/blog/`来避免404是可能的，但这对SEO不利，因为Google搜索结果会将包含`#`的URL正常化。\n\n### 如果你分享到Twitter，Twitter机器人不处理JS，不会读取OGP。\n\n对于博客等网站来说，如果不部署OGP，例如在Twitter上分享时，网站的访问量将大幅下降。\n\n#### 解决方案。\n\n准备一个存在OGP的单独页面，将Twitter分享链接引向OGP专用页面，当用户访问OGP专用页面时，他们将被重定向到正确的URL。\n\n鸣叫按钮的行为可以通过包括诸如`data- url`等参数来改变，如下所示。\n\n这一次，以`$`为前缀的链接将显示在推文中，而不是当前的链接，要改变的页面将被设置为重定向到JS中删除`$`的页面。\n\n```ts\nimport { Component, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tweet-btn',\n  template: ` <div style=\"height: 30px;\">\n    <a id=\"btn\" href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\" class=\"twitter-share-button\" [attr.data-url]=\"url\"\n      >tweet</a\n    >\n  </div>`,\n})\nexport class TweetBtnComponent implements AfterViewInit {\n  ngAfterViewInit(): void {\n    const script = document.createElement('script');\n    script.async = true;\n    script.src = 'https://platform.twitter.com/widgets.js';\n    const btn = document.getElementById('btn')!;\n    btn.insertAdjacentElement('afterend', script);\n  }\n\n  get url() {\n    return window.location.origin + '/$' + window.location.pathname + window.location.search;\n  }\n}\n```\n\n重定向到`/$/blog/` - > `/blog/`，并有一个虚拟页面，只为不解释JS的Twitter Bots提供OGPs。\n\n以上是两个主要的SEO问题和解决措施。\n\n如果将来有任何SEO问题或改进，我将在另一篇文章中进行总结。\n",
    "reactions": {
        "url": "https://api.github.com/repos/kemu3007/portal/issues/44/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/44/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}