{
  "url": "https://api.github.com/repos/kemu3007/portal/issues/45",
  "repository_url": "https://api.github.com/repos/kemu3007/portal",
  "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/45/labels{/name}",
  "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/45/comments",
  "events_url": "https://api.github.com/repos/kemu3007/portal/issues/45/events",
  "html_url": "https://github.com/kemu3007/portal/issues/45",
  "id": 1239705698,
  "node_id": "I_kwDOG7qoq85J5Ghi",
  "number": 45,
  "title": "尝试Django 4.1异步视图，异步ORM",
  "user": {
    "login": "kemu3007",
    "id": 29157528,
    "node_id": "MDQ6VXNlcjI5MTU3NTI4",
    "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kemu3007",
    "html_url": "https://github.com/kemu3007",
    "followers_url": "https://api.github.com/users/kemu3007/followers",
    "following_url": "https://api.github.com/users/kemu3007/following{/other_user}",
    "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions",
    "organizations_url": "https://api.github.com/users/kemu3007/orgs",
    "repos_url": "https://api.github.com/users/kemu3007/repos",
    "events_url": "https://api.github.com/users/kemu3007/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kemu3007/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3898939400,
      "node_id": "LA_kwDOG7qoq87oZRgI",
      "url": "https://api.github.com/repos/kemu3007/portal/labels/article",
      "name": "article",
      "color": "C200E5",
      "default": false,
      "description": ""
    },
    {
      "id": 3900075763,
      "node_id": "LA_kwDOG7qoq87odm7z",
      "url": "https://api.github.com/repos/kemu3007/portal/labels/Django",
      "name": "Django",
      "color": "5FC353",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-05-18T09:48:28Z",
  "updated_at": "2022-05-18T13:36:03Z",
  "closed_at": null,
  "author_association": "OWNER",
  "active_lock_reason": null,
  "body": "\nDjango 4.1alpha1发布了，我们检查了新的功能和行为。\n\n[Django 4.1 alpha 1发布](https://www.djangoproject.com/weblog/2022/may/18/django- 41- alpha- 1- released/)\n[Django 4.1发布说明](https://docs.djangoproject.com/en/dev/releases/4.1/)\n\nDjango 4.1中值得关注的两点是\n\n-  基于类的视图的异步处理程序\n-  异步ORM接口\n\n\n## ＃＃介绍\n```bash\n$ pip install \"Django==4.1a1\"\n```\n\n##检查依赖性\n依赖关系与Django 3.2相同。(pytz刚刚消失了）。\n```text\nasgiref==3.5.2\nDjango==4.1a1\nsqlparse==0.4.2\n```\n\n\n## 基于类的视图的异步处理程序\n1秒后返回响应的视图，因为是官方介绍的，虽然使用asyncio没有特别的意义。\n\n```python\nimport asyncio\nfrom django.http import HttpResponse\nfrom django.views import View\n\n\nclass AsyncView(View):\n    async def get(self, request, *args, **kwargs):\n        \"\"\"1秒待機後にレスポンスを返却する\"\"\"\n        await asyncio.sleep(1)\n        return HttpResponse(\"Hello World\")\n```\n\n##异步ORM接口\n-  以下是`django/db/models/query.py`中的新函数。\n-  看一下实现，asgiref `asgiref/sync/sync_to_async`被用来使同步函数异步化。\n\n```text\naiterator\naaggregate\nacount\naget\nacreate\nabulk_create\nabulk_update\naget_or_create\naupdate_or_create\naearliest\nalatest\nafirst\nalast\nain_bulk\nadelete\naupdate\naexists\nacontains\naexplain\n```\n\n## 检查异步操作\n如果进行正常的同步过程，该过程按以下步骤进行。\n\n抛出查询A到DB - > 查询A的结果返回 - > 抛出查询B到DB - > 查询B的结果返回\n\n如果实现了异步操作，预计会有以下行为\n\n抛出查询A到DB - > 抛出查询B到DB - > 返回查询A结果 - > 返回查询B结果\n\n\n```py\nimport asyncio\nimport time\n\nfrom django.contrib.auth.models import User\nfrom django.contrib.sessions.models import Session\nfrom django.http import HttpResponse\nfrom django.views import View\nfrom model_bakery import baker\n\ndef bulk_create(process: str, model, instances):\n    start = time.time()\n    print(f\"sync start_create {process}\")\n    model.objects.bulk_create(instances)\n    print(f\"sync   end_agg {process} {time.time() - start}\")\n\n\nclass SyncGetView(View):\n    def get(self, request, *args, **kwargs):\n        users = baker.prepare(User, _quantity=3000)\n        sessions = baker.prepare(Session, _quantity=3000)\n        start = time.time()\n        bulk_create(\"user\", User, users)\n        bulk_create(\"session\", Session, sessions)\n        end = time.time()\n        return HttpResponse(f\"{end - start}\")\n\n\nasync def abulk_create(process: str, model, instances):\n    start = time.time()\n    print(f\"async start_create {process}\")\n    await model.objects.abulk_create(instances)\n    print(f\"async   end_agg {process} {time.time() - start}\")\n\n\nclass AsyncGetView(View):\n    async def get(self, request, *args, **kwargs):\n        users = baker.prepare(User, _quantity=3000)\n        sessions = baker.prepare(Session, _quantity=3000)\n        start = time.time()\n        await asyncio.gather(abulk_create(\"user\", User, users), abulk_create(\"session\", Session, sessions))\n        end = time.time()\n        return HttpResponse(f\"{end - start}\")\n```\n这段代码测量`bulk_create'或`abulk_create'被调用的时间和所花费的时间。\n\n###输出结果\n\n#### 同步过程\n```text\ndjango_4_1_sample-web-1  | sync start_create user\ndjango_4_1_sample-web-1  | sync   end_create user 1.0495100021362305\ndjango_4_1_sample-web-1  | sync start_create session\ndjango_4_1_sample-web-1  | sync   end_create session 0.22738051414489746\n```\n\n#### 异步处理\n```text\ndjango_4_1_sample-web-1  | async start_create user\ndjango_4_1_sample-web-1  | async start_create session\ndjango_4_1_sample-web-1  | async   end_create user 0.8275012969970703\ndjango_4_1_sample-web-1  | async   end_create session 1.0836100578308105\n```\n\n`start_create'的时间表明，正在进行异步处理。\n\n这次使用的model_bakery准备的实例是随机生成的，由于DB没有分离，后来测试的一方是在记录数不同的情况下，所以意义不大，所以不予考虑。\n\n\n##在这种情况下使用的代码。\n\n[django_4_1_sample](https://github.com/kemu3007/django_4_1_sample)",
  "reactions": {
    "url": "https://api.github.com/repos/kemu3007/portal/issues/45/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/45/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
