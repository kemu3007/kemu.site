{
  "url": "https://api.github.com/repos/kemu3007/portal/issues/8",
  "repository_url": "https://api.github.com/repos/kemu3007/portal",
  "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/8/labels{/name}",
  "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/8/comments",
  "events_url": "https://api.github.com/repos/kemu3007/portal/issues/8/events",
  "html_url": "https://github.com/kemu3007/portal/issues/8",
  "id": 1160543248,
  "node_id": "I_kwDOG7qoq85FLHwQ",
  "number": 8,
  "title": "DRF 限制显示与DRF绑定的模型数量。",
  "user": {
    "login": "kemu3007",
    "id": 29157528,
    "node_id": "MDQ6VXNlcjI5MTU3NTI4",
    "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kemu3007",
    "html_url": "https://github.com/kemu3007",
    "followers_url": "https://api.github.com/users/kemu3007/followers",
    "following_url": "https://api.github.com/users/kemu3007/following{/other_user}",
    "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions",
    "organizations_url": "https://api.github.com/users/kemu3007/orgs",
    "repos_url": "https://api.github.com/users/kemu3007/repos",
    "events_url": "https://api.github.com/users/kemu3007/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kemu3007/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3898939400,
      "node_id": "LA_kwDOG7qoq87oZRgI",
      "url": "https://api.github.com/repos/kemu3007/portal/labels/article",
      "name": "article",
      "color": "C200E5",
      "default": false,
      "description": ""
    },
    {
      "id": 3900075763,
      "node_id": "LA_kwDOG7qoq87odm7z",
      "url": "https://api.github.com/repos/kemu3007/portal/labels/Django",
      "name": "Django",
      "color": "5FC353",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-03-06T07:46:40Z",
  "updated_at": "2022-03-06T15:20:58Z",
  "closed_at": null,
  "author_association": "OWNER",
  "active_lock_reason": null,
  "body": "在django中有一个叫做`prefetch_related`的功能，允许你通过说明以下内容来抑制正在发出的SQL。\n\n```python\nArticle.objects.prefetch_related(\"tags\")\n```\n\n来在缓存中存储ManyToMany值，并减少发出的SQL的数量。\n\n这个函数被应用于\n\n```python\nclass ArticleViewSets(ModelViewSet):\n    def get_queryset(self):\n        return Article.objects.all().prefetch_related(Prefetch(\"tags\", Tag.objects.filter(enable=True)))\n```\n\n可以通过说明来过滤返回的article.tags值\n\n然而，这种方法不允许根据记录来改变显示，例如，只有当文章的状态为草稿时才清空标签的内容，而当状态为发布时才发布所有的标签。\n\n\n`prefetch_related_objects`用于此目的。\n\n如果使用PREFETCH_RELATED_OBJECT编写上述过程，它将看起来像下面这样。\n\n\n```python\nclass ArticleViewSets(ModelViewSet):\n    def retrieve(self, request, *args, **kwargs):\n        instance: Article = self.get_object()\n        tags = Tag.objects.all()\n        # ステータスに応じて返却するファイルを制限する\n        if instance.status == Article.StatusChoices.DRAFT:\n             tags = Tag.objects.none()\n        prefetch_related_objects([instance], Prefetch(\"tags\", tags ))\n        serializer = self.get_serializer(instance)\n        return Response(serializer.data)\n```\n\n可以通过说明这一点对要返回的标签的值进行限制。",
  "reactions": {
    "url": "https://api.github.com/repos/kemu3007/portal/issues/8/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/8/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
