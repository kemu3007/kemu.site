{"url": "https://api.github.com/repos/kemu3007/portal/issues/47", "repository_url": "https://api.github.com/repos/kemu3007/portal", "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/47/comments", "events_url": "https://api.github.com/repos/kemu3007/portal/issues/47/events", "html_url": "https://github.com/kemu3007/portal/issues/47", "id": 1250315076, "node_id": "I_kwDOG7qoq85KhktE", "number": 47, "title": "Angular + Scully Server Side Generate を試す", "user": {"login": "kemu3007", "id": 29157528, "node_id": "MDQ6VXNlcjI5MTU3NTI4", "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kemu3007", "html_url": "https://github.com/kemu3007", "followers_url": "https://api.github.com/users/kemu3007/followers", "following_url": "https://api.github.com/users/kemu3007/following{/other_user}", "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}", "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions", "organizations_url": "https://api.github.com/users/kemu3007/orgs", "repos_url": "https://api.github.com/users/kemu3007/repos", "events_url": "https://api.github.com/users/kemu3007/events{/privacy}", "received_events_url": "https://api.github.com/users/kemu3007/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3898939400, "node_id": "LA_kwDOG7qoq87oZRgI", "url": "https://api.github.com/repos/kemu3007/portal/labels/article", "name": "article", "color": "C200E5", "default": false, "description": ""}, {"id": 3900074882, "node_id": "LA_kwDOG7qoq87odmuC", "url": "https://api.github.com/repos/kemu3007/portal/labels/Angular", "name": "Angular", "color": "D93F0B", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-27T04:12:36Z", "updated_at": "2022-06-02T17:34:23Z", "closed_at": null, "author_association": "OWNER", "active_lock_reason": null, "body": "\r\n## Introduction\r\n\r\n```bash\r\n$ npm config set legacy-peer-deps true\r\n$ npm run ng add @scullyio/init\r\n```\r\n※ legacy-peer-depsは手元の環境で実行したところnpmのバージョン問題で失敗したため追加しています。\r\n※ テスト時にはpuppeteerを利用しました\r\n\r\n\r\n## レンダリング\r\n\r\n導入すると `package.json` にコマンドが追加されているため利用します。\r\n- package.json\r\n\r\n```json\r\n{\r\n\t\"scripts\": {\r\n\t\t...\r\n\t\t\"scully\": \"npx scully --\",\r\n\t\t\"scully:serve\": \"npx scully serve --\"\r\n\t},\r\n\t...\r\n},\r\n\r\n```\r\n\r\nbuildデータを元にscullyを実行するため、先にbuildを実行しレンダリングを行います。\r\n```bash\r\n$ npm run build\r\n$ npm run scully\r\n```\r\n\r\nこれにより、 `dist/static` ディレクトリにレンダリング結果が出力されます。\r\n\r\n\r\n## 動的なパスのレンダリング\r\n\r\n上記のレンダリングではrouterに直接pathが書かれている場合は良いのですが `blog/:id` などのような動的パスを利用している場合出力されません。\r\n\r\nそのため、`scully/plugins/plugin.ts` に情報を追記します。\r\n\r\n```ts\r\nimport { registerPlugin, HandledRoute } from '@scullyio/scully';\r\nimport blogs from '../../src/assets/articles/list.json';\r\n\r\nconst blogRoutes: HandledRoute[] = Object.keys(blogs).map(blogId => ({ route: `/blog/${blogId}` }))\r\n\r\nfunction blogRoutesPlugin(_route: string, _config = {}) {\r\n  return Promise.resolve(blogRoutes)\r\n}\r\n\r\nregisterPlugin('router', \"blogIds\", blogRoutesPlugin, [])\r\n\r\n```\r\n\r\nJSONをimportする場合は `scully/tsconfig.json` の `resolveJsonModule` オプションを有効化する必要があります。\r\n\r\nプラグインを登録したため、`scully.{project_name}.config.ts` の `routes` に設定を記載します。\r\n\r\n```ts\r\nimport { ScullyConfig } from '@scullyio/scully';\r\nimport './scully/plugins/plugin'\r\n\r\n/** this loads the default render plugin, remove when switching to something else. */\r\nimport '@scullyio/scully-plugin-puppeteer'\r\n\r\n\r\n\r\nexport const config: ScullyConfig = {\r\n  projectRoot: \"./src\",\r\n  projectName: \"portal\",\r\n  // add spsModulePath when using de Scully Platform Server,\r\n  outDir: './dist/static',\r\n  routes: {\r\n    \"/log/:id\": {\r\n      type: \"logIds\",\r\n    },\r\n    \"/blog/:id\": {\r\n      type: \"blogIds\",\r\n    }\r\n  }\r\n};\r\n```\r\n\r\nこの設定後また `npm run scully` を実行しビルドすることでレンダリングが行われます。\r\n\r\n## 生成したファイルの確認\r\n\r\nもう一つのコマンド `npm run scully:serve` を実行することでホストすることができます。\r\n\r\n```bash\r\n$ npm run scully:serve\r\n\r\n> portal@0.0.0 scully:serve\r\n> npx scully serve --\r\n\r\n  ✔ Starting servers for project \"portal\"\r\n  ✔ Started Scully static server on \"http://localhost:1668/\"\r\n  ✔ Started Angular distribution server on \"http://localhost:1864/\" \r\n```\r\n\r\n## SSGにすることによる利点\r\n\r\n- JSで設定した画像、タイトル、説明などのOGPがちゃんと表示されるようになります。\r\n- ファイルが存在するためGitHub Pages, Cloudflare Pagesなどを利用した際のリダイレクト処理がなくなります。\r\n\r\n## 終わりに\r\n\r\n今回触ってみた感じ良さそうなので一旦これを利用してホストしようかなと考えています。\r\nGoogle Search Consoleのインデックス処理と格闘する日々なので改善するといいな...\r\n\r\n\r\n今回のコードは[こちら](https://github.com/kemu3007/portal/blob/master/portal/scully.portal.config.ts)", "reactions": {"url": "https://api.github.com/repos/kemu3007/portal/issues/47/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/47/timeline", "performed_via_github_app": null, "state_reason": null}