{
    "url": "https://api.github.com/repos/kemu3007/portal/issues/16",
    "repository_url": "https://api.github.com/repos/kemu3007/portal",
    "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/16/labels{/name}",
    "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/16/comments",
    "events_url": "https://api.github.com/repos/kemu3007/portal/issues/16/events",
    "html_url": "https://github.com/kemu3007/portal/issues/16",
    "id": 1169430844,
    "node_id": "I_kwDOG7qoq85FtBk8",
    "number": 16,
    "title": "Django Rest Framework",
    "user": {
        "login": "kemu3007",
        "id": 29157528,
        "node_id": "MDQ6VXNlcjI5MTU3NTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kemu3007",
        "html_url": "https://github.com/kemu3007",
        "followers_url": "https://api.github.com/users/kemu3007/followers",
        "following_url": "https://api.github.com/users/kemu3007/following{/other_user}",
        "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions",
        "organizations_url": "https://api.github.com/users/kemu3007/orgs",
        "repos_url": "https://api.github.com/users/kemu3007/repos",
        "events_url": "https://api.github.com/users/kemu3007/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kemu3007/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3898939400,
            "node_id": "LA_kwDOG7qoq87oZRgI",
            "url": "https://api.github.com/repos/kemu3007/portal/labels/article",
            "name": "article",
            "color": "C200E5",
            "default": false,
            "description": ""
        },
        {
            "id": 3900075763,
            "node_id": "LA_kwDOG7qoq87odm7z",
            "url": "https://api.github.com/repos/kemu3007/portal/labels/Django",
            "name": "Django",
            "color": "5FC353",
            "default": false,
            "description": ""
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-03-15T09:53:45Z",
    "updated_at": "2022-03-28T12:45:19Z",
    "closed_at": null,
    "author_association": "OWNER",
    "active_lock_reason": null,
    "body": "Note that there was an opportunity to generate OpenAPI documents from the API\n\nSince there is a command `generateschema` in the DRF itself\n\n```zsh\n$ python manage.py generateschema > schema.yml\n```\n\nThe schema file will be generated only by executing.\n\n<>s>\n<summary>schema.yml</summary>\n\n```yml\nopenapi: 3.0.2\ninfo:\n  title: ''\n  version: ''\npaths:\n  /api/v1/article/:\n    get:\n      operationId: listArticles\n      description: ''\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Article'\n          description: ''\n      tags:\n      - api\n    post:\n      operationId: createArticle\n      description: ''\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Article'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Article'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Article'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Article'\n          description: ''\n      tags:\n      - api\n  /api/v1/article/{id}/:\n    get:\n      operationId: retrieveArticle\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this article.\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Article'\n          description: ''\n      tags:\n      - api\ncomponents:\n  schemas:\n    Article:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        subject:\n          type: string\n          maxLength: 255\n        body:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        is_draft:\n          type: boolean\n      required:\n      - subject\n\n```\n</>s>\n\n - - - \n\n<img width=\"713\" alt=\"Screenshot 2022- 03- 15 18 27 49\" src=\"https://user- images.githubusercontent.com/29157528/158347543- edb65a5a- 1148- 42dc- 9e5e- ea2b325c2ef7.png\">\n\n - - - \n\nI think that DRF command is enough if it is a project that matches the type of input and the type of output.\n\nHowever, if the output is only status_code=201 API, it will not function.\n\n```py\nclass ArticleViewSets(ModelViewSet):\n    queryset = Article.objects.all()\n    serializer_class = ArticleSerializer\n    http_method_names = [\"get\", \"post\"]\n\n    def create(self, *args, **kwargs):\n        return Response(status=201)\n```\n\n↓Response(status=201) is returned but not reflected in schema.\n\n<img width=\"703\" alt=\"Screenshot 2022- 03- 15 18 34 22\" src=\"https://user- images.githubusercontent.com/29157528/158348870- 530ea38a- 20e8- 4f4 c63- 915683d722b2.png\">\n\n - - - \n\nUse [drf- specta。] (https://github.com/tfranzel/drf- specta。) to easily output schema by explicitly入力ing input/output serializer.\n\ninstall\n```zsh\n$ pip install drf-spectacular\n```\n\nsettings.py\n```py\nINSTALLED_APPS = [\n  ...\n  'drf_spectacular'\n]\nREST_FRAMEWORK = {\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n}\n```\n\nViewets.py\n```py\nclass NoInputSerializer(Serializer):\n    \"\"\"スキーマ出力用シリアライザ\"\"\"\n\n\nclass ArticleSerializer(ModelSerializer):\n    class Meta:\n        model = Article\n        fields = [\"id\", \"subject\", \"body\", \"created_at\", \"updated_at\", \"is_draft\"]\n\n\n@extend_schema_view(\n    list=extend_schema(responses=ArticleSerializer),\n    create=extend_schema(request=ArticleSerializer, responses=NoInputSerializer)\n)\nclass ArticleViewSets(ModelViewSet):\n    queryset = Article.objects.all()\n    serializer_class = ArticleSerializer\n    http_method_names = [\"get\", \"post\"]\n\n    def create(self, *args, **kwargs):\n        return Response(status=200)\n```\nOutput work\n```zsh\n$ python manage.py spectacular --file schema.yml\n```\n\n<>s>\n<summary> schema.yml </summary>\n\n```yml\nopenapi: 3.0.3\ninfo:\n  title: ''\n  version: 0.0.0\npaths:\n  /api/v1/article/:\n    get:\n      operationId: api_v1_article_list\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Article'\n          description: ''\n    post:\n      operationId: api_v1_article_create\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Article'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Article'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Article'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '201':\n          description: No response body\n  /api/v1/article/{id}/:\n    get:\n      operationId: api_v1_article_retrieve\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this article.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Article'\n          description: ''\ncomponents:\n  schemas:\n    Article:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        subject:\n          type: string\n          title: 題名\n          maxLength: 255\n        body:\n          type: string\n          title: 記事\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n          title: 作成日\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n          title: 更新日\n        is_draft:\n          type: boolean\n          title: 下書き状態\n      required:\n      - created_at\n      - id\n      - subject\n      - updated_at\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n    cookieAuth:\n      type: apiKey\n      in: cookie\n      name: sessionid\n```\n</>s>\n\nThe output value is removed in the specified format.\n\n<img width=\"711\" alt=\"Screenshot 2022- 03- 15 18 47 58\" src=\"https://user- images.githubusercontent.com/29157528/158351424- cfa4b177- 5 7- 442f- 96d3- b3c8e1bb059f.png\">\n\n - - - \n\nNow you can generate OpenAPI documents.\nを生成するrate OpenAPI documents for frontend type generation and API documentation.\n\nIn gitlab, you can see the file name in sw。 format by という名前ing it with the name `sw .yml`.\nI would like to introduce it to github.",
    "reactions": {
        "url": "https://api.github.com/repos/kemu3007/portal/issues/16/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/16/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}