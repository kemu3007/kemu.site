{"1160526026": {"title": "Stops clogged with Google AdSense, site configuration, etc.", "created_at": "2022-03-06T05:51:34Z", "updated_at": "2022-04-04T05:16:06Z", "body": "The configuration of this site is in the form of name dot com-> Route 53-> AWS Alb-> AWS EC2.At the beginning of the implementation, it was a name dot com-> AWS Alb-> AWS EC2, but registered with AdSense & ALB specification", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Utils", "color": "170627"}]}, "1160542827": {"title": "Django Shortcuts Summary", "created_at": "2022-03-06T07:44:00Z", "updated_at": "2022-03-12T07:59:29Z", "body": "[Django Shortcuts] Render Py Def Render (Request, Template_name, Context = None, Content_Type = None, Status = None, USING = None): \"\" \":\" \"\"", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Django", "color": "5FC353"}]}, "1160542878": {"title": "Convert Markdown to HTML/CSS", "created_at": "2022-03-06T07:44:22Z", "updated_at": "2022-03-06T15:21:56Z", "body": "Markdown can be converted to HTML by using the following libraries.[Python-Markdown] Install Bash> Pip Install Markdown conversion to html >>> Markdow", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Python", "color": "1D76DB"}]}, "1160542944": {"title": "Django4.0 has been released, so try it properly", "created_at": "2022-03-06T07:44:51Z", "updated_at": "2022-03-12T07:52:04Z", "body": "[RELEASE NOTES] Dependent library -django 3.2 asgiref == 3.4.1 pytz == 2021.3 sqlparse == 0.4.2 -django4.0 asgiref == 3.4.1 backports.zo", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Django", "color": "5FC353"}]}, "1160543028": {"title": "Automatically generate Django Admin", "created_at": "2022-03-06T07:45:18Z", "updated_at": "2022-03-06T15:21:16Z", "body": "I forgot to register Admin and it was troublesome, so leave it as a note.Convenient timing -I don't want to focus much on Django Admin, but I want the minimum function -I want to do something because I forget Admin.site.Register when adding a model.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Django", "color": "5FC353"}]}, "1160543074": {"title": "Handling Angular Form for Type Safe", "created_at": "2022-03-06T07:45:35Z", "updated_at": "2022-03-26T09:31:18Z", "body": "Use @ngneat/Reactive-forms to write Form in Type Safe.--- Normal Angular Form TS IMPORT {Formbuilder} from '@Angular/Forms'; Construc", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Angular", "color": "D93F0B"}]}, "1160543248": {"title": "Limit the number of displayed models linked to the DRF", "created_at": "2022-03-06T07:46:40Z", "updated_at": "2022-03-06T15:20:58Z", "body": "Django has a function called Prefetch_related, and you can suppress SQL issued by describing as follows.Manyt by describing Python Article.objects.prefetch_related (\"Tags\")", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Django", "color": "5FC353"}]}, "1160543297": {"title": "Write a front -end test (snapshot test edition)", "created_at": "2022-03-06T07:47:02Z", "updated_at": "2022-03-06T15:20:21Z", "body": "Environment Angular 13, Node 16 This time, delete the karma contained by default to use JEST Sh NPM RUN NG ADD @Briebug/Jest-Schematic Reference: https://github.com/bRie", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Angular", "color": "D93F0B"}]}, "1160543378": {"title": "Use Gmail API Push Notification", "created_at": "2022-03-06T07:47:32Z", "updated_at": "2022-03-06T15:19:57Z", "body": "You will be able to hook the email and put the processing.Environment-Python 3.10-Google-python-class == 2.36.0-Google_auth_oauthlib = 0.4.6-Google-class-pubsub == 2.9.0", "labels": [{"name": "article", "color": "C200E5"}, {"name": "GCP", "color": "FBCA04"}]}, "1160543419": {"title": "Do well with cache with nuxt", "created_at": "2022-03-06T07:47:51Z", "updated_at": "2022-03-06T15:19:29Z", "body": "Automatically check if the current code is up to date and update the cache.Verification environment -NUXT: 2.15.8- @NUXTJS/PWA: 3.3.5 Code NUxt.config.js Js {Plugins: ['Plugi", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Nuxt", "color": "0E8A16"}]}, "1160653032": {"title": "Create a blog with GitHub Action and Pages", "created_at": "2022-03-06T16:25:06Z", "updated_at": "2022-03-06T23:44:03Z", "body": "Environment -NPM V8.3.1 -Node: v16.14.0 -Angular: v13.2.5- @ng -bootstrap/ng -bootstrap: 12.0.0", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Angular", "color": "D93F0B"}]}, "1167241988": {"title": "Display OGP in the deployed SPA with GitHub Pages", "created_at": "2022-03-12T09:56:24Z", "updated_at": "2022-03-12T14:33:09Z", "body": "Normally, when the SPA is deployed, OGP is not displayed on Twitter etc.This is due to the fact that the bot that gets OGP does not execute the JS, and that there is no static HTML file at the corresponding link to the SPA.Therefore, the page for bot is usually displayed using Lambda etc., and that", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Angular", "color": "D93F0B"}]}, "1167568913": {"title": "Use Google AdSense in Angular", "created_at": "2022-03-13T12:39:35Z", "updated_at": "2022-03-13T15:28:08Z", "body": "In normal SSR, it is possible to distribute ads and monetize the automatic ads for Google AdSense in <Head> </Head>.However, in the case of SPA, if only automatic advertisement is used, there will be no reloading by page transition, so only fixed advertisements at the bottom of the page will be used.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Angular", "color": "D93F0B"}]}, "1169430844": {"title": "Django Rest Framework Openapi Documentation", "created_at": "2022-03-15T09:53:45Z", "updated_at": "2022-03-28T12:45:19Z", "body": "Since there was an opportunity to generate an Openapi document from the API, there is a command called Generateschema in the memo DRF itself, so execute zsh $ python manage.py GenerateSchema> Schema.yml.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Django", "color": "5FC353"}]}, "1169514542": {"title": "Set a script tag in Angular Component", "created_at": "2022-03-15T10:57:47Z", "updated_at": "2022-03-15T10:57:47Z", "body": "If the script tag is installed other than SRC/index.html, it will automatically remove the behavior.Reference: [Angular/Angular 4903] So, for example, when a button that can be obtained with [Twitter Publish] is installed, the CSS of the tweet button does not hit.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Angular", "color": "D93F0B"}]}, "1170873471": {"title": "Angular I often write code/library storage", "created_at": "2022-03-16T11:09:50Z", "updated_at": "2022-04-03T10:02:58Z", "body": "Library- [@ngneat/Reactive -forms] -Save Formgroup in type safely -Save/Load at the timing of saving the form in the form and reloaded/loading- [@Datorama/AKITA]", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Angular", "color": "D93F0B"}]}, "1174254849": {"title": "Angular state management @ngneat/elf", "created_at": "2022-03-19T12:29:12Z", "updated_at": "2022-03-21T14:07:38Z", "body": "Since there was the following description to confirm [@datorama/akita], the operation confirmation Elf, A New State Management Solution, Has Been Published. We Recommand Checking It ðŸš€ -----------", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Angular", "color": "D93F0B"}]}, "1174435949": {"title": "About the configuration of the site", "created_at": "2022-03-20T04:20:38Z", "updated_at": "2022-03-20T13:42:25Z", "body": "Old Site [Kemu.site] <Img Width = \"834\" Alt = \"Screenshot 2022-03-20 13 11 44\" SRC = \"https: // User- S.githubuserContent.com", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Angular", "color": "D93F0B"}, {"name": "Django", "color": "5FC353"}]}, "1174533240": {"title": "Use Angular Recaptcha", "created_at": "2022-03-20T12:34:43Z", "updated_at": "2022-03-21T12:36:22Z", "body": "You will be able to prevent access from the bot using recaptcha.Usually, when using recaptcha, the script tag must be installed in HTML.However, the Script tag on index.html is escaped and erased, so it is used.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Angular", "color": "D93F0B"}]}, "1175617296": {"title": "AWS APEX DOMAIN", "created_at": "2022-03-21T16:14:23Z", "updated_at": "2022-03-21T16:34:46Z", "body": "If the site is placed on AWS, it is a common configuration, such as placing an SSL certificate on the load balancer and specifying EC2 in the target group.In the case of this configuration, a normal CNAME record is added to the DNS record of the domain, and the DNS name of the load balancer is described.<Img Width", "labels": [{"name": "article", "color": "C200E5"}, {"name": "AWS", "color": "EE0471"}]}, "1176713310": {"title": "IP Address Checker has been released", "created_at": "2022-03-22T12:29:14Z", "updated_at": "2022-03-24T00:44:53Z", "body": "We have released a function that allows you to check the IP address of the browsing user.We do not collect the IP address, so please use it with confidence because we only keep the previous record in the local storage.The internal configuration is as follows.<Img Width = \"555\" Alt = \"Screenshot 2022", "labels": [{"name": "article", "color": "C200E5"}, {"name": "AWS", "color": "EE0471"}]}, "1180653910": {"title": "JSON TYPER has been released.", "created_at": "2022-03-25T11:06:44Z", "updated_at": "2022-03-25T11:06:44Z", "body": "Added a function that can automatically generate TypeScript type by loading JSON data.It is generated by entering JSON in the form below.List type, JSON key escape is an issue, but I think it is easy to use when you want to generate a type easily.[U", "labels": [{"name": "article", "color": "C200E5"}, {"name": "TypeScript", "color": "bfdadc"}]}, "1182698916": {"title": "GitHub Actions Frequently used setting summary", "created_at": "2022-03-27T23:23:38Z", "updated_at": "2022-04-03T10:29:02Z", "body": "Turn the test at any time.Therefore, the timing of the Pull Request was created/Pull Request was updated/merged (ma)", "labels": [{"name": "article", "color": "C200E5"}, {"name": "GitHub", "color": "5866BF"}]}, "1183289291": {"title": "Automatically generates molds from Openapi documentation", "created_at": "2022-03-28T11:22:17Z", "updated_at": "2022-03-28T14:15:49Z", "body": "Generate the mold from the previously generated Openapi documentation.[@OpenApitools/Openapi-Generator-Cli] is used to generate the [previous] type.Zsh $ NPX @Openapitools/Openapi-Generator-Cli Genera", "labels": [{"name": "article", "color": "C200E5"}, {"name": "TypeScript", "color": "bfdadc"}]}, "1189790754": {"title": "Marked.js and Highlight.js handle GitHub Flavored Markdown", "created_at": "2022-04-01T13:22:10Z", "updated_at": "2022-04-03T05:01:14Z", "body": "The official name of Markdown handled on GitHub is called GitHub Flavored Markdown, which is a proprietary inscription that extends the default Markdown.This time, apply the GitHub CSS of Highlight.js to convert the Markdown text to HTML.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "TypeScript", "color": "bfdadc"}]}, "1189843692": {"title": "Use Pillow Japanese fonts", "created_at": "2022-04-01T14:03:37Z", "updated_at": "2022-04-22T10:18:01Z", "body": "Introducing how to implement the Pillow Japanese font that tends to depend on the fonts of the host OS, which does not require downloading fonts in other environments/runners.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Python", "color": "1D76DB"}]}, "1191408274": {"title": "Manage the operation of Tab keys inside the text area tag", "created_at": "2022-04-04T08:04:13Z", "updated_at": "2022-04-22T10:16:15Z", "body": "How to manage the operation of the Tab key inside the text area that is common when creating an application when creating an application, we will introduce a type of writing based on the type because the method of squeezing in other sites has been scattered on other sites.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Angular", "color": "D93F0B"}]}, "1198885661": {"title": "Visualize Openapi documents", "created_at": "2022-04-10T05:29:52Z", "updated_at": "2022-04-22T10:14:03Z", "body": "This introduces the difference between Swagger and Redoc, which is automatically documented with CI based on the Openapi file output from the REST API and publishes on GitHub Pages.It also provides a document viewer generated from the Openapi file.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Utils", "color": "170627"}]}, "1206271863": {"title": "Create a health management app with GitHub Actions and GitHub Pages", "created_at": "2022-04-17T03:44:20Z", "updated_at": "2022-04-26T15:33:27Z", "body": "The user input field has been created by combining GitHub Actions and GitHub Pages, so that daily health data can be displayed on a graph, so we will introduce how to do so and how to introduce it.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "GitHub", "color": "5866BF"}]}, "1206344475": {"title": "Create a Django project from a custom template", "created_at": "2022-04-17T10:58:05Z", "updated_at": "2022-04-22T09:47:41Z", "body": "This is an introduction of how to use a template repository that summarizes the configuration of Django that is always used.The default is set for FLAKE8, MyPy, Black, and isort, and the CI makes static checks and testing the code.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Django", "color": "5FC353"}]}, "1206789196": {"title": "Generate Graphene Django Graphql Documents", "created_at": "2022-04-18T07:59:27Z", "updated_at": "2022-04-25T13:58:19Z", "body": "The output of the GraphQL schema, check the output information, and generate automatic documents from the output schema in a project using GrapneNe-Django.The generated document is deployed from CI to GitHub Pages.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Django", "color": "5FC353"}]}, "1210913643": {"title": "Use Django JWT authentication", "created_at": "2022-04-21T11:40:05Z", "updated_at": "2022-04-22T09:48:26Z", "body": "I checked the library operation of Django Rest Framework, SimpleJWT, so I wrote that note.Create tokens-> Effective Verification of token-> Renewing processing of tokens-> Check the access method to the required login using token.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Django", "color": "5FC353"}]}, "1215117235": {"title": "Create RSS / Check the operation of Chrome Web Feeder", "created_at": "2022-04-25T22:32:58Z", "updated_at": "2022-04-25T22:41:11Z", "body": "Since the RSS Feeder function was back in the Android Chrome 94 ~, I created and distributed RSS and tested it.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Python", "color": "1D76DB"}]}, "1217467340": {"title": "Creating MacOS Windows Installation Media", "created_at": "2022-04-27T14:46:54Z", "updated_at": "2022-04-28T06:23:51Z", "body": "There was a timing to make Windows10 Boot Media with M1 Mac on hand, so I will introduce how to create it.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Utils", "color": "170627"}]}, "1223579698": {"title": "Execute the Python script from pyodide JavaScript", "created_at": "2022-05-03T02:57:37Z", "updated_at": "2022-05-05T01:04:38Z", "body": "Since there was an announcement about Pyscript on Pycon US 2022, I took the flow and touched pyodide for the time being, so I will introduce it.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Python", "color": "1D76DB"}]}, "1227975608": {"title": "CloudFlare Pages Show only page to authenticated users", "created_at": "2022-05-06T14:59:25Z", "updated_at": "2022-05-06T15:19:57Z", "body": "If you host a static site with GitHub Pages and do not retain the backend, you will not be able to apply user authentication, so you will deploy with CloudFlare Pages so that you can browse only the users who have passed the CloudFlare Access.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Utils", "color": "170627"}]}, "1228774700": {"title": "Perform virus scanning with macOS Clamav", "created_at": "2022-05-08T02:31:49Z", "updated_at": "2022-05-08T03:19:55Z", "body": "I don't want to make Clamav resident, but I would like to use a regular full scan to ensure safety, so I will introduce how to do it.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Utils", "color": "170627"}]}, "1238798339": {"title": "Deploy SPA to GitHub Pages while thinking about SEO", "created_at": "2022-05-17T15:15:57Z", "updated_at": "2022-05-17T16:00:18Z", "body": "When deploying a SPA to a service to GitHub Pages, CloudFlare Pages, it also explains what you need to pay attention to from the SEO perspective and how to do Angular deployment.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Angular", "color": "D93F0B"}]}, "1239705698": {"title": "Try django 4.1 Async View, Async ORM", "created_at": "2022-05-18T09:48:28Z", "updated_at": "2022-05-18T13:36:03Z", "body": "Since Django4.1alpha1 was released, we confirmed the new functions and operation.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Django", "color": "5FC353"}]}, "1244192476": {"title": "Draw MERMAID.JS in real time", "created_at": "2022-05-22T08:54:29Z", "updated_at": "2022-05-22T11:54:51Z", "body": "There are multiple times when you want to use a graph diagram using Mermaid.js, and a tool to draw real -time drawing is summarized and real -time drawing method.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Angular", "color": "D93F0B"}]}, "1250315076": {"title": "Server Side Generate with Angular + Sculry", "created_at": "2022-05-27T04:12:36Z", "updated_at": "2022-05-27T04:12:36Z", "body": "Server Side Generate was performed with Angular + Sculry, so we share the method.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Angular", "color": "D93F0B"}]}, "1251755523": {"title": "Perform error tracking with Angular Sentry", "created_at": "2022-05-29T00:46:42Z", "updated_at": "2022-05-29T00:46:42Z", "body": "Introducing how to do it because you have created Angular Application error tracking and GitHub Actions automatically upload and release.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Angular", "color": "D93F0B"}]}, "1251907198": {"title": "Since iOS Safari 15.4 has been released, try a new CSS element (svh, lvh, dvh)", "created_at": "2022-05-29T14:40:47Z", "updated_at": "2022-05-29T15:29:30Z", "body": "Check the new element because the height problem of the URL bar that has been bothered by the iPhone has been resolved.", "labels": [{"name": "article", "color": "C200E5"}, {"name": "Utils", "color": "170627"}]}}