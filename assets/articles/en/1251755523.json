{
    "url": "https://api.github.com/repos/kemu3007/portal/issues/48",
    "repository_url": "https://api.github.com/repos/kemu3007/portal",
    "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/48/labels{/name}",
    "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/48/comments",
    "events_url": "https://api.github.com/repos/kemu3007/portal/issues/48/events",
    "html_url": "https://github.com/kemu3007/portal/issues/48",
    "id": 1251755523,
    "node_id": "I_kwDOG7qoq85KnEYD",
    "number": 48,
    "title": "エラーular Sentry",
    "user": {
        "login": "kemu3007",
        "id": 29157528,
        "node_id": "MDQ6VXNlcjI5MTU3NTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kemu3007",
        "html_url": "https://github.com/kemu3007",
        "followers_url": "https://api.github.com/users/kemu3007/followers",
        "following_url": "https://api.github.com/users/kemu3007/following{/other_user}",
        "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions",
        "organizations_url": "https://api.github.com/users/kemu3007/orgs",
        "repos_url": "https://api.github.com/users/kemu3007/repos",
        "events_url": "https://api.github.com/users/kemu3007/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kemu3007/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3898939400,
            "node_id": "LA_kwDOG7qoq87oZRgI",
            "url": "https://api.github.com/repos/kemu3007/portal/labels/article",
            "name": "article",
            "color": "C200E5",
            "default": false,
            "description": ""
        },
        {
            "id": 3900074882,
            "node_id": "LA_kwDOG7qoq87odmuC",
            "url": "https://api.github.com/repos/kemu3007/portal/labels/Angular",
            "name": "Angular",
            "color": "D93F0B",
            "default": false,
            "description": ""
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-05-29T00:46:42Z",
    "updated_at": "2022-05-29T00:46:42Z",
    "closed_at": null,
    "author_association": "OWNER",
    "active_lock_reason": null,
    "body": "\nContact\n\n```bash\n$ npm i @sentry/angular @sentry/tracing\n```\n\nenvironment\n\nOnly DSN is written in `environment.prod.ts` because error tracking is not performed in the development environment.\nDSN can be obtained with `Settings > Projects > Client Keys`.\n\n-  environment.ts\n\n```ts\nexport const environment: Env = {\n  sentryDSN: '',\n};\n\n```\nenvironment.prod.ts\n\n```ts\nexport const environment: Env = {\n  sentryDSN: '****************************',\n};\n```\n\n## main.ts\n\nYou can reduce the number of times the same error is sent by reducing tracesSampleRate.\n\n1.0: Send all errors to Sentry\n\n```ts\nimport * as Sentry from '@sentry/angular';\nimport { BrowserTracing } from '@sentry/tracing';\n\nSentry.init({\n  dsn: environment.sentryDSN,\n  integrations: [\n    new BrowserTracing({\n      tracingOrigins: ['localhost', 'https://portal.kemu.site'],\n      routingInstrumentation: Sentry.routingInstrumentation,\n    }),\n  ],\n  tracesSampleRate: 1.0,\n});\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n```\n\n## app.module.ts\n\nIf showを起動 is true, you can start the form dialog when an error occurs and send the crash data to the user.\n\n```ts\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { APP_INITIALIZER, ErrorHandler, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport * as Sentry from '@sentry/angular';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule],\n  providers: [\n    { provide: ErrorHandler, useValue: Sentry.createErrorHandler({ showDialog: false }) },\n    { provide: Sentry.TraceService, deps: [Router] },\n    { provide: APP_INITIALIZER, useFactory: () => () => {}, deps: [Sentry.TraceService], multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n```\n\nThis will notify Sentry.\n\n`throw new error('test exception') ');\n\n## Create SourceMap\n\nSincebuildular is obfuscated when build, it becomes difficult to understand error contents from Sentry. So, create a source map when you build and type it into Sentry.\n\n-  Create SourceMap\n\n```bash\n$ npm run build -- --sourceMap=true\n```\n\nGitHub Actions\n\nhttps://github.com/marketplace/actions/sentry- .\n\nIn this case, you need to issue a。 on the Sentry side.\n\nNew Integration\n\nSet permissions as follows and register s as `SENTRY_AUTH_TOKEN` on GitHub Secrets.\n\n![image](https://user-images.githubusercontent.com/29157528/170847335-d3c22049-f20d-401a-84ed-3c6b0f7f785c.png)\n\nAlso, set `SENTRY_ORG`, `SENTRY_PROJECT` to SEN.\n\nOrganization S \nSENTRY_PROJECT\n\ndeploy.yml\n\n```yml\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        node-version: ['16']\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          fetch-depth: 0\n      - name: install deps\n        run: |\n          npm install\n      - name: build\n        run: |\n          npm run ng build -- --sourceMap=true |& tee -a $GITHUB_STEP_SUMMARY\n      - uses: getsentry/action-release@v1\n        env:\n          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}\n          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}\n          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}\n        with:\n          sourcemaps: './dict/'\n```\n\nfetch- depth By default, only one commit is obtained, so when you upload to Sentry, you can create a version tag. (set_commits to skip) )\n\n## Close\n\nWe were able to create a Sentry auto release flow in a smart step. GitHub Actions Workflow",
    "reactions": {
        "url": "https://api.github.com/repos/kemu3007/portal/issues/48/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/48/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}