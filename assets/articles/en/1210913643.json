{"url": "https://api.github.com/repos/kemu3007/portal/issues/34", "repository_url": "https://api.github.com/repos/kemu3007/portal", "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/34/comments", "events_url": "https://api.github.com/repos/kemu3007/portal/issues/34/events", "html_url": "https://github.com/kemu3007/portal/issues/34", "id": 1210913643, "node_id": "I_kwDOG7qoq85ILRNr", "number": 34, "title": "Use Django JWT authentication", "user": {"login": "kemu3007", "id": 29157528, "node_id": "MDQ6VXNlcjI5MTU3NTI4", "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kemu3007", "html_url": "https://github.com/kemu3007", "followers_url": "https://api.github.com/users/kemu3007/followers", "following_url": "https://api.github.com/users/kemu3007/following{/other_user}", "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}", "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions", "organizations_url": "https://api.github.com/users/kemu3007/orgs", "repos_url": "https://api.github.com/users/kemu3007/repos", "events_url": "https://api.github.com/users/kemu3007/events{/privacy}", "received_events_url": "https://api.github.com/users/kemu3007/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3898939400, "node_id": "LA_kwDOG7qoq87oZRgI", "url": "https://api.github.com/repos/kemu3007/portal/labels/article", "name": "article", "color": "C200E5", "default": false, "description": ""}, {"id": 3900075763, "node_id": "LA_kwDOG7qoq87odm7z", "url": "https://api.github.com/repos/kemu3007/portal/labels/Django", "name": "Django", "color": "5FC353", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-04-21T11:40:05Z", "updated_at": "2022-04-22T09:48:26Z", "closed_at": null, "author_association": "OWNER", "active_lock_reason": null, "body": "## introduction\r\n\r\n- install\r\n\r\n`` `zsh\r\n$ pip Install djangorestFramework Djangorestframework-simplejwt\r\n`` `\r\n\r\n-Settings.py\r\n\r\n`` `python\r\nInstalled_apps = [\r\n    ...\r\n    \"Rest_framework\",\r\n    \"REST_FRAMEWORK_SIMPLEJWT\",\r\n]\r\nREST_FRAMEWORK = {\r\n    ...\r\n    \"Default_authentication_classes\": (\r\n        ...\r\n        \"Rest_framework_simpleJwt.authentication.jwtauthentication\",\r\n    )\r\n}\r\n`` `\r\n\r\n-urls.py\r\n\r\n-For the basic API View, it is introduced for the time being\r\n-TOKENOBTAINPAIRVIEW`: Production of token\r\n-TOKENREFRESHVIEW`: Reissue of token\r\n-TOKENVERIFYVIEW `: Validity of the token\r\n-In addition, BlackList is also available.\r\n\r\n`` `python\r\nFrom Django.urls IMPORT INCLUDE, PATH\r\nFrom Rest_Framework_SimpleJwt.views Import Import TOKENOBTAINPAIRVIEW, TOKENREFRESHVIEW, TOKENVERIFYVIEW\r\n\r\njwt_urls = [\r\n    PATH (\"\", tokenobtainPairview.as_view ()),\r\n    PATH (\"Refresh/\", tokenreFreshview.as_view ()),\r\n    PATH (\"Verify/\", tokenverifyView.as_view ()),\r\n]\r\n\r\nURLPATTERNS = [\r\n    PATH (\"TOKEN/\", INCLUDE (JWT_URLS))\r\n]\r\n`` `\r\n\r\n## Operation confirmation\r\n\r\n### Issuing token\r\n\r\nCreate a user appropriately and post the user name and password to `token/`\r\n\r\n-Response\r\n`Access` is a token used as` Authorization: Bearer {Accesskey} `when using the API\r\n-`Refresh` is token to reissue the access token\r\n\r\n`` `json\r\n{\r\n    \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1MDYyNTc2MiwiaWF0IjoxNjUwNTM5MzYyLCJqdGkiOiJmYjg3M2QzY2RjZTc0YTYzYmQ3ZTQ1OTQ5YjdiN2MxOSIsInVzZXJfaWQiOjJ9.8djfRV1zYHUyVFp5gelG2pTWWmT_QE1gqlLQLb1A2rw\",\r\n    \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjUwNTM5NjYyLCJpYXQiOjE2NTA1MzkzNjIsImp0aSI6ImI4NDU0YTdiMDM3YzRhOWRiMmRjYWRmNTMwMjkwNDMxIiwidXNlcl9pZCI6Mn0.TwIRKSO-Pi6ZZMrJ10DOHTrdVoZtLRasB9vjvdBANIQ\"\r\n}\r\n`` `\r\n\r\n### Refresh the token\r\n\r\nPost the `Refresh` token acquired in the previous process to` Tokyo/Refresh/`\r\n\r\n-Response\r\n\r\n`` `json\r\n{\r\n    \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjUwNTM5OTMwLCJpYXQiOjE2NTA1MzkzNjIsImp0aSI6IjQ2YzI2OThmOTFmYjQ0ZjY5OWVkNzk4NTY1MmY5MGNmIiwidXNlcl9pZCI6Mn0.IsNvx4DFhZoeW48fShWpwNRoO7_JZ69ws-1XhGuDx3I\"\r\n}\r\n`` `\r\n\r\n### Effective confirmation of token\r\n\r\nPost token to `token/verify/`\r\n\r\n-Response\r\n  -Only 200 OK is returned\r\n  -The access token and refresh token can be confirmed to be effective\r\n  -Even if the token is refreshed by default, it can be used if the token before refreshing is within the expiration date.\r\n    -I need to make `Blacklist_after_rotation` true\r\n  -The default can create more than one token linked to one user, so it seems that adjustments need to be adjusted in terms of security.\r\n    -The method needs to be confirmed (I think it seems to be a setting)\r\n\r\n`` `json\r\n{}\r\n`` `\r\n\r\n### Give a token to access the page that requires login\r\n-`CURL`\r\n\r\n`` `bash\r\n$ Curl Localhost: 8080/API/V1/User/-H \"Authorization: Bearer {Accesskey}\"\r\n`` `\r\n\r\n- `Rest_framework.test.apiclient`\r\n\r\n`` `python\r\nClient = APICLIENT (). Credentials (http_authorization = f \"Bearer {Accesskey})\r\nClient.get (\"localhost: 8080/API/v1/user/\")\r\n`` `\r\n\r\nIf the token is valid, 200 will be returned if it is fraudulent.\r\n\r\n## At the end\r\n\r\nThe token authentication was easy and easy to use without worrying about Cors, but I felt a bit scary in terms of security.\r\nWhere should I have a token on the front side http only cookie? Localstorage/sessionStorage?\r\n\r\nIt is necessary to respond to the fact that the token is stolen and set the function/expiration date shortly.\r\n\r\nThis code: https://github.com/kemu3007/django-jwt-sample", "reactions": {"url": "https://api.github.com/repos/kemu3007/portal/issues/34/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/34/timeline", "performed_via_github_app": null, "state_reason": null}