{
    "url": "https://api.github.com/repos/kemu3007/portal/issues/34",
    "repository_url": "https://api.github.com/repos/kemu3007/portal",
    "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/34/labels{/name}",
    "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/34/comments",
    "events_url": "https://api.github.com/repos/kemu3007/portal/issues/34/events",
    "html_url": "https://github.com/kemu3007/portal/issues/34",
    "id": 1210913643,
    "node_id": "I_kwDOG7qoq85ILRNr",
    "number": 34,
    "title": "Use Django JWT認証",
    "user": {
        "login": "kemu3007",
        "id": 29157528,
        "node_id": "MDQ6VXNlcjI5MTU3NTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kemu3007",
        "html_url": "https://github.com/kemu3007",
        "followers_url": "https://api.github.com/users/kemu3007/followers",
        "following_url": "https://api.github.com/users/kemu3007/following{/other_user}",
        "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions",
        "organizations_url": "https://api.github.com/users/kemu3007/orgs",
        "repos_url": "https://api.github.com/users/kemu3007/repos",
        "events_url": "https://api.github.com/users/kemu3007/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kemu3007/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3898939400,
            "node_id": "LA_kwDOG7qoq87oZRgI",
            "url": "https://api.github.com/repos/kemu3007/portal/labels/article",
            "name": "article",
            "color": "C200E5",
            "default": false,
            "description": ""
        },
        {
            "id": 3900075763,
            "node_id": "LA_kwDOG7qoq87odm7z",
            "url": "https://api.github.com/repos/kemu3007/portal/labels/Django",
            "name": "Django",
            "color": "5FC353",
            "default": false,
            "description": ""
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-04-21T11:40:05Z",
    "updated_at": "2022-04-22T09:48:26Z",
    "closed_at": null,
    "author_association": "OWNER",
    "active_lock_reason": null,
    "body": "\n## Introduction\n\n-  Installation\n\n```zsh\n$ pip install djangorestframework djangorestframework-simplejwt\n```\n\nsettings.py\n\n```python\nINSTALLED_APPS = [\n    ...\n    \"rest_framework\",\n    \"rest_framework_simplejwt\",\n]\nREST_FRAMEWORK = {\n    ...\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        ...\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    )\n}\n```\n\n-  urls.py\n\n-  Introduction to API View\n-  `Token PairView` :トークンrate Token\nTokenRefreshView\nToken ifyView\nBlacklist\n\n```python\nfrom django.urls import include, path\nfrom rest_framework_simplejwt.views import TokenObtainPairView, TokenRefreshView, TokenVerifyView\n\njwt_urls = [\n    path(\"\", TokenObtainPairView.as_view()),\n    path(\"refresh/\", TokenRefreshView.as_view()),\n    path(\"verify/\", TokenVerifyView.as_view()),\n]\n\nurlpatterns = [\n    path(\"token/\", include(jwt_urls)),\n]\n```\n\n##動作ation\n\n## # Issue s\n\nPOST username and password to `token/`\n\n-  Response\n-  `access` is used as `Authorization: Bearer {accesskey}` in the header when using API\n-  `refresh` s to reissue access s\n\n```json\n{\n    \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1MDYyNTc2MiwiaWF0IjoxNjUwNTM5MzYyLCJqdGkiOiJmYjg3M2QzY2RjZTc0YTYzYmQ3ZTQ1OTQ5YjdiN2MxOSIsInVzZXJfaWQiOjJ9.8djfRV1zYHUyVFp5gelG2pTWWmT_QE1gqlLQLb1A2rw\",\n    \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjUwNTM5NjYyLCJpYXQiOjE2NTA1MzkzNjIsImp0aSI6ImI4NDU0YTdiMDM3YzRhOWRiMmRjYWRmNTMwMjkwNDMxIiwidXNlcl9pZCI6Mn0.TwIRKSO-Pi6ZZMrJ10DOHTrdVoZtLRasB9vjvdBANIQ\"\n}\n```\n\n## Refresh \n\n工程d in the previous process POST to `token/refresh/`\n\n-  Response\n\n```json\n{\n    \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjUwNTM5OTMwLCJpYXQiOjE2NTA1MzkzNjIsImp0aSI6IjQ2YzI2OThmOTFmYjQ0ZjY5OWVkNzk4NTY1MmY5MGNmIiwidXNlcl9pZCI6Mn0.IsNvx4DFhZoeW48fShWpwNRoO7_JZ69ws-1XhGuDx3I\"\n}\n```\n\n##トークン validity check\n\nPOST s to `token/verify/`\n\n-  Response\n-  200 OK only\n-  Both access確認s and refresh、s are valid\n-  By default, even if the  is refreshed, it is available if theリフレッシュ is not expired\n-  need to make `BL LIST_AFTER_ROTATION`\n-  By default, you can create multipleセキュリティs linked to one user, so you need to adjust them in terms of security.\n-  How to check ( I think it is set )\n\n```json\n{}\n```\n\n## Add s to access pages that require login\nCurl\n\n```bash\n$ curl localhost:8080/api/v1/user/ -H \"Authorization: Bearer{accesskey}\"\n```\n\n-  `rest_framework.test.APIAPI`\n\n```python\nclient = APIClient().credentials(HTTP_AUTHORIZATION=f\"Bearer {accesskey}\")\nclient.get(\"localhost:8080/api/v1/user/\")\n```\n\nIf the  is enabled, 200 will be returned.\n\n## Close\n\nI felt thatトークン authentication is a little security scary and easy to use without worrying about CORS.\nWhere to have aな on the front side HTTP Only Cookies LocalStorage\n\nIf theケース is stolen, it is necessary to set the function/expiration time to disable existing .\n\nThis code: https://github.com/kemu3007/django- jwt- sample",
    "reactions": {
        "url": "https://api.github.com/repos/kemu3007/portal/issues/34/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/34/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}