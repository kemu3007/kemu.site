{
    "url": "https://api.github.com/repos/kemu3007/portal/issues/18",
    "repository_url": "https://api.github.com/repos/kemu3007/portal",
    "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/18/labels{/name}",
    "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/18/comments",
    "events_url": "https://api.github.com/repos/kemu3007/portal/issues/18/events",
    "html_url": "https://github.com/kemu3007/portal/issues/18",
    "id": 1170873471,
    "node_id": "I_kwDOG7qoq85Fyhx_",
    "number": 18,
    "title": "ular Well  Code/Library Place",
    "user": {
        "login": "kemu3007",
        "id": 29157528,
        "node_id": "MDQ6VXNlcjI5MTU3NTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kemu3007",
        "html_url": "https://github.com/kemu3007",
        "followers_url": "https://api.github.com/users/kemu3007/followers",
        "following_url": "https://api.github.com/users/kemu3007/following{/other_user}",
        "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions",
        "organizations_url": "https://api.github.com/users/kemu3007/orgs",
        "repos_url": "https://api.github.com/users/kemu3007/repos",
        "events_url": "https://api.github.com/users/kemu3007/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kemu3007/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3898939400,
            "node_id": "LA_kwDOG7qoq87oZRgI",
            "url": "https://api.github.com/repos/kemu3007/portal/labels/article",
            "name": "article",
            "color": "C200E5",
            "default": false,
            "description": ""
        },
        {
            "id": 3900074882,
            "node_id": "LA_kwDOG7qoq87odmuC",
            "url": "https://api.github.com/repos/kemu3007/portal/labels/Angular",
            "name": "Angular",
            "color": "D93F0B",
            "default": false,
            "description": ""
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-03-16T11:09:50Z",
    "updated_at": "2022-04-03T10:02:58Z",
    "closed_at": null,
    "author_association": "OWNER",
    "active_lock_reason": null,
    "body": "### Library\n-  [@ngneat/reactive- forms]\n-  Type safety formGroup\n-  Saves and loads form input contents in session storage and reloaded timing, etc.\n\n-  [@datorama/akita](https://github.com/datorama/akita)\n-  the state management library, the処理 nesting of the subscribe is difficult to deepen when processing the request result asynchronously, making it easier to read the code\n-  ngOnInit writes httpRequest().subscribe() and makes it easier to get values asynchronously from the store\n-  Store the information you want to keep at the time of reload, such as the current page information, and you can easily write the description of the loading process\n-  [@ngneat/elf](https://github.com/ngneat/elf)\n\n-  [ng2- ads)] (https://github.com/scttcper/ng2- ads))\n-  scriptular escapes the script tag, so if you implement it yourself, you need to do dom.\n\n-  [ng- recaptcha]\n-  bot can set up reCAPTCHA that can be used if you want to see information and access (you need to create a site key with GCP)\n\n-  [@ng- boots)/ng- boots)]\n- bootsライブラリ library forbooular\n\n-  [@compodoc/compodoc]\n-  Auto- generate documents forアプリケーションular applications.\n-  Add the following configuration file when using `npx @compodoc/compodoc - p ./tsconfig.doc.json - d src/doc`\n-  - > - > Sample (https://portal.kemu.site/doc/)\n\ntsconfig.doc.json\n\n```json\n{\n  \"include\": [\"src/**/*.ts\"],\n  \"exclude\": [\"src/test.ts\", \"src/**/*.spec.ts\"]\n}\n```\n\n### Code\n### Show message - > Delete after 5 seconds\n\n```ts\nimport { Injectable } from '@angular/core';\nimport { interval } from 'rxjs';\n\nexport interface AlertMessage {\n  type: string;\n  body: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  constructor() {}\n  private _messages: AlertMessage[] = [];\n\n  get messages() {\n    return this._messages;\n  }\n\n  pushMessage(message: AlertMessage) {\n    this._messages.push(message);\n    interval(5000).pipe(take(1)).subscribe((_) => this._messages.shift());\n  }\n}\n```\n\n### Display loading when screen transition\n\n```ts\nthis.router.events.subscribe((event) => {\n  if (event instanceof NavigationStart) {\n    this.loading = true;\n  } else if (\n    event instanceof NavigationEnd ||\n    event instanceof NavigationCancel ||\n    event instanceof NavigationError\n  ) {\n    this.loading = false;\n  }\n});\n```\n\n################################################################################################################################################################################################################################################################\n-  doc: https://ng- boots .github.io/#/types/typeahead/examples\n\n\n```ts\n{\n  search: OperatorFunction<string, readonly string[]> = (text$: Observable<string>) => {\n    return text$\n      .pipe(debounceTime(200), distinctUntilChanged())\n      .pipe(\n        map((text) => Object.keys(this.searchData).filter((title) => title.toLowerCase().includes(text.toLowerCase())))\n      );\n  };\n}\n```\n\n```html\n<input\n  class=\"form-control\"\n  placeholder=\"search\"\n  NgbTypeahead\n  [ngbTypeahead]=\"search\"\n  (selectItem)=\"selectArticle($event)\"\n  #instance=\"ngbTypeahead\"\n  (blur)=\"instance.dismissPopup()\"\n/>\n```\n\n### Putting the processing before reloading\n\n```ts\nconstoractor() {\n  window.onbeforeunload = () => this.ngOnDestroy();\n}\n\n```\n\n### boots boot- icons\n\n```zsh\n$ npm i bootstrap-icons\n```\n\nsrc/style.scs\n\n```\n...\n@import '~bootstrap-icons/font/bootstrap-icons.css';\n...\n```\n\nOther memories",
    "reactions": {
        "url": "https://api.github.com/repos/kemu3007/portal/issues/18/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/18/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}