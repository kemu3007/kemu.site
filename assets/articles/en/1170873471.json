{"url": "https://api.github.com/repos/kemu3007/portal/issues/18", "repository_url": "https://api.github.com/repos/kemu3007/portal", "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/18/comments", "events_url": "https://api.github.com/repos/kemu3007/portal/issues/18/events", "html_url": "https://github.com/kemu3007/portal/issues/18", "id": 1170873471, "node_id": "I_kwDOG7qoq85Fyhx_", "number": 18, "title": "Angular I often write code/library storage", "user": {"login": "kemu3007", "id": 29157528, "node_id": "MDQ6VXNlcjI5MTU3NTI4", "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kemu3007", "html_url": "https://github.com/kemu3007", "followers_url": "https://api.github.com/users/kemu3007/followers", "following_url": "https://api.github.com/users/kemu3007/following{/other_user}", "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}", "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions", "organizations_url": "https://api.github.com/users/kemu3007/orgs", "repos_url": "https://api.github.com/users/kemu3007/repos", "events_url": "https://api.github.com/users/kemu3007/events{/privacy}", "received_events_url": "https://api.github.com/users/kemu3007/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3898939400, "node_id": "LA_kwDOG7qoq87oZRgI", "url": "https://api.github.com/repos/kemu3007/portal/labels/article", "name": "article", "color": "C200E5", "default": false, "description": ""}, {"id": 3900074882, "node_id": "LA_kwDOG7qoq87odmuC", "url": "https://api.github.com/repos/kemu3007/portal/labels/Angular", "name": "Angular", "color": "D93F0B", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-03-16T11:09:50Z", "updated_at": "2022-04-03T10:02:58Z", "closed_at": null, "author_association": "OWNER", "active_lock_reason": null, "body": "### Library\r\n-[@ngneat/Reactive-forms] (https://github.com/ngneat/reactive-forms)\r\n  -For the formgroup for type safety\r\n  -Save the entry of the form to the session Storage, save/load at the timing of reloaded.\r\n\r\n- [@datorama/akita] (https://github.com/datorama/akita)\r\n  -Condition management library, when processing the results of requests asynchronously, the cord is easier to read because the nest of Subscripes is less likely to deepen.\r\n  -In the ngoninit, describe httprequest (). Subscripe (), and easily get the process of acquiring asynchronously from the store.\r\n  -Save information that you want to hold during reloading, such as the current page information, can be stored easily and the loading process can be easily described.\r\n  - * If you look at the site now, [@ngneat/elf] (https://github.com/ngneat/elf) was described, so I will try it next time.\r\n\r\n-[NG2-Adsense] (https://github.com/scttcper/ng2-adsense)\r\n  -A if you implement your own Script tag to escape your own, you will need to operate DOM.\r\n\r\n-[NG-RECAPTCHA] (https://github.com/dethariel/ng-recaptcha)\r\n  -Prit information that you do not want to see, you can set up a recaptcha that can be used if you want to prevent access (for site keys, you need to create GCP)\r\n\r\n-[@ng-bootstrap/ng-bootstrap]\r\n  -Bootstrap library for Angular\r\n\r\n- [@Compodoc/Compodoc] (https://github.com/compodoc/compodoc)\r\n  -It automatically generate documents for Angular applications.\r\n  -When using the following configuration file, `npx @compodoc/compodoc -p ./tsconfig.doc.json -d src/doc`\r\n  -Documents to be created-> [Sample] (https://portal.kemu.site/doc/)\r\n\r\n`tsconfig.doc.json`\r\n\r\n`` `json\r\n{\r\n  \"Include\": [\"SRC/**/*. TS\"],\r\n  \"EXCLUDE\": [\"SRC/Test.ts\", \"SRC/**/*. Spec.ts\"]\r\n}\r\n`` `\r\n\r\n### code\r\n#### Show a message-> 5 seconds deleted\r\n\r\n`` `TS\r\nImport {Injectable} from '@Angular/Core';\r\nImport {interval} from 'RXJS';\r\n\r\nExport interface AlertMessage {\r\n  Type: String;\r\n  Body: String;\r\n}\r\n\r\n@Injectable ({\r\n  Provideddin: 'Root',\r\n})\r\nExport Class MessageService {\r\n  Constructor () {}\r\n  Private _messages: AlertMessage [] = [];\r\n\r\n  Get Messages () {\r\n    Return this._messages;\r\n  }\r\n\r\n  PushMessage (Message: AlertMessage) {\r\n    This._messages.push (Message);\r\n    INTERVAL (5000) .pipe (take (1)). subScribe ((_) => this._messages.shift ());\r\n  }\r\n}\r\n`` `\r\n\r\n#### displays loading when screen transition\r\n\r\n`` `TS\r\nthis.router.events.subscripe ((event) => {\r\n  IF (Event Instanceof NavigationStart) {\r\n    This.loading = true;\r\n  } Else if (\r\n    Event Instanceof Navigationend ||\r\n    Event Instanceof NavigationCancell ||\r\n    Event Instanceof NavigationERROR\r\n  ) {{\r\n    This.loading = false;\r\n  }\r\n});\r\n`` `\r\n\r\n#### Incrimental search\r\n  -doc: https://ng-bootstrap.github.io/#/components/typeAhead/examples\r\n\r\n\r\n`` `TS\r\n{\r\n  Search: OperatorFunction <string, Readony String []> = (Text $: Observable <string>) => {\r\n    Return Text $\r\n      .pipe (Debouncetime (200), DistinctuntorChanged ())\r\n      .pipe (\r\n        map ((text) => object.keys (this.Searchdata) .filter ((title) => title.tolowercase (). Includes (text.tolowerCase ()))\r\n      );\r\n  };\r\n}\r\n`` `\r\n\r\n`` `HTML\r\n<Input\r\n  class = \"form-control\"\r\n  PlaceHolder = \"Search\"\r\n  NgbtypeAhead\r\n  [NgbtypeAhead] = \"Search\"\r\n  (Selectitem) = \"Selectarticle ($ EVENT)\"\r\n  #Instance = \"ngbtypeahead\"\r\n  (Blur) = \"Instance.dismissPopup ()\"\r\n/>\r\n`` `\r\n\r\n#### Insert the process before reloading\r\n\r\n`` `TS\r\nconsteractor () {\r\n  Window.onbeforeUnload = () => This.ngonDestroy ();\r\n}\r\n\r\n`` `\r\n\r\n#### Bootstrap-Icons introduced\r\n\r\n`` `zsh\r\n$ NPM I Bootstrap-iCons\r\n`` `\r\n\r\n`src/style.scss`\r\n\r\n`` `\r\n...\r\n@import '~ bootstrap-icons/font/bootstrap-icons.css';\r\n...\r\n`` `\r\n\r\nPostscript as soon as I remember", "reactions": {"url": "https://api.github.com/repos/kemu3007/portal/issues/18/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/18/timeline", "performed_via_github_app": null, "state_reason": null}