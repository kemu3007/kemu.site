{"url": "https://api.github.com/repos/kemu3007/portal/issues/48", "repository_url": "https://api.github.com/repos/kemu3007/portal", "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/48/comments", "events_url": "https://api.github.com/repos/kemu3007/portal/issues/48/events", "html_url": "https://github.com/kemu3007/portal/issues/48", "id": 1251755523, "node_id": "I_kwDOG7qoq85KnEYD", "number": 48, "title": "使用Angular Sentry执行错误跟踪", "user": {"login": "kemu3007", "id": 29157528, "node_id": "MDQ6VXNlcjI5MTU3NTI4", "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kemu3007", "html_url": "https://github.com/kemu3007", "followers_url": "https://api.github.com/users/kemu3007/followers", "following_url": "https://api.github.com/users/kemu3007/following{/other_user}", "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}", "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions", "organizations_url": "https://api.github.com/users/kemu3007/orgs", "repos_url": "https://api.github.com/users/kemu3007/repos", "events_url": "https://api.github.com/users/kemu3007/events{/privacy}", "received_events_url": "https://api.github.com/users/kemu3007/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3898939400, "node_id": "LA_kwDOG7qoq87oZRgI", "url": "https://api.github.com/repos/kemu3007/portal/labels/article", "name": "article", "color": "C200E5", "default": false, "description": ""}, {"id": 3900074882, "node_id": "LA_kwDOG7qoq87odmuC", "url": "https://api.github.com/repos/kemu3007/portal/labels/Angular", "name": "Angular", "color": "D93F0B", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-29T00:46:42Z", "updated_at": "2022-05-29T00:46:42Z", "closed_at": null, "author_association": "OWNER", "active_lock_reason": null, "body": "＃＃ 介绍\r\n\r\n````bash\r\n$ npm i @sentry/angular @sentry/tracing\r\n````````\r\n\r\n＃＃ 环境\r\n\r\n由于未在开发环境中执行错误跟踪，因此仅在“环境.prod.ts”中描述DSN。\r\n可以使用“设置>“项目”>“客户端密钥”获得DSN。\r\n\r\n-environment.ts\r\n\r\n``TS\r\n导出const环境：env = {\r\n  Sentrydsn：''，\r\n};\r\n\r\n````````\r\n-environment.prod.ts\r\n\r\n``TS\r\n导出const环境：env = {\r\n  Sentrydsn：'************************************************************\r\n};\r\n````````\r\n\r\n## main.ts\r\n\r\n通过减少TracessAmplater，您可以减少发送相同错误的次数。\r\n\r\n1.0：将所有错误发送给哨兵\r\n\r\n``TS\r\n导入 *作为'@sentry/angular'的哨兵;\r\n从'@sentry/tracing'导入{browsertracing};\r\n\r\nsentry.init（{\r\n  DSN：Environment.Sentrydsn，\r\n  集成：[[\r\n    新的浏览器（{\r\n      tracingorigins：['localhost'，'https：//portal.kemu.site']，\r\n      RoutingInstrumentation：Sentry.RoutingInstrection，\r\n    }），\r\n  ]，，，\r\n  TracessAmplater：1.0，\r\n}）;\r\n\r\nif（环境。生产）{\r\n  EnableProdMode（）;\r\n}\r\n\r\nplatform browserdynamic（）\r\n  .bootstrapmodule（AppModule）\r\n  .catch（（err）=> console.error（err））;\r\n````````\r\n\r\n## app.module.ts\r\n\r\nShowdialog可以通过转动TRUE并使用户发送崩溃数据来启动“泡沫对话框”。\r\n\r\n``TS\r\n从'./app-routing.module'import {apploutingModule};\r\n从'./app.component'导入{appComponent};\r\n导入{app_initalizer，errirHandler，ngmodule}来自'@angular/core';\r\n从'@angular/platform-b​​rewser'导入{browsermodule};\r\n从'@Angular/Router'导入{Router};\r\n导入 *作为'@sentry/angular'的哨兵;\r\n\r\n@ngmodule（{\r\n  声明：[AppComponent]，\r\n  导入：[browsermodule，apploutingModule]，\r\n  提供者：[[\r\n    {提供：errirHandler，useverue：sentry.createrrorhandler（{showdialog：false}）}，\r\n    {提供：sentry.traceervice，deps：[router]}，\r\n    {提供：app_initalizer，usfactory ：（）=>（）=> {}，deps：[sentry.traceervice]，multi：true}，true}，\r\n  ]，，，\r\n  Bootstrap：[AppComponent]，\r\n}）\r\n导出类AppModule {}\r\n````````\r\n\r\n现在，通知该错误是哨兵。\r\n\r\n如果要测试哨兵的通知，则可以使用“抛出新错误（'test exception！'）;`在任何部分中。\r\n \r\n创建## Sourcemap\r\n\r\n在构建时很难读取Angular，因此很难看到哨兵中的错误内容。因此，源图是在构建时生成的，并输入了哨兵。\r\n\r\n - 创建源\r\n\r\n````bash\r\n$ npm run构建--- sourcemap = true\r\n````````\r\n\r\n使用github操作工作流程上传。\r\n\r\nhttps://github.com/marketplace/actions/sentry-版本\r\n\r\n目前，您需要在哨兵一侧发布令牌。\r\n\r\n设置>开发人员设置>创建新集成>内部集成\r\n\r\n将授权设置为如下，并在GitHub Secrets中将令牌注册为`sentry_auth_token`。\r\n\r\n！[image]（https：//user-bimages.githubusercontent.com/29157528/170847335-D3C22049-F20D-401A-84ED-3C6B0F785C.PNG）\r\n\r\n另外，为`sentry_org'，`sentry_project“设置相同。\r\n\r\nSentry_org：`设置>一般设置>组织slug`\r\nSentry_project：`设置>项目>名称`\r\n\r\n-deploy.yml\r\n\r\n``'yml\r\n工作：\r\n  部署：\r\n    运行：ubuntu-latest\r\n    战略：\r\n      矩阵：\r\n        节点交换：['16']\r\n    脚步：\r\n       -  uses：操作/结帐@v3\r\n        和：\r\n          提取深度：0\r\n      -NAME：安装DEPS\r\n        运行：|\r\n          NPM安装\r\n       - 名称：构建\r\n        运行：|\r\n          npm运行ng构建--- sourcemap = true |＆tee -a $ github_step_summary\r\n       -  uses：getentry/action-release@v1\r\n        env：\r\n          sentry_auth_token：$ {{necrets.sentry_auth_token}}}}}}}}}}}}}}\r\n          sentry_org：$ {{necrets.sentry_org}}}}\r\n          sentry_project：$ {{necrets.sentry_project}}}}\r\n        和：\r\n          sourcemaps：'./dict/'\r\n````````\r\n\r\n如果您不设置提取深度，则会出现错误。由于默认情况下只能获得一个提交，因此在上传到Sentry时，它似乎是通过创建版本标签来进行的。 （即使SET_COMMITS是跳过的，您也可以避免错误。）\r\n\r\n＃＃ 在最后\r\n\r\n在上述步骤中，我能够安全地创建一个哨兵自动释放流。最近，我准备了GitHub Action工作流程，我觉得这很方便。", "reactions": {"url": "https://api.github.com/repos/kemu3007/portal/issues/48/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/48/timeline", "performed_via_github_app": null, "state_reason": null}