{"url": "https://api.github.com/repos/kemu3007/portal/issues/44", "repository_url": "https://api.github.com/repos/kemu3007/portal", "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/44/comments", "events_url": "https://api.github.com/repos/kemu3007/portal/issues/44/events", "html_url": "https://github.com/kemu3007/portal/issues/44", "id": 1238798339, "node_id": "I_kwDOG7qoq85J1pAD", "number": 44, "title": "在考虑SEO时将SPA部署到GitHub页面", "user": {"login": "kemu3007", "id": 29157528, "node_id": "MDQ6VXNlcjI5MTU3NTI4", "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kemu3007", "html_url": "https://github.com/kemu3007", "followers_url": "https://api.github.com/users/kemu3007/followers", "following_url": "https://api.github.com/users/kemu3007/following{/other_user}", "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}", "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions", "organizations_url": "https://api.github.com/users/kemu3007/orgs", "repos_url": "https://api.github.com/users/kemu3007/repos", "events_url": "https://api.github.com/users/kemu3007/events{/privacy}", "received_events_url": "https://api.github.com/users/kemu3007/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3898939400, "node_id": "LA_kwDOG7qoq87oZRgI", "url": "https://api.github.com/repos/kemu3007/portal/labels/article", "name": "article", "color": "C200E5", "default": false, "description": ""}, {"id": 3900074882, "node_id": "LA_kwDOG7qoq87odmuC", "url": "https://api.github.com/repos/kemu3007/portal/labels/Angular", "name": "Angular", "color": "D93F0B", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-17T15:15:57Z", "updated_at": "2022-05-17T16:00:18Z", "closed_at": null, "author_association": "OWNER", "active_lock_reason": null, "body": "当将水疗中心部署到github页面（CloudFlare页面）时，我们还将解释您需要从SEO角度注意的内容以及如何进行角部部署。\r\n\r\n## Angular部署\r\n\r\n### github页面\r\n＃＃＃＃ 建造\r\n````bash\r\n$ npm运行构建\r\n$ CP PORTAL/DIST/PORTAL/INDEX.html PORTAL/DIST/PORTAL/404.HTML\r\n````````\r\n#### github动作\r\n``'yml\r\n工作：\r\n  部署：\r\n    运行：ubuntu-latest\r\n    脚步：\r\n      ...\r\n      -NAME：部署GH页面\r\n        用途：Peaceiris/Action-GH页面@v3\r\n        和：\r\n          github_token：$ {{necrets.github_token}}}}\r\n          Publish_dir：./portal/dist/portal\r\n          cname：portal.kemu.Site\r\n````````\r\n\r\nGitHub页面是指指定目录中没有文件的404.html`。因此，请参阅“ index.html”至404.html`。\r\n\r\n### Cloudflare页面\r\n\r\n您将使用CloudFlare的GitHub链接功能或使用它，因为它提供了上传的操作。\r\n\r\n[Cloudflare页面github动作]\r\n\r\n*`use：cloudflare/pepages-action@1`示例中所述@v1.0.0`。\r\n\r\n＃＃ 问题\r\n\r\n###由于根目录中只有一个文件，因此，如果您访问``blog/''之类的通行证，则将是``404`-> 200''。\r\n\r\n如果发生404，则Google搜索控制台将链接确定为非法链接，并且未能注册索引。\r\n\r\n302也是如此。 （仅用于URL检查成功。）\r\n\r\n＃＃＃＃ 解决方案\r\n\r\n当您自己托管服务器时，可以通过描述NGINX的TRY_FILE来做出响应，但是不能使用诸如GitHub页面的托管服务设置它，因此与所有URL相对应的目录是路由`index.html`。复制并放置。\r\n\r\n到目前为止，我们已经为Googlebot准备了一个虚拟页面，并用Useragent进行了排序，但是假人页面管理和与移动友好的判断的斗争存在复杂性，所以这有点麻烦。我试图放置一个大型数量`。\r\n\r\n最好不要尽可能多地生成Googlebot与用户之间的区别，而最近的GoogleBot应该从这种角度读取角度代码，以在Angular代码的解释中执行爬行。\r\n\r\n可以通过使用诸如usehash和``/＃/blog/`''之类的路由器函数（例如它变成了转换。\r\n\r\n如果您共享### Twitter，则Twitter bot不会读取OGP，因为它没有处理JS。\r\n\r\n如果像博客之类的网站在共享Twitter时不允许部署OGP，则将大大减少网站流入的数量。\r\n\r\n＃＃＃＃ 解决方案\r\n\r\n使用OGP准备另一个页面，将Twitter共享链接转到OGP专用页面，然后在用户访问OGP专用页面时过渡到正确的URL。\r\n\r\n可以通过描述诸如`data-url''之类的参数来更改tweet按钮的行为。\r\n\r\n这次，而不是当前链接，在Tweet的时和更改目的地的页面上显示了带有'$'的链接，将JS设置为重定向`$'删除页面。\r\n\r\n``TS\r\n导入{component，afterviewInit}来自'@angular/core';\r\n\r\n@零件 （{\r\n  选择器：'app-tweet-btn'，\r\n  模板：`<<div style =“高度：30px;”>\r\n    <a id =“ btn” href =“ https://twitter.com/share?ref_sref_src = twsrc5etfw” class =“ twitter-share-button” [attr.data-url] =“ url” =“ url” =“ url” =“ url” =“ url”\r\n      >推文</a\r\n    >\r\n  </div>`,\r\n}）\r\n导出类TweetBtnComponent实现AfterViewInit {\r\n  ngafterviewinit（）：void {\r\n    const script = document.createelement（'script'）;\r\n    script.Async = true;\r\n    script.src ='https://platform.twitter.com/widgets.js';\r\n    cons btn = document.getElementById（'btn'）！;\r\n    btn.insertadjacentelement（'perthend'，脚本）;\r\n  }\r\n\r\n  get url() {\r\n    return window.location.origin + '/$' + window.location.pathname + window.location.search;\r\n  }\r\n}\r\n````````\r\n\r\n`/$/blog/` -> `/blog/` にリダイレクトするようにし、JSを解釈しないTwitter Botのみを対象にOGPを提供するダミーページを用意します。\r\n\r\n主に上記2点がSEO上の問題点とその対応策です。\r\n\r\n今後何かSEO的な問題点、改善点についてある場合はまた別の記事にまとめていこうと思います。", "reactions": {"url": "https://api.github.com/repos/kemu3007/portal/issues/44/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/44/timeline", "performed_via_github_app": null, "state_reason": null}