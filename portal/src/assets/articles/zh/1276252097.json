{
  "url": "https://api.github.com/repos/kemu3007/portal/issues/57",
  "repository_url": "https://api.github.com/repos/kemu3007/portal",
  "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/57/labels{/name}",
  "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/57/comments",
  "events_url": "https://api.github.com/repos/kemu3007/portal/issues/57/events",
  "html_url": "https://github.com/kemu3007/portal/issues/57",
  "id": 1276252097,
  "node_id": "I_kwDOG7qoq85MEg_B",
  "number": 57,
  "title": "Python Typehint new / deprecated",
  "user": {
    "login": "kemu3007",
    "id": 29157528,
    "node_id": "MDQ6VXNlcjI5MTU3NTI4",
    "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kemu3007",
    "html_url": "https://github.com/kemu3007",
    "followers_url": "https://api.github.com/users/kemu3007/followers",
    "following_url": "https://api.github.com/users/kemu3007/following{/other_user}",
    "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions",
    "organizations_url": "https://api.github.com/users/kemu3007/orgs",
    "repos_url": "https://api.github.com/users/kemu3007/repos",
    "events_url": "https://api.github.com/users/kemu3007/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kemu3007/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3898939400,
      "node_id": "LA_kwDOG7qoq87oZRgI",
      "url": "https://api.github.com/repos/kemu3007/portal/labels/article",
      "name": "article",
      "color": "C200E5",
      "default": false,
      "description": ""
    },
    {
      "id": 3900078597,
      "node_id": "LA_kwDOG7qoq87odnoF",
      "url": "https://api.github.com/repos/kemu3007/portal/labels/Python",
      "name": "Python",
      "color": "1D76DB",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-06-20T01:47:30Z",
  "updated_at": "2022-06-20T01:47:30Z",
  "closed_at": null,
  "author_association": "OWNER",
  "active_lock_reason": null,
  "body": ":\n有些项目在没有被注意到的情况下被添加/废弃，在此介绍。由于有许多被废弃的项目，所以只列出了最经常使用的项目。\n\n更多信息请参见官方文件。\n\n文件：https://docs.python.org/ja/3/library/typing.html\n\n##添加了类型提示。\n\n只有那些可能被使用和有用的才会被列出。欲了解更多信息，请参考官方文件。\n\n### ＃＃＃键入.Literal\n\nPython3.8~可用\n\n可以指定可以持有的具体数值。\n\n```python3\ndef test_function(value: Literal[1, 2, 3])\n\t...\n\n\ntest_function(0) <-- raise Error\n```\n\n### typing.TypedDict。\n\nPython3.8~可用\n\n```python3\nfrom typing import TypedDict\n\ndict_type = TypedDict(\"DictType\", { \"key\": str, \"value\": str })\n\nclass DictType(TypedDict):\n\tkey: str\n\tvalue: str\n```\n\nPython3.11~ 增加了 Required, NotRequired 类型。\n\n```python3\nclass DictType(TypedDict):\n\tkey: str\n\tvalue: str\n\toptional_key: NotRequired[str]\n```\n\n当不知道钥匙是否存在时，可以使用NotRequired。\n\nRequired也可以用于强制键，为指定total=False的情况下分配一个类型。\n\n3.10~还增加了`is_typeddict()`，它可以做出决定。(虽然我不确定它将被如何使用......)\n\n###键入.TypeGuard。\n\nPython 3.10~可在\n\n```python3\ndef is_str(val: str | float) -> TypeGuard[str]:\n\treturn isinstance(val, str)\n```\n可以在决策表达式中指定返回True时的参数类型。\n\n\n#＃＃键入.overload\n\n当参数和返回类型相连时，可以使用这个方法。\n\n```python3\n@overload\ndef test_function(value: int) -> int\n\t...\n\n@overload\ndef test_function(value: List[int]) -> List[int]\n\t...\n\ndef test_function(value: int | List[int]) -> int | List[int]\n\t...\n\n\ntest_function(1) --> int\ntest_function([1, 2, 3]) -> list[int]\n```\n\n###打字.最后\n\nPython3.8~可用\n\n这可以在不希望继承或覆盖的情况下使用。\n\n```python3\nclass BaseClass:\n\t@final\n\tdef test_function(self):\n\t\t...\n\nclass ExtendClass(BaseClass):\n\tdef test_function <-- raise ERROR\n\n@final\nclass NotBaseClass:\n\t...\n\nclass ExtendClass2(NotBaseClass) <-- raise ERROR\n```\n\n## 废弃的类型提示\n其他废弃的项目也存在，但由于它们是最常用的三个项目，所以被省略了。更多信息请参见官方文件。\n\n\n###打字.Dict。\n\n从Python 3.9~开始被弃用。\n\n内置的dict现在支持dict[str, str]等类型。\n\n\n\n###键入.列表。\n\n从Python 3.9~开始被弃用。\n\n内置的列表现在支持类型规格，如list[str]。\n\n\n###打字.可调用。\n\n从Python 3.9~开始被弃用。\n\nCollections.abc.Callable现在支持Callable[[str], str]这样的类型规范。",
  "reactions": {
    "url": "https://api.github.com/repos/kemu3007/portal/issues/57/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/57/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
