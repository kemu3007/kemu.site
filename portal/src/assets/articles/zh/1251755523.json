{
  "url": "https://api.github.com/repos/kemu3007/portal/issues/48",
  "repository_url": "https://api.github.com/repos/kemu3007/portal",
  "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/48/labels{/name}",
  "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/48/comments",
  "events_url": "https://api.github.com/repos/kemu3007/portal/issues/48/events",
  "html_url": "https://github.com/kemu3007/portal/issues/48",
  "id": 1251755523,
  "node_id": "I_kwDOG7qoq85KnEYD",
  "number": 48,
  "title": "Angular Sentry错误跟踪。",
  "user": {
    "login": "kemu3007",
    "id": 29157528,
    "node_id": "MDQ6VXNlcjI5MTU3NTI4",
    "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kemu3007",
    "html_url": "https://github.com/kemu3007",
    "followers_url": "https://api.github.com/users/kemu3007/followers",
    "following_url": "https://api.github.com/users/kemu3007/following{/other_user}",
    "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions",
    "organizations_url": "https://api.github.com/users/kemu3007/orgs",
    "repos_url": "https://api.github.com/users/kemu3007/repos",
    "events_url": "https://api.github.com/users/kemu3007/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kemu3007/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3898939400,
      "node_id": "LA_kwDOG7qoq87oZRgI",
      "url": "https://api.github.com/repos/kemu3007/portal/labels/article",
      "name": "article",
      "color": "C200E5",
      "default": false,
      "description": ""
    },
    {
      "id": 3900074882,
      "node_id": "LA_kwDOG7qoq87odmuC",
      "url": "https://api.github.com/repos/kemu3007/portal/labels/Angular",
      "name": "Angular",
      "color": "D93F0B",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-05-29T00:46:42Z",
  "updated_at": "2022-06-02T17:33:40Z",
  "closed_at": null,
  "author_association": "OWNER",
  "active_lock_reason": null,
  "body": "\n## ＃＃介绍\n\n```bash\n$ npm i @sentry/angular @sentry/tracing\n```\n\n∮∮环境\n\nDSN只在`environment.prod.ts`中出现，因为在开发环境中没有进行错误跟踪。\nDSN可以在 \"设置 > 项目 > 客户端密钥 \"获得。\n\n-  环境.ts\n\n```ts\nexport const environment: Env = {\n  sentryDSN: '',\n};\n\n```\n-  environment.prod.ts\n\n```ts\nexport const environment: Env = {\n  sentryDSN: '****************************',\n};\n```\n\n## main.ts\n\n减少tracesSampleRate可以减少同一错误被发送的次数。\n\n1.0: 将所有的错误发送到Sentry\n\n```ts\nimport * as Sentry from '@sentry/angular';\nimport { BrowserTracing } from '@sentry/tracing';\n\nSentry.init({\n  dsn: environment.sentryDSN,\n  integrations: [\n    new BrowserTracing({\n      tracingOrigins: ['localhost', 'https://portal.kemu.site'],\n      routingInstrumentation: Sentry.routingInstrumentation,\n    }),\n  ],\n  tracesSampleRate: 1.0,\n});\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n```\n\n## app.module.ts\n\nshowDialog可以被设置为 \"true\"，以便在错误发生时触发一个表单对话框，要求用户提交崩溃数据。\n\n```ts\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { APP_INITIALIZER, ErrorHandler, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport * as Sentry from '@sentry/angular';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule],\n  providers: [\n    { provide: ErrorHandler, useValue: Sentry.createErrorHandler({ showDialog: false }) },\n    { provide: Sentry.TraceService, deps: [Router] },\n    { provide: APP_INITIALIZER, useFactory: () => () => {}, deps: [Sentry.TraceService], multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n```\n\n这将确保错误被通知到Sentry。\n\n要测试对Sentry的通知，只需在任何地方放上`抛出新的错误('测试异常！');`。\n\n##创建SourceMap。\n\nAngular在构建时被混淆了，所以很难看到Sentry的错误内容。因此，在构建时要生成一个源码图，并输入到Sentry。\n\n-  创建SourceMap。\n\n```bash\n$ npm run build -- --sourceMap=true\n```\n\n使用GitHub Actions工作流程进行上传。\n\nhttps://github.com/marketplace/actions/sentry- release\n\n在这种情况下，必须在Sentry一方发出一个令牌。\n\n设置 > 开发者设置 > 创建新的集成 > 内部集成\n\n设置权限如下，并在GitHub Secrets中注册令牌为`SENTRY_AUTH_TOKEN`。\n\n![image](https://user-images.githubusercontent.com/29157528/170847335-d3c22049-f20d-401a-84ed-3c6b0f7f785c.png)\n\n这同样适用于`SENTRY_ORG`和`SENTRY_PROJECT`。\n\nSENTRY_ORG: `设置>一般设置>组织名称'。\nSENTRY_PROJECT: `Settings > Projects > Name`。\n\n-  部署.yml。\n\n```yml\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        node-version: ['16']\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          fetch-depth: 0\n      - name: install deps\n        run: |\n          npm install\n      - name: build\n        run: |\n          npm run ng build -- --sourceMap=true |& tee -a $GITHUB_STEP_SUMMARY\n      - uses: getsentry/action-release@v1\n        env:\n          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}\n          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}\n          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}\n        with:\n          sourcemaps: './dict/'\n```\n\n如果没有设置fetch- depth，则出错。看起来，在上传到Sentry时，版本标签的创建被嘲弄了，因为它默认只获取一个提交。(你可以通过设置set_commits为跳过来避免这个错误）。\n\n##结束。\n\n上述步骤成功创建了一个Sentry自动发布流程。我觉得现在的GitHub Actions Workflow非常方便，什么都可以用。",
  "reactions": {
    "url": "https://api.github.com/repos/kemu3007/portal/issues/48/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/48/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
