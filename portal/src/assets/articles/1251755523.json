{
  "url": "https://api.github.com/repos/kemu3007/portal/issues/48",
  "repository_url": "https://api.github.com/repos/kemu3007/portal",
  "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/48/labels{/name}",
  "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/48/comments",
  "events_url": "https://api.github.com/repos/kemu3007/portal/issues/48/events",
  "html_url": "https://github.com/kemu3007/portal/issues/48",
  "id": 1251755523,
  "node_id": "I_kwDOG7qoq85KnEYD",
  "number": 48,
  "title": "Angular Sentry エラートラッキングを行う",
  "user": {
    "login": "kemu3007",
    "id": 29157528,
    "node_id": "MDQ6VXNlcjI5MTU3NTI4",
    "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kemu3007",
    "html_url": "https://github.com/kemu3007",
    "followers_url": "https://api.github.com/users/kemu3007/followers",
    "following_url": "https://api.github.com/users/kemu3007/following{/other_user}",
    "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions",
    "organizations_url": "https://api.github.com/users/kemu3007/orgs",
    "repos_url": "https://api.github.com/users/kemu3007/repos",
    "events_url": "https://api.github.com/users/kemu3007/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kemu3007/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3898939400,
      "node_id": "LA_kwDOG7qoq87oZRgI",
      "url": "https://api.github.com/repos/kemu3007/portal/labels/article",
      "name": "article",
      "color": "C200E5",
      "default": false,
      "description": ""
    },
    {
      "id": 3900074882,
      "node_id": "LA_kwDOG7qoq87odmuC",
      "url": "https://api.github.com/repos/kemu3007/portal/labels/Angular",
      "name": "Angular",
      "color": "D93F0B",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-05-29T00:46:42Z",
  "updated_at": "2022-06-02T17:33:40Z",
  "closed_at": null,
  "author_association": "OWNER",
  "active_lock_reason": null,
  "body": "\r\n## Introduction\r\n\r\n```bash\r\n$ npm i @sentry/angular @sentry/tracing\r\n```\r\n\r\n## environment\r\n\r\n開発環境でエラートラッキングは行わないため `environment.prod.ts` にのみDSNを記載。\r\nDSNは `Settings > Projects > Client Keys` で取得できます。\r\n\r\n- environment.ts\r\n\r\n```ts\r\nexport const environment: Env = {\r\n  sentryDSN: '',\r\n};\r\n\r\n```\r\n- environment.prod.ts\r\n\r\n```ts\r\nexport const environment: Env = {\r\n  sentryDSN: '****************************',\r\n};\r\n```\r\n\r\n## main.ts\r\n\r\ntracesSampleRateを減らすことで同じエラーが送られる回数を減らすことができます。\r\n\r\n1.0: 全てのエラーをSentryに送信\r\n\r\n```ts\r\nimport * as Sentry from '@sentry/angular';\r\nimport { BrowserTracing } from '@sentry/tracing';\r\n\r\nSentry.init({\r\n  dsn: environment.sentryDSN,\r\n  integrations: [\r\n    new BrowserTracing({\r\n      tracingOrigins: ['localhost', 'https://portal.kemu.site'],\r\n      routingInstrumentation: Sentry.routingInstrumentation,\r\n    }),\r\n  ],\r\n  tracesSampleRate: 1.0,\r\n});\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n```\r\n\r\n## app.module.ts\r\n\r\nshowDialogはtrueにすることでエラー発生時にフォームダイアログを起動し、ユーザにクラッシュデータを送信してもらうことができます。\r\n\r\n```ts\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { APP_INITIALIZER, ErrorHandler, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport * as Sentry from '@sentry/angular';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [BrowserModule, AppRoutingModule],\r\n  providers: [\r\n    { provide: ErrorHandler, useValue: Sentry.createErrorHandler({ showDialog: false }) },\r\n    { provide: Sentry.TraceService, deps: [Router] },\r\n    { provide: APP_INITIALIZER, useFactory: () => () => {}, deps: [Sentry.TraceService], multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n```\r\n\r\nこれでエラーがSentryに通知されるようになります。\r\n\r\nSentryへの通知をテストする場合は任意の箇所に `throw new Error('test exception!');` を仕込めばOKです。\r\n \r\n## SourceMapの作成\r\n\r\nAngularはbuild時に難読化されるため、Sentry上からエラー内容が分かりづらくなります。そのため、build時にソースマップを生成し、Sentryに入力します。\r\n\r\n- SourceMapの作成\r\n\r\n```bash\r\n$ npm run build -- --sourceMap=true\r\n```\r\n\r\nGitHub Actionsのワークフローを利用してアップロードします。\r\n\r\nhttps://github.com/marketplace/actions/sentry-release\r\n\r\nこの際、Sentry側でトークンを発行する必要があります。\r\n\r\nSettings > Developer Settings > Create New Integration > Internal Integration\r\n\r\n権限を以下のように設定し、トークンをGitHub Secretsに `SENTRY_AUTH_TOKEN` として登録します。\r\n\r\n![image](https://user-images.githubusercontent.com/29157528/170847335-d3c22049-f20d-401a-84ed-3c6b0f7f785c.png)\r\n\r\nまた、`SENTRY_ORG`,  `SENTRY_PROJECT` についても同様に設定します。\r\n\r\nSENTRY_ORG: `Settings > General Settings > Organization Slug` \r\nSENTRY_PROJECT: `Settings > Projects > Name` \r\n\r\n- deploy.yml\r\n\r\n```yml\r\njobs:\r\n  deploy:\r\n    runs-on: ubuntu-latest\r\n    strategy:\r\n      matrix:\r\n        node-version: ['16']\r\n    steps:\r\n      - uses: actions/checkout@v3\r\n        with:\r\n          fetch-depth: 0\r\n      - name: install deps\r\n        run: |\r\n          npm install\r\n      - name: build\r\n        run: |\r\n          npm run ng build -- --sourceMap=true |& tee -a $GITHUB_STEP_SUMMARY\r\n      - uses: getsentry/action-release@v1\r\n        env:\r\n          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}\r\n          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}\r\n          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}\r\n        with:\r\n          sourcemaps: './dict/'\r\n```\r\n\r\nfetch-depthを設定しない場合エラーになります。デフォルトで1つのコミットしか取得しないのでSentryにアップロードする時にバージョンタグの作成でコケる様子。(set_commitsをskipにしてもエラーを回避できます。)\r\n\r\n## 終わりに\r\n\r\n上記ステップで無事、Sentry自動リリースフローを作成することができました。最近はなんでもGitHub Actions Workflowを用意してくれていてとても便利だなあと感じています。",
  "reactions": {
    "url": "https://api.github.com/repos/kemu3007/portal/issues/48/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/48/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
