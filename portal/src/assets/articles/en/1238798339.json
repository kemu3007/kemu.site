{
  "url": "https://api.github.com/repos/kemu3007/portal/issues/44",
  "repository_url": "https://api.github.com/repos/kemu3007/portal",
  "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/44/labels{/name}",
  "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/44/comments",
  "events_url": "https://api.github.com/repos/kemu3007/portal/issues/44/events",
  "html_url": "https://github.com/kemu3007/portal/issues/44",
  "id": 1238798339,
  "node_id": "I_kwDOG7qoq85J1pAD",
  "number": 44,
  "title": "Deploy SPA to GitHub Pages with SEO in mind",
  "user": {
    "login": "kemu3007",
    "id": 29157528,
    "node_id": "MDQ6VXNlcjI5MTU3NTI4",
    "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kemu3007",
    "html_url": "https://github.com/kemu3007",
    "followers_url": "https://api.github.com/users/kemu3007/followers",
    "following_url": "https://api.github.com/users/kemu3007/following{/other_user}",
    "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions",
    "organizations_url": "https://api.github.com/users/kemu3007/orgs",
    "repos_url": "https://api.github.com/users/kemu3007/repos",
    "events_url": "https://api.github.com/users/kemu3007/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kemu3007/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3898939400,
      "node_id": "LA_kwDOG7qoq87oZRgI",
      "url": "https://api.github.com/repos/kemu3007/portal/labels/article",
      "name": "article",
      "color": "C200E5",
      "default": false,
      "description": ""
    },
    {
      "id": 3900074882,
      "node_id": "LA_kwDOG7qoq87odmuC",
      "url": "https://api.github.com/repos/kemu3007/portal/labels/Angular",
      "name": "Angular",
      "color": "D93F0B",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-05-17T15:15:57Z",
  "updated_at": "2022-05-17T16:00:18Z",
  "closed_at": null,
  "author_association": "OWNER",
  "active_lock_reason": null,
  "body": "\nWe will also explain what you need to pay attention to in terms of SEO when deploying SPAs to GitHub Pages, Cloudflare Pages, and how to do Angular deployments.\n\n## Angular Deployment\n\n### GitHub Pages\n#### Build\n```bash\n$ npm run build\n$ cp portal/dist/portal/index.html portal/dist/portal/404.html\n```\n#### GitHub Actions\n```yml\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      ...\n      - name: deploy gh-pages\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          publish_dir: ./portal/dist/portal\n          cname: portal.kemu.site\n```\n\nGitHub Pages will reference `404.html` if the file does not exist in the specified directory. Therefore, make sure that `404.html` also refers to `index.html`.\n\n### Cloudflare Pages\n\nYou can use Cloudflare's GitHub integration feature, or use the Actions that are provided to upload.\n\n[Cloudflare Pages GitHub Action](https://github.com/marketplace/actions/cloudflare- pages- github- action)\n\nNote that `uses: cloudflare/pages- action@1` is shown in the sample, but if you do not show `uses: cloudflare/pages- action@v1.0.0`, it will fail because it cannot find the version.\n\n## Problem\n\n### ### If a path such as `blog/` is accessed because the file exists only in the root directory, the behavior will be `404` - > `200`.\n\nIf a 404 occurs, Google Search Console will consider the link to be an invalid link and will fail to index it.\n\nThe same is true for 302, etc. (Only URL inspections succeed.)\n\n#### Solution\n\nIf you host your own server, you can handle this by writing nginx try_files, but managed services such as GitHub Pages cannot be configured, so copy and place the root `index.html` in a directory that corresponds to all URLs.\n\nWe had prepared a dummy page for GoogleBot, and had taken the method of sorting by UserAgent, but it was complicated to manage the contents of the dummy page, and there was a battle with the mobile- friendly judgment, and it was a little troublesome, so we started to place a large number of `index.html` pages. However, it was complicated to manage the contents of the dummy pages, and there was a battle with the mobile- friendly judgment.\n\nThe difference between GoogleBot and the information given to the user should be minimized as much as possible, and since GoogleBot nowadays crawls Angular code in a way that it can interpret, from this perspective, it should be made to read Angular code as much as possible.\n\nYou can prevent 404s by using a router function such as useHash and making the link `/#/blog/`, but Google search results will normalize URLs containing `#`, which is bad for SEO.\n\n### If you share to Twitter, the Twitter bot does not process JS and will not read the OGP.\n\nIf a site like a blog does not deploy OGPs when sharing on Twitter, the number of visitors to the site will drop significantly.\n\n#### Solution\n\nPrepare a separate page where OGP exists, direct the Twitter share link to the OGP- only page, and when the user accesses the OGP- only page, they will be redirected to the correct URL.\n\nThe behavior of the tweet button can be changed by including parameters such as `data- url` as follows\n\nThis time, instead of the current link, a link prefixed with `$` should be displayed in the tweet, and the destination page should be set to redirect to the page with the `$` removed in JS.\n\n```ts\nimport { Component, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tweet-btn',\n  template: ` <div style=\"height: 30px;\">\n    <a id=\"btn\" href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\" class=\"twitter-share-button\" [attr.data-url]=\"url\"\n      >tweet</a\n    >\n  </div>`,\n})\nexport class TweetBtnComponent implements AfterViewInit {\n  ngAfterViewInit(): void {\n    const script = document.createElement('script');\n    script.async = true;\n    script.src = 'https://platform.twitter.com/widgets.js';\n    const btn = document.getElementById('btn')!;\n    btn.insertAdjacentElement('afterend', script);\n  }\n\n  get url() {\n    return window.location.origin + '/$' + window.location.pathname + window.location.search;\n  }\n}\n```\n\nRedirect to `/$/blog/` - > `/blog/` and have a dummy page that provides OGP only for Twitter Bot that does not interpret JS.\n\nThe two main SEO issues and measures to address them are listed above.\n\nIf there are any SEO issues or improvements in the future, I will summarize them in another article.\n",
  "reactions": {
    "url": "https://api.github.com/repos/kemu3007/portal/issues/44/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/44/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
