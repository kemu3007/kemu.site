{
  "url": "https://api.github.com/repos/kemu3007/portal/issues/22",
  "repository_url": "https://api.github.com/repos/kemu3007/portal",
  "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/22/labels{/name}",
  "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/22/comments",
  "events_url": "https://api.github.com/repos/kemu3007/portal/issues/22/events",
  "html_url": "https://github.com/kemu3007/portal/issues/22",
  "id": 1175617296,
  "node_id": "I_kwDOG7qoq85GEn8Q",
  "number": 22,
  "title": "Getting along with AWS Apex Domain",
  "user": {
    "login": "kemu3007",
    "id": 29157528,
    "node_id": "MDQ6VXNlcjI5MTU3NTI4",
    "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kemu3007",
    "html_url": "https://github.com/kemu3007",
    "followers_url": "https://api.github.com/users/kemu3007/followers",
    "following_url": "https://api.github.com/users/kemu3007/following{/other_user}",
    "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions",
    "organizations_url": "https://api.github.com/users/kemu3007/orgs",
    "repos_url": "https://api.github.com/users/kemu3007/repos",
    "events_url": "https://api.github.com/users/kemu3007/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kemu3007/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3898939400,
      "node_id": "LA_kwDOG7qoq87oZRgI",
      "url": "https://api.github.com/repos/kemu3007/portal/labels/article",
      "name": "article",
      "color": "C200E5",
      "default": false,
      "description": ""
    },
    {
      "id": 3951278401,
      "node_id": "LA_kwDOG7qoq87rg7lB",
      "url": "https://api.github.com/repos/kemu3007/portal/labels/AWS",
      "name": "AWS",
      "color": "EE0471",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-03-21T16:14:23Z",
  "updated_at": "2022-03-21T16:34:46Z",
  "closed_at": null,
  "author_association": "OWNER",
  "active_lock_reason": null,
  "body": "If the site is on AWS, a common configuration is to place an SSL certificate on the load balancer and specify EC2 as the target group.\n\nIn this configuration, a CNAME record is usually added to the domain's DNS record and the DNS name of the load balancer.\n\n<img width=\"644\" alt=\"screenshot 2022- 03- 22 0 46 54\" src=\"https://user- images.githubusercontent.com/29157528/159298430- 54508ca4- 4ecb- 4259- aea9- b370c3bca531.png\">\n\nHowever, if I want to set up a load balancer for an Apex Domain (`kemu.site` in this site), I cannot add a CNAME record.\n\nThe IP of the load balancer is variable and is not recommended to be changed by rebooting, etc. There is a way to fix the IP of the load balancer, but it is expensive.\n\n> [AWS Global Accelerator](https://aws.amazon.com/jp/global- accelerator/?blogs- global- accelerator.sort- by=item.additionalFields.createdDate&blogs- global- accelerator.sort- order=desc&aws- global- accelerator- wn.sort- by=item.additionalFields.postDateTime&aws- global- accelerator- wn.sort- order=desc)\n\nFor this purpose, we use Route53's A Record Alias feature.\n\n<img width=\"875\" alt=\"screenshot 2022- 03- 22 0 53 49\" src=\"https://user- images.githubusercontent.com/29157528/159300049- 8f1490f8- a882- 4330- 81ec- 000fe7c45172.png\">\n\n<img width=\"885\" alt=\"screenshot 2022- 03- 22 0 56 09\" src=\"https://user- images.githubusercontent.com/29157528/159300239- 65a7fb63- d71a- 4a5a- 9503- bf0c3a180a19.png\">\n\nEndpoint aliases can be set in the above form.\n\nIf you are not currently using Route53, you will need to create a host zone with Route53 and set the value of the NS record for that domain to be NS from the admin page of Name.com or Google Domain. (It takes a little while for the change to take effect. At this time, it took about an hour to reflect the change, as I recall.)\n\nThis allowed variable load balancer endpoints to be specified for the Apex Domain.\n\nTwo records were registered as the actual value to be registered.\n\n```zsh\n$ dig kemu.site\n\n; <<>> DiG 9.10.6 <<>> kemu.site\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 7482\n;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;kemu.site.                     IN      A\n\n;; ANSWER SECTION:\nkemu.site.              60      IN      A       54.178.253.199\nkemu.site.              60      IN      A       13.231.15.68\n\n;; Query time: 103 msec\n;; SERVER: 2404:1a8:7f01:b::3#53(2404:1a8:7f01:b::3)\n;; WHEN: Tue Mar 22 00:36:06 JST 2022\n;; MSG SIZE  rcvd: 70\n```\n\nI'm a little unsure how the IPs are assigned internally, but it seems that they insert an A record and route the IPs as you can configure them this way.\n\n\n*If you want to prevent direct links by IP address, you need to use AWS WAF. (I haven't set anything up because I haven't put any good info on it)\n",
  "reactions": {
    "url": "https://api.github.com/repos/kemu3007/portal/issues/22/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/22/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
