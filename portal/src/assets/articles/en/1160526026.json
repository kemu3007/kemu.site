{
  "url": "https://api.github.com/repos/kemu3007/portal/issues/2",
  "repository_url": "https://api.github.com/repos/kemu3007/portal",
  "labels_url": "https://api.github.com/repos/kemu3007/portal/issues/2/labels{/name}",
  "comments_url": "https://api.github.com/repos/kemu3007/portal/issues/2/comments",
  "events_url": "https://api.github.com/repos/kemu3007/portal/issues/2/events",
  "html_url": "https://github.com/kemu3007/portal/issues/2",
  "id": 1160526026,
  "node_id": "I_kwDOG7qoq85FLDjK",
  "number": 2,
  "title": "Stories about getting stuck with Google Adsense, site structure, etc.",
  "user": {
    "login": "kemu3007",
    "id": 29157528,
    "node_id": "MDQ6VXNlcjI5MTU3NTI4",
    "avatar_url": "https://avatars.githubusercontent.com/u/29157528?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kemu3007",
    "html_url": "https://github.com/kemu3007",
    "followers_url": "https://api.github.com/users/kemu3007/followers",
    "following_url": "https://api.github.com/users/kemu3007/following{/other_user}",
    "gists_url": "https://api.github.com/users/kemu3007/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kemu3007/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kemu3007/subscriptions",
    "organizations_url": "https://api.github.com/users/kemu3007/orgs",
    "repos_url": "https://api.github.com/users/kemu3007/repos",
    "events_url": "https://api.github.com/users/kemu3007/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kemu3007/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3898939400,
      "node_id": "LA_kwDOG7qoq87oZRgI",
      "url": "https://api.github.com/repos/kemu3007/portal/labels/article",
      "name": "article",
      "color": "C200E5",
      "default": false,
      "description": ""
    },
    {
      "id": 3900082041,
      "node_id": "LA_kwDOG7qoq87odod5",
      "url": "https://api.github.com/repos/kemu3007/portal/labels/Utils",
      "name": "Utils",
      "color": "170627",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-03-06T05:51:34Z",
  "updated_at": "2022-04-04T05:16:06Z",
  "closed_at": null,
  "author_association": "OWNER",
  "active_lock_reason": null,
  "body": "The structure of this site is\n\n`Name.com - > Route 53 - > AWS ALB - (http1.1)> AWS EC2`.\n\nThis is the way it is supposed to be. At the time of implementation, the\n\n`Name.com - > AWS ALB - (http2.0)> AWS EC2`.\n\nbut it was registered with adsense & ALB's specs.\n\nThere were two points of stumbling blocks in registering with adsense, so I'll leave a note.\n\n## 1. when I try to register with adsense I get an error that the site is unreachable\n\nAs it turns out, [Http Error 464](https://docs.aws.amazon.com/ja_jp/elasticloadbalancing/latest/application/load- balancer- troubleshooting.html #http- 464- issues) was occurring.\n\nIt seems that the http being requested did not match the protocol inside the load balancer and was throwing an error.\n\nCommunication to the ALB target group needed to be set to http1.1, and nginx on EC2 also needed to be modified to http1.1.\n\nI finally figured it out when error 464 appeared on the screen when I fed the sitemap in google search console.\n\n\n### Measures\n```bash\ncurl http://example.com/ --http1.1\ncurl http://example.com/ --http2\n```\n\nYou will need to check using curl commands at hand, such as\n\n\n- - - \n\n## 2. Name.com can only register CNAME records for subdomains.\n\nALB is assigned an IP address, which is not fixed, but changes when it is scaled out, etc.\n\nTherefore, a DNS name is assigned and a CNAME record must be created in the domain's DNS settings.\n\nHowever, Name.com does not allow the creation of CNAME records except for subdomains. So I thought about transferring my domain to Route53 because I felt that Name.com was not user- friendly in general, but that was not possible.\n\nThere is a limit to the top domains that can be managed by Route53, and `site` was not included.\n\n[Top- level domains that can be registered with Amazon Route 53](https://docs.aws.amazon.com/ja_jp/Route53/latest/DeveloperGuide/registrar- tld- list.html)\n\nTherefore, we modified the system by creating a zone in Route53, setting the NS described in the created zone to NS on the Name.com side, and directing the zone from Route53 to ALB.\n\nThere is also a way to use the AWS Global Accelerator to assign IP addresses, but I didn't want to spend the money this time & it seems to be quite expensive, so I decided to pass on it.\nIt seems to improve performance, so I wonder if it would be a good idea to include it if the project is severe in that area.\n\n[AWS Global Accelerator](https://aws.amazon.com/jp/global- accelerator/?blogs- global- accelerator.sort- by=item.additionalFields.createdDate&blogs- global- accelerator.sort- order=desc&aws- global- accelerator- wn.sort- by=item.additionalFields.postDateTime&aws- global- accelerator- wn.sort- order=desc)\n\n\n- - - \n\nWhen I googled the \"unable to reach site\" error, all I got was information on the paid version of Hatena Blog (which redirects to www.), and it took me a while to figure out the cause, but I'm glad I solved it.",
  "reactions": {
    "url": "https://api.github.com/repos/kemu3007/portal/issues/2/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/kemu3007/portal/issues/2/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
