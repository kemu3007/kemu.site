<?xml version='1.0' encoding='utf-8'?>
<rss version="2.0"><channel><title>Kemu Tech Blog</title><link>https://portal.kemu.site/blog/</link><description>Kemu Tech Blogでは主にDjango / Angularに関する技術的な知見のメモ、共有を行っています。</description><language>ja</language><copyright>©️ 2017-2022 kemu All Rights Reserved.</copyright><managingEditor>kemu430113@gmail.com(kemu)</managingEditor><webMaster>kemu430113@gmail.com(kemu)</webMaster><item><title>Django JWT認証を利用する</title><link>https://portal.kemu.site/blog/1210913643/</link><description>Django Rest Framework, SimpleJWTのライブラリ動作確認を行ったのでそのメモ書き。トークンの作成 -&gt; トークンの有効性検証 -&gt; トークンの再発行処理 -&gt; トークンを用いたログイン必須ページへのアクセス方法の確認を行っています。
</description><pubDate>Thu, 21 Apr 2022 11:40:05 GMT</pubDate></item><item><title>Graphene Django Graphql ドキュメントを生成する</title><link>https://portal.kemu.site/blog/1206789196/</link><description>Grapnene-Djangoを利用したプロジェクトでGraphql スキーマの出力、出力される情報の確認、出力されたスキーマからの自動ドキュメント生成を行います。生成したドキュメントはCIからGitHub Pagesにデプロイしています。
</description><pubDate>Mon, 18 Apr 2022 07:59:27 GMT</pubDate></item><item><title>Djangoプロジェクトをカスタムテンプレートから作成する</title><link>https://portal.kemu.site/blog/1206344475/</link><description>いつも使うDjangoの構成をまとめたテンプレートレポジトリを作成したので使い方の紹介です。デフォルトでflake8, mypy, black, isortの設定を行なっており、CIではコードの静的チェック、テストの実行を行うようにしています。
</description><pubDate>Sun, 17 Apr 2022 10:58:05 GMT</pubDate></item><item><title>GitHub ActionsとGitHub Pagesで健康管理アプリを作成する</title><link>https://portal.kemu.site/blog/1206271863/</link><description>GitHub ActionsとGitHub Pagesを組み合わせてユーザ入力フィールドを作成し、日々の健康データをグラフで表示することができるようにしたのでそのやり方と導入方法を紹介します。
</description><pubDate>Sun, 17 Apr 2022 03:44:20 GMT</pubDate></item><item><title>OpenApiドキュメントを可視化する</title><link>https://portal.kemu.site/blog/1198885661/</link><description>REST APIから出力されるOpenApiファイルを元にCIで自動でドキュメント化し、GitHub Pagesで公開する手法、Swagger, Redocの違いを紹介しています。また、OpenApiファイルから生成されるドキュメントのビューアーを提供しています。
</description><pubDate>Sun, 10 Apr 2022 05:29:52 GMT</pubDate></item><item><title>テキストエリアタグ内部でのTabキーの動作を管理する</title><link>https://portal.kemu.site/blog/1191408274/</link><description>アプリケーション作成時にユースケースとして多いテキストエリア内部でのTabキーの動作の管理方法についてAny型で握りつぶすやり方が他サイト等で散見されたため、型に基づいた書き方を紹介します。
</description><pubDate>Mon, 04 Apr 2022 08:04:13 GMT</pubDate></item><item><title>Pillow 日本語フォントを利用する</title><link>https://portal.kemu.site/blog/1189843692/</link><description>ホストOSのフォントに依存しがちなPillowの日本語フォントで他の環境/ランナーでもフォントのダウンロードが必要ない形で実装する方法を紹介します。
</description><pubDate>Fri, 01 Apr 2022 14:03:37 GMT</pubDate></item><item><title>marked.jsとhighlight.jsでGitHub Flavored Markdownを扱う</title><link>https://portal.kemu.site/blog/1189790754/</link><description>GitHub上で扱っているMarkdownの正式名称はGitHub Flavored Markdownと言われ、デフォルトのMarkdownを拡張した独自記法になっています。    今回はhighlight.jsのGitHub cssを適用してMarkdownテキストをHTMLに変換します。    </description><pubDate>Fri, 01 Apr 2022 13:22:10 GMT</pubDate></item><item><title>OpenApiのドキュメントから型を自動で生成する</title><link>https://portal.kemu.site/blog/1183289291/</link><description>以前生成したOpenApiドキュメントから型を生成します。[前回]     型の生成には [@openapitools/openapi-generator-cli] を利用します。       zsh  $ npx @openapitools/openapi-generator-cli genera</description><pubDate>Mon, 28 Mar 2022 11:22:17 GMT</pubDate></item><item><title>GitHub Actionsよく使う設定まとめ</title><link>https://portal.kemu.site/blog/1182698916/</link><description>   任意のタイミングでテストを回す    pushとpull requestの両方で全てのケースで発火させた場合pull request上で同一の内容のテストが2回発火します。そのためpull requestが作成されたタイミング/pull requestが更新されたタイミング/マージされた(ma</description><pubDate>Sun, 27 Mar 2022 23:23:38 GMT</pubDate></item><item><title>JSON Typerをリリースしました。</title><link>https://portal.kemu.site/blog/1180653910/</link><description>JSONデータを読み込ませることでTypeScriptの型を自動生成することができる機能を追加しました。    下記の例のような形でJSONを入力することで生成されます。    リスト型、JSONのキーのエスケープが課題ですがまあ手軽に型を生成したいタイミングでは使いやすいかと思います。    [U</description><pubDate>Fri, 25 Mar 2022 11:06:44 GMT</pubDate></item><item><title>IP Address Checkerをリリースしました</title><link>https://portal.kemu.site/blog/1176713310/</link><description>閲覧ユーザのIPアドレス等を確認できる機能をリリースしました。    IPアドレスの収集は行なっておらず、ローカルストレージに前回の記録を残していくだけのため安心してご利用ください。    内部的な構成は以下の通りです。    &lt;img width="555" alt="スクリーンショット 2022</description><pubDate>Tue, 22 Mar 2022 12:29:14 GMT</pubDate></item><item><title>AWS Apex Domainとうまく付き合う</title><link>https://portal.kemu.site/blog/1175617296/</link><description>サイトをAWS上に置いている場合、ロードバランサにSSL証明書を置き、ターゲットグループにEC2を指定するといった構成がよくある構成として挙げられます。    この構成の場合、ドメインのDNSレコードに通常CNAMEレコードを追加し、ロードバランサのDNS名を記載します。    &lt;img width</description><pubDate>Mon, 21 Mar 2022 16:14:23 GMT</pubDate></item><item><title>Angular reCAPTCHAを利用する</title><link>https://portal.kemu.site/blog/1174533240/</link><description>reCAPTCHAを用いてbotからのアクセスを防ぐことができるようになります。    通常、reCAPTCHAを利用する場合、scriptタグをHTMLに仕込む必要があります。ただし、index.html上のscriptタグはエスケープされ、消されてしまうため[ng-recaptcha] を利用し</description><pubDate>Sun, 20 Mar 2022 12:34:43 GMT</pubDate></item><item><title>サイトの構成について</title><link>https://portal.kemu.site/blog/1174435949/</link><description>     旧サイト[kemu.site]   &lt;img width="834" alt="スクリーンショット 2022-03-20 13 11 44" src="https://user- s.githubusercontent.com/29157528/159147797-67a49372-2bf</description><pubDate>Sun, 20 Mar 2022 04:20:38 GMT</pubDate></item></channel></rss>