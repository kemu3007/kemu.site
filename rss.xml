<?xml version='1.0' encoding='utf-8'?>
<rss version="2.0"><channel><title>Kemu Tech Blog</title><link>https://portal.kemu.site/</link><description>Kemu Tech Blogでは主にDjango / Angularに関する技術的な知見のメモ、共有を行っています。</description><language>ja</language><copyright>©️ 2017-2022 kemu All Rights Reserved.</copyright><managingEditor>kemu430113@gmail.com(kemu)</managingEditor><webMaster>kemu430113@gmail.com(kemu)</webMaster><item><guid isPermaLink="false">1221980066</guid><title>スーパーロボット魂2022～stage terra～行ってきました</title><link>https://portal.kemu.site/log/1221980066/</link><description>4年振りにSuper Robot Spiritsに行ってきたので記録。
</description><category>log</category><pubDate>Sun, 01 May 2022 02:02:20 +0900</pubDate></item><item><guid isPermaLink="false">1220605843</guid><title>2022-04-28 パソコンを組み直したので記録 / 事故ログ</title><link>https://portal.kemu.site/log/1220605843/</link><description>RTX 3060を利用していたがスペック不足を感じ、安くなっていたので3070Tiにリプレイスを行ったのでその記録、リプレイス中に事故が発生したのでその対応についてまとめました。
</description><category>log</category><pubDate>Fri, 29 Apr 2022 11:40:29 +0900</pubDate></item><item><guid isPermaLink="false">1217467340</guid><title>MacOS Windowsインストールメディアの作成</title><link>https://portal.kemu.site/blog/1217467340/</link><description> 手持ちのM1 Macでwindows10のboot mediaを作るタイミングがあったので作成方法を紹介します。
</description><category>article, その他</category><pubDate>Wed, 27 Apr 2022 14:46:54 +0900</pubDate></item><item><guid isPermaLink="false">1215117235</guid><title>RSSの作成 / Chrome Web Feederの動作確認</title><link>https://portal.kemu.site/blog/1215117235/</link><description>AndroidのChrome 94~にRSS Feeder機能がいつの間にか帰ってきていたのでRSSを作成、配信して見え方のテストを行いました。
</description><category>article, Python</category><pubDate>Mon, 25 Apr 2022 22:32:58 +0900</pubDate></item><item><guid isPermaLink="false">1210913643</guid><title>Django JWT認証を利用する</title><link>https://portal.kemu.site/blog/1210913643/</link><description>Django Rest Framework, SimpleJWTのライブラリ動作確認を行ったのでそのメモ書き。トークンの作成 -&amp;gt; トークンの有効性検証 -&amp;gt; トークンの再発行処理 -&amp;gt; トークンを用いたログイン必須ページへのアクセス方法の確認を行っています。
</description><category>article, Django</category><pubDate>Thu, 21 Apr 2022 11:40:05 +0900</pubDate></item><item><guid isPermaLink="false">1206789196</guid><title>Graphene Django Graphql ドキュメントを生成する</title><link>https://portal.kemu.site/blog/1206789196/</link><description>Grapnene-Djangoを利用したプロジェクトでGraphql スキーマの出力、出力される情報の確認、出力されたスキーマからの自動ドキュメント生成を行います。生成したドキュメントはCIからGitHub Pagesにデプロイしています。
</description><category>article, Django</category><pubDate>Mon, 18 Apr 2022 07:59:27 +0900</pubDate></item><item><guid isPermaLink="false">1206344475</guid><title>Djangoプロジェクトをカスタムテンプレートから作成する</title><link>https://portal.kemu.site/blog/1206344475/</link><description>いつも使うDjangoの構成をまとめたテンプレートレポジトリを作成したので使い方の紹介です。デフォルトでflake8, mypy, black, isortの設定を行なっており、CIではコードの静的チェック、テストの実行を行うようにしています。
</description><category>article, Django</category><pubDate>Sun, 17 Apr 2022 10:58:05 +0900</pubDate></item><item><guid isPermaLink="false">1206271863</guid><title>GitHub ActionsとGitHub Pagesで健康管理アプリを作成する</title><link>https://portal.kemu.site/blog/1206271863/</link><description>GitHub ActionsとGitHub Pagesを組み合わせてユーザ入力フィールドを作成し、日々の健康データをグラフで表示することができるようにしたのでそのやり方と導入方法を紹介します。
</description><category>article, GitHub</category><pubDate>Sun, 17 Apr 2022 03:44:20 +0900</pubDate></item><item><guid isPermaLink="false">1198885661</guid><title>OpenApiドキュメントを可視化する</title><link>https://portal.kemu.site/blog/1198885661/</link><description>REST APIから出力されるOpenApiファイルを元にCIで自動でドキュメント化し、GitHub Pagesで公開する手法、Swagger, Redocの違いを紹介しています。また、OpenApiファイルから生成されるドキュメントのビューアーを提供しています。
</description><category>article, その他</category><pubDate>Sun, 10 Apr 2022 05:29:52 +0900</pubDate></item><item><guid isPermaLink="false">1191408274</guid><title>テキストエリアタグ内部でのTabキーの動作を管理する</title><link>https://portal.kemu.site/blog/1191408274/</link><description>アプリケーション作成時にユースケースとして多いテキストエリア内部でのTabキーの動作の管理方法についてAny型で握りつぶすやり方が他サイト等で散見されたため、型に基づいた書き方を紹介します。
</description><category>article, Angular</category><pubDate>Mon, 04 Apr 2022 08:04:13 +0900</pubDate></item><item><guid isPermaLink="false">1189843692</guid><title>Pillow 日本語フォントを利用する</title><link>https://portal.kemu.site/blog/1189843692/</link><description>ホストOSのフォントに依存しがちなPillowの日本語フォントで他の環境/ランナーでもフォントのダウンロードが必要ない形で実装する方法を紹介します。
</description><category>article, Python</category><pubDate>Fri, 01 Apr 2022 14:03:37 +0900</pubDate></item><item><guid isPermaLink="false">1189790754</guid><title>marked.jsとhighlight.jsでGitHub Flavored Markdownを扱う</title><link>https://portal.kemu.site/blog/1189790754/</link><description>GitHub上で扱っているMarkdownの正式名称はGitHub Flavored Markdownと言われ、デフォルトのMarkdownを拡張した独自記法になっています。    今回はhighlight.jsのGitHub cssを適用してMarkdownテキストをHTMLに変換します。    </description><category>article, TypeScript</category><pubDate>Fri, 01 Apr 2022 13:22:10 +0900</pubDate></item><item><guid isPermaLink="false">1183289291</guid><title>OpenApiのドキュメントから型を自動で生成する</title><link>https://portal.kemu.site/blog/1183289291/</link><description>以前生成したOpenApiドキュメントから型を生成します。[前回]     型の生成には [@openapitools/openapi-generator-cli] を利用します。       zsh  $ npx @openapitools/openapi-generator-cli genera</description><category>article, TypeScript</category><pubDate>Mon, 28 Mar 2022 11:22:17 +0900</pubDate></item><item><guid isPermaLink="false">1182698916</guid><title>GitHub Actionsよく使う設定まとめ</title><link>https://portal.kemu.site/blog/1182698916/</link><description>   任意のタイミングでテストを回す    pushとpull requestの両方で全てのケースで発火させた場合pull request上で同一の内容のテストが2回発火します。そのためpull requestが作成されたタイミング/pull requestが更新されたタイミング/マージされた(ma</description><category>article, GitHub</category><pubDate>Sun, 27 Mar 2022 23:23:38 +0900</pubDate></item><item><guid isPermaLink="false">1180653910</guid><title>JSON Typerをリリースしました。</title><link>https://portal.kemu.site/blog/1180653910/</link><description>JSONデータを読み込ませることでTypeScriptの型を自動生成することができる機能を追加しました。    下記の例のような形でJSONを入力することで生成されます。    リスト型、JSONのキーのエスケープが課題ですがまあ手軽に型を生成したいタイミングでは使いやすいかと思います。    [U</description><category>article, TypeScript</category><pubDate>Fri, 25 Mar 2022 11:06:44 +0900</pubDate></item><item><guid isPermaLink="false">1176713310</guid><title>IP Address Checkerをリリースしました</title><link>https://portal.kemu.site/blog/1176713310/</link><description>閲覧ユーザのIPアドレス等を確認できる機能をリリースしました。    IPアドレスの収集は行なっておらず、ローカルストレージに前回の記録を残していくだけのため安心してご利用ください。    内部的な構成は以下の通りです。    &amp;lt;img width="555" alt="スクリーンショット 2022</description><category>article, AWS</category><pubDate>Tue, 22 Mar 2022 12:29:14 +0900</pubDate></item><item><guid isPermaLink="false">1175617296</guid><title>AWS Apex Domainとうまく付き合う</title><link>https://portal.kemu.site/blog/1175617296/</link><description>サイトをAWS上に置いている場合、ロードバランサにSSL証明書を置き、ターゲットグループにEC2を指定するといった構成がよくある構成として挙げられます。    この構成の場合、ドメインのDNSレコードに通常CNAMEレコードを追加し、ロードバランサのDNS名を記載します。    &amp;lt;img width</description><category>article, AWS</category><pubDate>Mon, 21 Mar 2022 16:14:23 +0900</pubDate></item><item><guid isPermaLink="false">1174533240</guid><title>Angular reCAPTCHAを利用する</title><link>https://portal.kemu.site/blog/1174533240/</link><description>reCAPTCHAを用いてbotからのアクセスを防ぐことができるようになります。    通常、reCAPTCHAを利用する場合、scriptタグをHTMLに仕込む必要があります。ただし、index.html上のscriptタグはエスケープされ、消されてしまうため[ng-recaptcha] を利用し</description><category>article, Angular</category><pubDate>Sun, 20 Mar 2022 12:34:43 +0900</pubDate></item><item><guid isPermaLink="false">1174435949</guid><title>サイトの構成について</title><link>https://portal.kemu.site/blog/1174435949/</link><description>     旧サイト[kemu.site]   &amp;lt;img width="834" alt="スクリーンショット 2022-03-20 13 11 44" src="https://user- s.githubusercontent.com/29157528/159147797-67a49372-2bf</description><category>article, Angular, Django</category><pubDate>Sun, 20 Mar 2022 04:20:38 +0900</pubDate></item><item><guid isPermaLink="false">1174254849</guid><title>Angular 状態管理を行う @ngneat/elf </title><link>https://portal.kemu.site/blog/1174254849/</link><description>[@datorama/akita] を確認してねという以下の記載があったので動作確認     Elf, a newer state management solution, has been published. We recommend checking it out 🚀     ---     </description><category>article, Angular</category><pubDate>Sat, 19 Mar 2022 12:29:12 +0900</pubDate></item><item><guid isPermaLink="false">1170873471</guid><title>Angular よく書くコード/ライブラリ置き場</title><link>https://portal.kemu.site/blog/1170873471/</link><description>    ライブラリ  - [@ngneat/reactive-forms]     - 型安全にformGroupを記載    - フォームの入力内容をsession storageに保存しリロードされたタイミング等で保存/ロード    - [@datorama/akita]     - 状態管理ラ</description><category>article, Angular</category><pubDate>Wed, 16 Mar 2022 11:09:50 +0900</pubDate></item><item><guid isPermaLink="false">1169514542</guid><title>Angular component内にscriptタグを設置する</title><link>https://portal.kemu.site/blog/1169514542/</link><description>scriptタグを  src/index.html  以外に設置した場合、自動的に取り除く挙動を示します。    参考: [angular/angular 4903]     そのため、例えば[Twitter Publish] で取得できるようなボタンを設置した際、ツイートボタンのcssが当たらない</description><category>article, Angular</category><pubDate>Tue, 15 Mar 2022 10:57:47 +0900</pubDate></item><item><guid isPermaLink="false">1169430844</guid><title>Django Rest Framework OpenAPIドキュメントを起こす</title><link>https://portal.kemu.site/blog/1169430844/</link><description>APIからOpenAPIドキュメントを生成する機会があったのでメモ    DRF自体に  generateschema  というコマンドが存在しているため       zsh  $ python manage.py generateschema &amp;gt; schema.yml         と実行するだ</description><category>article, Django</category><pubDate>Tue, 15 Mar 2022 09:53:45 +0900</pubDate></item><item><guid isPermaLink="false">1168270695</guid><title>2021-12-31 〜 2022-01-02 淡路島旅行</title><link>https://portal.kemu.site/log/1168270695/</link><description>今回は正月に南あわじのホテル&amp;amp;リゾーツ淡路島に行ってきたのでその記録。天気が悪かったのでそこだけが残念（あとちょっとホテルの料理と対応も）。
</description><category>log</category><pubDate>Mon, 14 Mar 2022 11:56:03 +0900</pubDate></item><item><guid isPermaLink="false">1167568913</guid><title>Google AdsenseをAngularで利用する</title><link>https://portal.kemu.site/blog/1167568913/</link><description>通常のSSRではGoogle Adsense用の自動広告スクリプトを  &amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;  内に記載するだけで広告を配信し、収益化させることが可能です。    ただし、SPAの場合自動広告のみを利用するとページ遷移によるリロードが発生しないため、ページ下部の固定広告のみになってしまうなど表</description><category>article, Angular</category><pubDate>Sun, 13 Mar 2022 12:39:35 +0900</pubDate></item><item><guid isPermaLink="false">1167241988</guid><title>GitHub PagesでデプロイしたSPAにOGPを表示させる(気合)</title><link>https://portal.kemu.site/blog/1167241988/</link><description>通常SPAをデプロイさせた場合、twitterなどでOGPが表示されません。    これはOGPを取得するbotがjsを実行しないこと、それとSPAのため該当するリンク先に静的なHTMLファイルが存在していないことが原因です。    そのため、通常はlambda等を利用しbot用のページ表示、それ以</description><category>article, Angular</category><pubDate>Sat, 12 Mar 2022 09:56:24 +0900</pubDate></item><item><guid isPermaLink="false">1160653032</guid><title>GitHub ActionとPagesでブログを作る</title><link>https://portal.kemu.site/blog/1160653032/</link><description>   環境  - npm v8.3.1  - node: v16.14.0  - Angular: v13.2.5  - @ng-bootstrap/ng-bootstrap: 12.0.0    ※  npm run ng add @ng-bootstrap/ng-bootstrap  が失敗する</description><category>article, Angular</category><pubDate>Sun, 06 Mar 2022 16:25:06 +0900</pubDate></item><item><guid isPermaLink="false">1160543419</guid><title>Nuxtでキャッシュとうまくやる</title><link>https://portal.kemu.site/blog/1160543419/</link><description>自動的に現在のコードが最新かどうかチェックし、キャッシュの更新を行います。         検証環境  - Nuxt: 2.15.8  - @nuxtjs/pwa: 3.3.5         コード   nuxt.config.js        js  {    plugins: ['plugi</description><category>article, Nuxt</category><pubDate>Sun, 06 Mar 2022 07:47:51 +0900</pubDate></item><item><guid isPermaLink="false">1160543378</guid><title>Gmail API push notificationを利用する</title><link>https://portal.kemu.site/blog/1160543378/</link><description>メールにフックして処理を挟むことができるようになります。        環境  - Python 3.10  - google-api-python-client==2.36.0  - google_auth_oauthlib==0.4.6  - google-cloud-pubsub==2.9.0</description><category>article, GCP</category><pubDate>Sun, 06 Mar 2022 07:47:32 +0900</pubDate></item><item><guid isPermaLink="false">1160543297</guid><title>フロントエンドのテストを書く(スナップショットテスト編)</title><link>https://portal.kemu.site/blog/1160543297/</link><description>    環境  Angular 13, node 16    今回はjestを利用するためデフォルトで入っているKarmaを削除します     sh  npm run ng add @briebug/jest-schematic         参考: https://github.com/brie</description><category>article, Angular</category><pubDate>Sun, 06 Mar 2022 07:47:02 +0900</pubDate></item><item><guid isPermaLink="false">1160543248</guid><title>DRF 紐づくモデルの表示件数を制限する</title><link>https://portal.kemu.site/blog/1160543248/</link><description>djangoには prefetch_related  という機能が存在しており以下のように記載することで発行されるSQLを抑制することができます。       python  Article.objects.prefetch_related("tags")         と記載することでManyT</description><category>article, Django</category><pubDate>Sun, 06 Mar 2022 07:46:40 +0900</pubDate></item><item><guid isPermaLink="false">1160543074</guid><title>Type safeにAngularのformを扱う</title><link>https://portal.kemu.site/blog/1160543074/</link><description>@ngneat/reactive-formsを利用するとtype safeにformを書くことができます。    ---       通常のAngularのform       ts  import { FormBuilder } from '@angular/forms';    construc</description><category>article, Angular</category><pubDate>Sun, 06 Mar 2022 07:45:35 +0900</pubDate></item><item><guid isPermaLink="false">1160543028</guid><title>Django Adminを自動生成する</title><link>https://portal.kemu.site/blog/1160543028/</link><description>admin登録忘れてめんどくさいな～ということがあったのでメモ代わりに残しておきます。         便利なタイミング  - Django Adminにそれほど力をいれたくないけれど最低限の機能はほしい  - モデル追加時に admin.site.register を忘れてしまうのでなんとかしたい</description><category>article, Django</category><pubDate>Sun, 06 Mar 2022 07:45:18 +0900</pubDate></item><item><guid isPermaLink="false">1160542944</guid><title>Django4.0がリリースされたので適当に試してみる</title><link>https://portal.kemu.site/blog/1160542944/</link><description>[release notes]         依存ライブラリ  - Django 3.2       asgiref==3.4.1  pytz==2021.3  sqlparse==0.4.2       - Django4.0       asgiref==3.4.1  backports.zo</description><category>article, Django</category><pubDate>Sun, 06 Mar 2022 07:44:51 +0900</pubDate></item><item><guid isPermaLink="false">1160542878</guid><title>MarkdownをHTMLに変換/cssを付与する</title><link>https://portal.kemu.site/blog/1160542878/</link><description>markdownは以下のライブラリを使うことでHTMLに変換可能です。  [Python-Markdown]         install       bash  &amp;gt; pip install markdown             HTMLへの変換       bash  &amp;gt;&amp;gt;&amp;gt; markdow</description><category>article, Python</category><pubDate>Sun, 06 Mar 2022 07:44:22 +0900</pubDate></item><item><guid isPermaLink="false">1160542827</guid><title>Django shortcutsまとめ	</title><link>https://portal.kemu.site/blog/1160542827/</link><description>  [django shortcuts]        render       py  def render(request, template_name, context=None, content_type=None, status=None, using=None):      """   </description><category>article, Django</category><pubDate>Sun, 06 Mar 2022 07:44:00 +0900</pubDate></item><item><guid isPermaLink="false">1160526026</guid><title>Google Adsenseで詰まった話、サイト構成など</title><link>https://portal.kemu.site/blog/1160526026/</link><description>このサイトの構成は     お名前ドットコム -&amp;gt; Route 53 -&amp;gt; AWS ALB - &amp;gt; AWS EC2     という形になっています。実装当初は     お名前ドットコム -&amp;gt; AWS ALB - &amp;gt; AWS EC2     となっていたのですがadsenseに登録する&amp;amp;ALBの仕様上</description><category>article, その他</category><pubDate>Sun, 06 Mar 2022 05:51:34 +0900</pubDate></item></channel></rss>