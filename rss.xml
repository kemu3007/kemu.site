<?xml version='1.0' encoding='utf-8'?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><atom:link href="https://tech.trash-box.dev/rss.xml" rel="self" type="application/rss+xml" /><lastBuildDate>Tue, 07 Mar 2023 01:47:28 +0900</lastBuildDate><category>Python/TypeScript/Django/Angular/Nuxt/Vue/Docker/GitHub Pages</category><title>Tech Blog | Trash Box</title><link>https://tech.trash-box.dev/</link><description>Tech Blog | Trash Box では主にDjango / Angularに関する技術的な知見のメモ、共有を行っています。</description><language>ja</language><copyright>©️ 2017-2022 All Rights Reserved.</copyright><item><guid isPermaLink="false">1297608930</guid><title>pipeを利用した場合のexitステータスの取り扱い</title><link>https://tech.trash-box.dev/blog/1297608930/</link><category>article/Utils</category><description>pipeを利用してコマンドの実行結果を別ファイルに書き出すなどの手法を取る際、pipeを利用する前のexitステータスコードが必要になるケースが存在します。その際のexitステータスの取り扱い方について紹介します。
</description><pubDate>Thu, 07 Jul 2022 15:07:33 +0900</pubDate></item><item><guid isPermaLink="false">1292067547</guid><title>GitHub CLI レポジトリを削除する</title><link>https://tech.trash-box.dev/blog/1292067547/</link><category>article/GitHub</category><description>手作業で不要になったレポジトリを削除するのが面倒になったのでコマンドから行えることを確認しました。
</description><pubDate>Sat, 02 Jul 2022 14:26:31 +0900</pubDate></item><item><guid isPermaLink="false">1288798647</guid><title>Graphene-Django JWT認証を併用する</title><link>https://tech.trash-box.dev/blog/1288798647/</link><category>article/Django</category><description>JWT認証を利用したGraphQLの実装を行ったので実装を紹介します。
</description><pubDate>Wed, 29 Jun 2022 14:16:11 +0900</pubDate></item><item><guid isPermaLink="false">1288639392</guid><title>[M1 Mac] chromiumのエラーで npm install に失敗した話とその対応</title><link>https://tech.trash-box.dev/blog/1288639392/</link><category>article/Utils</category><description>M1 Macでnpm installした際chromiumのエラーが出たのでその対応方法のメモ
</description><pubDate>Wed, 29 Jun 2022 12:18:38 +0900</pubDate></item><item><guid isPermaLink="false">1276252097</guid><title>Python Typehint new / deprecated</title><link>https://tech.trash-box.dev/blog/1276252097/</link><category>article/Python</category><description>気がつかないうちに追加 / 非推奨になっていた項目があったため紹介します。非推奨項目が多いのでよく利用されるもののみ記載しています。
</description><pubDate>Mon, 20 Jun 2022 01:47:30 +0900</pubDate></item><item><guid isPermaLink="false">1268342824</guid><title>AWS CodePipelineとGitHubを連携させてECRにイメージをPushする</title><link>https://tech.trash-box.dev/blog/1268342824/</link><category>article/AWS</category><description>GitHubのOAuth認証を利用しAWS CodePipelineと連携させ、トリガされたCodeBuildを用いたECRへのAuto Pushを行ったのでやり方を紹介します。
</description><pubDate>Sat, 11 Jun 2022 18:19:06 +0900</pubDate></item><item><guid isPermaLink="false">1260993418</guid><title>GitHub Actions 小技 (1)</title><link>https://tech.trash-box.dev/blog/1260993418/</link><category>article/Utils</category><description>複数回Pushした際の前のJobの自動キャンセル、Job Summaryへの情報書き込み方を紹介します。
</description><pubDate>Sun, 05 Jun 2022 08:32:36 +0900</pubDate></item><item><guid isPermaLink="false">1260904707</guid><title>GraphQL graphene-django n+1問題の対策を行う</title><link>https://tech.trash-box.dev/blog/1260904707/</link><category>article/Django</category><description>GraphQLクエリを単純に実装してしまうと他モデルへの参照をフロント側が書いた際にn+1問題が発生してしまいます。その際の対応を記載します。
</description><pubDate>Sat, 04 Jun 2022 22:26:18 +0900</pubDate></item><item><guid isPermaLink="false">1258346492</guid><title>Python オフラインで翻訳を行う argostranslate</title><link>https://tech.trash-box.dev/blog/1258346492/</link><category>article/Python</category><description>ブログの多言語対応を行なっている際、argostranslateを利用したオフライン翻訳をおこなったためやり方を共有します。
</description><pubDate>Thu, 02 Jun 2022 15:27:08 +0900</pubDate></item><item><guid isPermaLink="false">1251907198</guid><title>IOS Safari 15.4 リリースされたのでCSS新要素を試す svh, lvh, dvh</title><link>https://tech.trash-box.dev/blog/1251907198/</link><category>article/Utils</category><description>iPhoneで悩まされてきたURLバーの高さ問題が解決されたようなので新要素を確認します。
</description><pubDate>Sun, 29 May 2022 14:40:47 +0900</pubDate></item><item><guid isPermaLink="false">1251755523</guid><title>Angular Sentry エラートラッキングを行う</title><link>https://tech.trash-box.dev/blog/1251755523/</link><category>article/Angular</category><description>Angular ApplicationのエラートラッキングとGitHub Actionsによるソースマップ自動アップロード、リリースの作成を行ったのでやり方を紹介します。
</description><pubDate>Sun, 29 May 2022 00:46:42 +0900</pubDate></item><item><guid isPermaLink="false">1250315076</guid><title>Angular + Scully Server Side Generate を試す</title><link>https://tech.trash-box.dev/blog/1250315076/</link><category>article/Angular</category><description>Angular + ScullyでServer Side Generateを行ったのでやり方を共有します。
</description><pubDate>Fri, 27 May 2022 04:12:36 +0900</pubDate></item><item><guid isPermaLink="false">1244192476</guid><title>mermaid.jsをリアルタイム描画する</title><link>https://tech.trash-box.dev/blog/1244192476/</link><category>article/Angular</category><description>mermaid.jsを利用したグラフ図を利用したいタイミングが複数回あり、リアルタイム描画方法をまとめ、リアルタイム描画を行うツールを作成しました。
</description><pubDate>Sun, 22 May 2022 08:54:29 +0900</pubDate></item><item><guid isPermaLink="false">1239705698</guid><title>Django 4.1 Async View, Async ORMを試す</title><link>https://tech.trash-box.dev/blog/1239705698/</link><category>article/Django</category><description>Django4.1alpha1がリリースされていたので新機能&amp;amp;動作の確認を行いました。
</description><pubDate>Wed, 18 May 2022 09:48:28 +0900</pubDate></item><item><guid isPermaLink="false">1238798339</guid><title>SEOを考えながらSPAをGitHub Pagesにデプロイする</title><link>https://tech.trash-box.dev/blog/1238798339/</link><category>article/Angular</category><description>GitHub Pages, Cloudflare PagesにサービスにSPAをデプロイする際、SEOの観点から注意しなくてはいけないこと、Angularデプロイのやり方についても説明します。
</description><pubDate>Tue, 17 May 2022 15:15:57 +0900</pubDate></item><item><guid isPermaLink="false">1228774700</guid><title>MacOS Clamavでウイルススキャンを行う</title><link>https://tech.trash-box.dev/blog/1228774700/</link><category>article/Utils</category><description>Clamavを常駐させたくはないが定期的にフルスキャンをかけて安全性を担保しておきたいなと思ったのでやり方を紹介します。
</description><pubDate>Sun, 08 May 2022 02:31:49 +0900</pubDate></item><item><guid isPermaLink="false">1227975608</guid><title>Cloudflare Pages 認証されたユーザにのみページを表示する</title><link>https://tech.trash-box.dev/blog/1227975608/</link><category>article/Utils</category><description>GitHub Pagesで静的サイトをホストし、バックエンドを保持しない場合、ユーザ認証をかけることができないためCloudflare Pagesでデプロイを行い、Cloudflare Accessで認証を行い通過したユーザのみサイトを閲覧できるようにします。
</description><pubDate>Fri, 06 May 2022 14:59:25 +0900</pubDate></item><item><guid isPermaLink="false">1223579698</guid><title>Pyodide JavaScriptからPythonスクリプトを実行する</title><link>https://tech.trash-box.dev/blog/1223579698/</link><category>article/Python</category><description>PyCon US 2022でPyScriptについての発表があったので流れに乗り、とりあえずPyodideを手元で触ったので紹介します。
</description><pubDate>Tue, 03 May 2022 02:57:37 +0900</pubDate></item><item><guid isPermaLink="false">1217467340</guid><title>MacOS Windowsインストールメディアの作成</title><link>https://tech.trash-box.dev/blog/1217467340/</link><category>article/Utils</category><description> 手持ちのM1 Macでwindows10のboot mediaを作るタイミングがあったので作成方法を紹介します。
</description><pubDate>Wed, 27 Apr 2022 14:46:54 +0900</pubDate></item><item><guid isPermaLink="false">1215117235</guid><title>RSSの作成 / Chrome Web Feederの動作確認</title><link>https://tech.trash-box.dev/blog/1215117235/</link><category>article/Python</category><description>AndroidのChrome 94~にRSS Feeder機能がいつの間にか帰ってきていたのでRSSを作成、配信して見え方のテストを行いました。
</description><pubDate>Mon, 25 Apr 2022 22:32:58 +0900</pubDate></item><item><guid isPermaLink="false">1210913643</guid><title>Django JWT認証を利用する</title><link>https://tech.trash-box.dev/blog/1210913643/</link><category>article/Django</category><description>Django Rest Framework, SimpleJWTのライブラリ動作確認を行ったのでそのメモ書き。トークンの作成 -&amp;gt; トークンの有効性検証 -&amp;gt; トークンの再発行処理 -&amp;gt; トークンを用いたログイン必須ページへのアクセス方法の確認を行っています。
</description><pubDate>Thu, 21 Apr 2022 11:40:05 +0900</pubDate></item><item><guid isPermaLink="false">1206789196</guid><title>Graphene Django Graphql ドキュメントを生成する</title><link>https://tech.trash-box.dev/blog/1206789196/</link><category>article/Django</category><description>Grapnene-Djangoを利用したプロジェクトでGraphql スキーマの出力、出力される情報の確認、出力されたスキーマからの自動ドキュメント生成を行います。生成したドキュメントはCIからGitHub Pagesにデプロイしています。
</description><pubDate>Mon, 18 Apr 2022 07:59:27 +0900</pubDate></item><item><guid isPermaLink="false">1206344475</guid><title>Djangoプロジェクトをカスタムテンプレートから作成する</title><link>https://tech.trash-box.dev/blog/1206344475/</link><category>article/Django</category><description>いつも使うDjangoの構成をまとめたテンプレートレポジトリを作成したので使い方の紹介です。デフォルトでflake8, mypy, black, isortの設定を行なっており、CIではコードの静的チェック、テストの実行を行うようにしています。
</description><pubDate>Sun, 17 Apr 2022 10:58:05 +0900</pubDate></item><item><guid isPermaLink="false">1206271863</guid><title>GitHub ActionsとGitHub Pagesで健康管理アプリを作成する</title><link>https://tech.trash-box.dev/blog/1206271863/</link><category>article/GitHub</category><description>GitHub ActionsとGitHub Pagesを組み合わせてユーザ入力フィールドを作成し、日々の健康データをグラフで表示することができるようにしたのでそのやり方と導入方法を紹介します。
</description><pubDate>Sun, 17 Apr 2022 03:44:20 +0900</pubDate></item><item><guid isPermaLink="false">1198885661</guid><title>OpenApiドキュメントを可視化する</title><link>https://tech.trash-box.dev/blog/1198885661/</link><category>article/Utils</category><description>REST APIから出力されるOpenApiファイルを元にCIで自動でドキュメント化し、GitHub Pagesで公開する手法、Swagger, Redocの違いを紹介しています。また、OpenApiファイルから生成されるドキュメントのビューアーを提供しています。
</description><pubDate>Sun, 10 Apr 2022 05:29:52 +0900</pubDate></item><item><guid isPermaLink="false">1191408274</guid><title>テキストエリアタグ内部でのTabキーの動作を管理する</title><link>https://tech.trash-box.dev/blog/1191408274/</link><category>article/Angular</category><description>アプリケーション作成時にユースケースとして多いテキストエリア内部でのTabキーの動作の管理方法についてAny型で握りつぶすやり方が他サイト等で散見されたため、型に基づいた書き方を紹介します。
</description><pubDate>Mon, 04 Apr 2022 08:04:13 +0900</pubDate></item><item><guid isPermaLink="false">1189843692</guid><title>Pillow 日本語フォントを利用する</title><link>https://tech.trash-box.dev/blog/1189843692/</link><category>article/Python</category><description>ホストOSのフォントに依存しがちなPillowの日本語フォントで他の環境/ランナーでもフォントのダウンロードが必要ない形で実装する方法を紹介します。
</description><pubDate>Fri, 01 Apr 2022 14:03:37 +0900</pubDate></item><item><guid isPermaLink="false">1189790754</guid><title>marked.jsとhighlight.jsでGitHub Flavored Markdownを扱う</title><link>https://tech.trash-box.dev/blog/1189790754/</link><category>article/TypeScript</category><description>GitHub上で扱っているMarkdownの正式名称はGitHub Flavored Markdownと言われ、デフォルトのMarkdownを拡張した独自記法になっています。    今回はhighlight.jsのGitHub cssを適用してMarkdownテキストをHTMLに変換します。    </description><pubDate>Fri, 01 Apr 2022 13:22:10 +0900</pubDate></item><item><guid isPermaLink="false">1183289291</guid><title>OpenApiのドキュメントから型を自動で生成する</title><link>https://tech.trash-box.dev/blog/1183289291/</link><category>article/TypeScript</category><description>以前生成したOpenApiドキュメントから型を生成します。[前回]     型の生成には [@openapitools/openapi-generator-cli] を利用します。       zsh  $ npx @openapitools/openapi-generator-cli genera</description><pubDate>Mon, 28 Mar 2022 11:22:17 +0900</pubDate></item><item><guid isPermaLink="false">1182698916</guid><title>GitHub Actionsよく使う設定まとめ</title><link>https://tech.trash-box.dev/blog/1182698916/</link><category>article/GitHub</category><description>   任意のタイミングでテストを回す    pushとpull requestの両方で全てのケースで発火させた場合pull request上で同一の内容のテストが2回発火します。そのためpull requestが作成されたタイミング/pull requestが更新されたタイミング/マージされた(ma</description><pubDate>Sun, 27 Mar 2022 23:23:38 +0900</pubDate></item><item><guid isPermaLink="false">1180653910</guid><title>JSON Typerをリリースしました。</title><link>https://tech.trash-box.dev/blog/1180653910/</link><category>article/TypeScript</category><description>JSONデータを読み込ませることでTypeScriptの型を自動生成することができる機能を追加しました。    下記の例のような形でJSONを入力することで生成されます。    リスト型、JSONのキーのエスケープが課題ですがまあ手軽に型を生成したいタイミングでは使いやすいかと思います。    [U</description><pubDate>Fri, 25 Mar 2022 11:06:44 +0900</pubDate></item><item><guid isPermaLink="false">1176713310</guid><title>IP Address Checkerをリリースしました</title><link>https://tech.trash-box.dev/blog/1176713310/</link><category>article/AWS</category><description>閲覧ユーザのIPアドレス等を確認できる機能をリリースしました。    IPアドレスの収集は行なっておらず、ローカルストレージに前回の記録を残していくだけのため安心してご利用ください。    内部的な構成は以下の通りです。    &amp;lt;img width="555" alt="スクリーンショット 2022</description><pubDate>Tue, 22 Mar 2022 12:29:14 +0900</pubDate></item><item><guid isPermaLink="false">1175617296</guid><title>AWS Apex Domainとうまく付き合う</title><link>https://tech.trash-box.dev/blog/1175617296/</link><category>article/AWS</category><description>サイトをAWS上に置いている場合、ロードバランサにSSL証明書を置き、ターゲットグループにEC2を指定するといった構成がよくある構成として挙げられます。    この構成の場合、ドメインのDNSレコードに通常CNAMEレコードを追加し、ロードバランサのDNS名を記載します。    &amp;lt;img width</description><pubDate>Mon, 21 Mar 2022 16:14:23 +0900</pubDate></item><item><guid isPermaLink="false">1174533240</guid><title>Angular reCAPTCHAを利用する</title><link>https://tech.trash-box.dev/blog/1174533240/</link><category>article/Angular</category><description>reCAPTCHAを用いてbotからのアクセスを防ぐことができるようになります。    通常、reCAPTCHAを利用する場合、scriptタグをHTMLに仕込む必要があります。ただし、index.html上のscriptタグはエスケープされ、消されてしまうため[ng-recaptcha] を利用し</description><pubDate>Sun, 20 Mar 2022 12:34:43 +0900</pubDate></item><item><guid isPermaLink="false">1174435949</guid><title>サイトの構成について</title><link>https://tech.trash-box.dev/blog/1174435949/</link><category>article/Angular/Django</category><description>     旧サイト[kemu.site]   &amp;lt;img width="834" alt="スクリーンショット 2022-03-20 13 11 44" src="https://user- s.githubusercontent.com/29157528/159147797-67a49372-2bf</description><pubDate>Sun, 20 Mar 2022 04:20:38 +0900</pubDate></item><item><guid isPermaLink="false">1174254849</guid><title>Angular 状態管理を行う @ngneat/elf </title><link>https://tech.trash-box.dev/blog/1174254849/</link><category>article/Angular</category><description>[@datorama/akita] を確認してねという以下の記載があったので動作確認     Elf, a newer state management solution, has been published. We recommend checking it out 🚀     ---     </description><pubDate>Sat, 19 Mar 2022 12:29:12 +0900</pubDate></item><item><guid isPermaLink="false">1170873471</guid><title>Angular よく書くコード/ライブラリ置き場</title><link>https://tech.trash-box.dev/blog/1170873471/</link><category>article/Angular</category><description>    ライブラリ  - [@ngneat/reactive-forms]     - 型安全にformGroupを記載    - フォームの入力内容をsession storageに保存しリロードされたタイミング等で保存/ロード    - [@datorama/akita]     - 状態管理ラ</description><pubDate>Wed, 16 Mar 2022 11:09:50 +0900</pubDate></item><item><guid isPermaLink="false">1169514542</guid><title>Angular component内にscriptタグを設置する</title><link>https://tech.trash-box.dev/blog/1169514542/</link><category>article/Angular</category><description>scriptタグを  src/index.html  以外に設置した場合、自動的に取り除く挙動を示します。    参考: [angular/angular 4903]     そのため、例えば[Twitter Publish] で取得できるようなボタンを設置した際、ツイートボタンのcssが当たらない</description><pubDate>Tue, 15 Mar 2022 10:57:47 +0900</pubDate></item><item><guid isPermaLink="false">1169430844</guid><title>Django Rest Framework OpenAPIドキュメントを起こす</title><link>https://tech.trash-box.dev/blog/1169430844/</link><category>article/Django</category><description>APIからOpenAPIドキュメントを生成する機会があったのでメモ    DRF自体に  generateschema  というコマンドが存在しているため       zsh  $ python manage.py generateschema &amp;gt; schema.yml         と実行するだ</description><pubDate>Tue, 15 Mar 2022 09:53:45 +0900</pubDate></item><item><guid isPermaLink="false">1167568913</guid><title>Google AdsenseをAngularで利用する</title><link>https://tech.trash-box.dev/blog/1167568913/</link><category>article/Angular</category><description>通常のSSRではGoogle Adsense用の自動広告スクリプトを  &amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;  内に記載するだけで広告を配信し、収益化させることが可能です。    ただし、SPAの場合自動広告のみを利用するとページ遷移によるリロードが発生しないため、ページ下部の固定広告のみになってしまうなど表</description><pubDate>Sun, 13 Mar 2022 12:39:35 +0900</pubDate></item><item><guid isPermaLink="false">1167241988</guid><title>GitHub PagesでデプロイしたSPAにOGPを表示させる(気合)</title><link>https://tech.trash-box.dev/blog/1167241988/</link><category>article/Angular</category><description>通常SPAをデプロイさせた場合、twitterなどでOGPが表示されません。    これはOGPを取得するbotがjsを実行しないこと、それとSPAのため該当するリンク先に静的なHTMLファイルが存在していないことが原因です。    そのため、通常はlambda等を利用しbot用のページ表示、それ以</description><pubDate>Sat, 12 Mar 2022 09:56:24 +0900</pubDate></item><item><guid isPermaLink="false">1160653032</guid><title>GitHub ActionとPagesでブログを作る</title><link>https://tech.trash-box.dev/blog/1160653032/</link><category>article/Angular</category><description>   環境  - npm v8.3.1  - node: v16.14.0  - Angular: v13.2.5  - @ng-bootstrap/ng-bootstrap: 12.0.0    ※  npm run ng add @ng-bootstrap/ng-bootstrap  が失敗する</description><pubDate>Sun, 06 Mar 2022 16:25:06 +0900</pubDate></item><item><guid isPermaLink="false">1160543419</guid><title>Nuxtでキャッシュとうまくやる</title><link>https://tech.trash-box.dev/blog/1160543419/</link><category>article/Nuxt</category><description>自動的に現在のコードが最新かどうかチェックし、キャッシュの更新を行います。         検証環境  - Nuxt: 2.15.8  - @nuxtjs/pwa: 3.3.5         コード   nuxt.config.js        js  {    plugins: ['plugi</description><pubDate>Sun, 06 Mar 2022 07:47:51 +0900</pubDate></item><item><guid isPermaLink="false">1160543378</guid><title>Gmail API push notificationを利用する</title><link>https://tech.trash-box.dev/blog/1160543378/</link><category>article/GCP</category><description>メールにフックして処理を挟むことができるようになります。        環境  - Python 3.10  - google-api-python-client==2.36.0  - google_auth_oauthlib==0.4.6  - google-cloud-pubsub==2.9.0</description><pubDate>Sun, 06 Mar 2022 07:47:32 +0900</pubDate></item><item><guid isPermaLink="false">1160543297</guid><title>フロントエンドのテストを書く(スナップショットテスト編)</title><link>https://tech.trash-box.dev/blog/1160543297/</link><category>article/Angular</category><description>    環境  Angular 13, node 16    今回はjestを利用するためデフォルトで入っているKarmaを削除します     sh  npm run ng add @briebug/jest-schematic         参考: https://github.com/brie</description><pubDate>Sun, 06 Mar 2022 07:47:02 +0900</pubDate></item><item><guid isPermaLink="false">1160543248</guid><title>DRF 紐づくモデルの表示件数を制限する</title><link>https://tech.trash-box.dev/blog/1160543248/</link><category>article/Django</category><description>djangoには prefetch_related  という機能が存在しており以下のように記載することで発行されるSQLを抑制することができます。       python  Article.objects.prefetch_related("tags")         と記載することでManyT</description><pubDate>Sun, 06 Mar 2022 07:46:40 +0900</pubDate></item><item><guid isPermaLink="false">1160543074</guid><title>Type safeにAngularのformを扱う</title><link>https://tech.trash-box.dev/blog/1160543074/</link><category>article/Angular</category><description>@ngneat/reactive-formsを利用するとtype safeにformを書くことができます。    ---       通常のAngularのform       ts  import { FormBuilder } from '@angular/forms';    construc</description><pubDate>Sun, 06 Mar 2022 07:45:35 +0900</pubDate></item><item><guid isPermaLink="false">1160543028</guid><title>Django Adminを自動生成する</title><link>https://tech.trash-box.dev/blog/1160543028/</link><category>article/Django</category><description>admin登録忘れてめんどくさいな～ということがあったのでメモ代わりに残しておきます。         便利なタイミング  - Django Adminにそれほど力をいれたくないけれど最低限の機能はほしい  - モデル追加時に admin.site.register を忘れてしまうのでなんとかしたい</description><pubDate>Sun, 06 Mar 2022 07:45:18 +0900</pubDate></item><item><guid isPermaLink="false">1160542944</guid><title>Django4.0がリリースされたので適当に試してみる</title><link>https://tech.trash-box.dev/blog/1160542944/</link><category>article/Django</category><description>[release notes]         依存ライブラリ  - Django 3.2       asgiref==3.4.1  pytz==2021.3  sqlparse==0.4.2       - Django4.0       asgiref==3.4.1  backports.zo</description><pubDate>Sun, 06 Mar 2022 07:44:51 +0900</pubDate></item><item><guid isPermaLink="false">1160542878</guid><title>MarkdownをHTMLに変換/cssを付与する</title><link>https://tech.trash-box.dev/blog/1160542878/</link><category>article/Python</category><description>markdownは以下のライブラリを使うことでHTMLに変換可能です。  [Python-Markdown]         install       bash  &amp;gt; pip install markdown             HTMLへの変換       bash  &amp;gt;&amp;gt;&amp;gt; markdow</description><pubDate>Sun, 06 Mar 2022 07:44:22 +0900</pubDate></item><item><guid isPermaLink="false">1160542827</guid><title>Django shortcutsまとめ	</title><link>https://tech.trash-box.dev/blog/1160542827/</link><category>article/Django</category><description>  [django shortcuts]        render       py  def render(request, template_name, context=None, content_type=None, status=None, using=None):      """   </description><pubDate>Sun, 06 Mar 2022 07:44:00 +0900</pubDate></item><item><guid isPermaLink="false">1160526026</guid><title>Google Adsenseで詰まった話、サイト構成など</title><link>https://tech.trash-box.dev/blog/1160526026/</link><category>article/Utils</category><description>このサイトの構成は     お名前ドットコム -&amp;gt; Route 53 -&amp;gt; AWS ALB - &amp;gt; AWS EC2     という形になっています。実装当初は     お名前ドットコム -&amp;gt; AWS ALB - &amp;gt; AWS EC2     となっていたのですがadsenseに登録する&amp;amp;ALBの仕様上</description><pubDate>Sun, 06 Mar 2022 05:51:34 +0900</pubDate></item></channel></rss>