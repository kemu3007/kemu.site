{"version":3,"mappings":"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EC,GAAoB,CAAC,SAAU,SAAU,SACzCC,GAA2B,CAC7B,YAAa,WAAY,QAAS,QAAS,OAAQ,WAAY,UAAW,UAC1E,oBAEEC,GAAqB,CAAC,gBAAiB,WAAY,QAAS,UAAW,QAAS,UAAW,gBAAiB,SAC5GC,GAAsB,CAAC,QAAS,QAAS,OAAQ,WACjDC,GAAmB,CAAC,QAAS,WAC7BC,GApNgC,CAClC,QACA,kBACA,eACA,qBACA,WACA,cACA,OACA,SACA,UACA,iBACA,SACA,mBACA,oBACA,iBACA,YACA,QACA,QACA,cACA,aACA,WACA,OACA,UACA,YACA,WACA,YACA,WACA,OACA,iBACA,UACA,QACA,QACA,QACA,UACA,WACA,oBACA,QACA,UACA,UACA,WACA,QACA,OACA,YACA,aACA,iBACA,qBACA,YACA,aACA,aACA,YACA,WACA,YACA,UACA,aACA,oBACA,QACA,OACA,UACA,gBACA,cACA,eACA,eACA,oBACA,uBACA,4BACA,mBACA,sBACA,yBACA,cACA,WACA,cACA,YACA,WACA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,kBACA,cACA,OACA,OACA,UACA,SACA,UACA,aACA,eACA,cACA,YACA,aACA,WACA,mBACA,gBACA,UACA,SAoH6ClB,OAbzB,CAAC,uBAAwB,mBAAoB,6BAC9C,CAAC,eAAgB,qBACf,CAAC,UAvGC,CACvB,qBAAsB,sBAAuB,mBAAoB,SAAU,mBAC3E,sBAAuB,yBAA0B,qBAAsB,kBACvE,qBAAsB,wBAAyB,oBAAqB,mBACpE,mBAAoB,UA8GuGS,GA5EjG,CAC1B,aAAc,YAAa,cAAe,OAAQ,MAAO,QAAS,YAAa,UAC/E,iBAAkB,SAAU,gBAAiB,kBAAmB,qBAChE,2BAA4B,uBAAwB,uBAG5B,CACxB,WACA,cACA,cACA,iBACA,mBACA,kBACA,eACA,aACA,gBACA,gBACA,iBACA,kBACA,cACA,eACA,iBACA,cACA,OACA,UACA,YACA,iBACA,YACA,cACA,WACA,UACA,aACA,eACA,UACA,0BACA,aACA,OACA,gBACA,6BACA,kBACA,qBACA,eACA,gBACA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","names":["__globalThis","globalThis","__window","window","__self","self","WorkerGlobalScope","_global","global","$localize","messageParts","expressions","translate","translation","message","stripBlock","raw","i","length","messagePart","rawMessagePart","charAt","substring","cooked","cookedIndex","rawIndex","Error","findEndOfBlock","TaskTrackingZoneSpec","this","name","microTasks","macroTasks","eventTasks","properties","TaskTrackingZone","get","Zone","current","prototype","getTasksFor","type","onScheduleTask","parentZoneDelegate","currentZone","targetZone","task","tasks","creationLocation","source","push","scheduleTask","onCancelTask","splice","cancelTask","onInvokeTask","applyThis","applyArgs","invokeTask","clearEvents","call","performance","mark","label","measure","symbolPrefix","__Zone_symbol_prefix","checkDuplicate","__symbol__","constructor","parent","zoneSpec","_parent","_name","_properties","_zoneDelegate","ZoneDelegate","Promise","patches","ZoneAwarePromise","root","zone","_currentZoneFrame","currentTask","_currentTask","fn","ignoreDuplicate","hasOwnProperty","perfName","_api","performanceMeasure","key","getZoneWith","fork","wrap","callback","_callback","intercept","runGuarded","arguments","run","invoke","error","handleError","runTask","NO_ZONE","state","notScheduled","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","scheduleMicroTask","customSchedule","ZoneTask","microTask","scheduleMacroTask","customCancel","scheduleEventTask","canceling","count","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","apply","returnTask","scheduleFn","value","isEmpty","counts","prev","next","change","options","_state","useG","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toString","handleId","Object","toJSON","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","then","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","zoneSymbol","isWindowExists","internalWindow","NULL_ON_PROP_VALUE","propertyDesc","writable","set","isWebWorker","isNode","process","isBrowser","HTMLElement","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","listener","result","errorEvent","filename","lineno","colno","preventDefault","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeEventListener","addEventListener","REMOVE_ATTRIBUTE","removeAttribute","patchProperty","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","isPropertyWritable","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","scheduleMacroTaskWithCurrentZone","patched","original","isDetectedIEOrEdge","ieOrEdge","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","e","rejection","console","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","wasCalled","wrappedFunction","once","TypeError","clearRejectedNoCatch","makeResolver","trace","creationTrace","scheduleResolveOrReject","JSON","stringify","readableObjectToString","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","forwardResolution","forwardRejection","parentPromiseValue","isFinallyPromise","static","ZONE_AWARE_PROMISE_TO_STRING","values","res","rej","isThenable","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","Symbol","species","C","catch","finally","onFinally","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","wrapped","resultPromise","ctor","zoneify","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","globalZoneAwareCallback","copyTasks","globalZoneAwareCaptureCallback","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","passive","capture","assign","prepend","isExisting","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","buildEventListenerOptions","me","prepareEventNames","constructorName","targetSource","k","unshift","PREPEND_EVENT_LISTENER","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","patchEventTargetMethods","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","delay","clearTask","handle","ref","unref","bind","id","I","legacyPatch","clear","patchTimer","blockingMethods","s","patchEvent","EVENT_TARGET","EventTarget","eventTargetPatch","XMLHttpRequestEventTarget","supportsWebSocket","WebSocket","__Zone_ignore_on_properties","ignoreErrorProperties","isIE","patchFilteredProperties","Document","SVGElement","Element","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","propertyDescriptorPatch","customElements","patchCustomElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","storedTask","XHR_TASK","sendNative","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","placeholderCallback","findPendingTask","patchXHR","geolocation","fnNames","patchPrototype","PromiseRejectionEvent","evt","findPromiseRejectionHandler"],"sources":["./node_modules/@angular/localize/fesm2015/init.mjs","./node_modules/zone.js/dist/task-tracking.js","./node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["/**\n * @license Angular v13.2.5\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst __globalThis = typeof globalThis !== 'undefined' && globalThis;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n// Always use __globalThis if available; this is the spec-defined global variable across all\n// environments.\n// Then fallback to __global first; in Node tests both __global and __window may be defined.\nconst _global = __globalThis || __global || __window || __self;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular i18n guide](guide/i18n-common-prepare#mark-text-in-component-template).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n *\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n *\n * @globalApi\n * @publicApi\n */\nconst $localize = function (messageParts, ...expressions) {\n    if ($localize.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    /***********************************************************************************************\n     * This function is repeated in `src/utils/messages.ts` and the two should be kept in sync.\n     * The reason is that this file is marked as having side-effects, and if we import `messages.ts`\n     * into it, the whole of `src/utils` will be included in this bundle and none of the functions\n     * will be tree shaken.\n     ***********************************************************************************************/\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attach $localize to the global context, as a side-effect of this module.\n_global.$localize = $localize;\n\nexport { $localize };\n","'use strict';\n/**\n * @license Angular v12.0.0-next.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n        factory();\n}((function () {\n    'use strict';\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A `TaskTrackingZoneSpec` allows one to track all outstanding Tasks.\n     *\n     * This is useful in tests. For example to see which tasks are preventing a test from completing\n     * or an automated way of releasing all of the event listeners at the end of the test.\n     */\n    var TaskTrackingZoneSpec = /** @class */ (function () {\n        function TaskTrackingZoneSpec() {\n            this.name = 'TaskTrackingZone';\n            this.microTasks = [];\n            this.macroTasks = [];\n            this.eventTasks = [];\n            this.properties = { 'TaskTrackingZone': this };\n        }\n        TaskTrackingZoneSpec.get = function () {\n            return Zone.current.get('TaskTrackingZone');\n        };\n        TaskTrackingZoneSpec.prototype.getTasksFor = function (type) {\n            switch (type) {\n                case 'microTask':\n                    return this.microTasks;\n                case 'macroTask':\n                    return this.macroTasks;\n                case 'eventTask':\n                    return this.eventTasks;\n            }\n            throw new Error('Unknown task format: ' + type);\n        };\n        TaskTrackingZoneSpec.prototype.onScheduleTask = function (parentZoneDelegate, currentZone, targetZone, task) {\n            task['creationLocation'] = new Error(\"Task '\" + task.type + \"' from '\" + task.source + \"'.\");\n            var tasks = this.getTasksFor(task.type);\n            tasks.push(task);\n            return parentZoneDelegate.scheduleTask(targetZone, task);\n        };\n        TaskTrackingZoneSpec.prototype.onCancelTask = function (parentZoneDelegate, currentZone, targetZone, task) {\n            var tasks = this.getTasksFor(task.type);\n            for (var i = 0; i < tasks.length; i++) {\n                if (tasks[i] == task) {\n                    tasks.splice(i, 1);\n                    break;\n                }\n            }\n            return parentZoneDelegate.cancelTask(targetZone, task);\n        };\n        TaskTrackingZoneSpec.prototype.onInvokeTask = function (parentZoneDelegate, currentZone, targetZone, task, applyThis, applyArgs) {\n            if (task.type === 'eventTask')\n                return parentZoneDelegate.invokeTask(targetZone, task, applyThis, applyArgs);\n            var tasks = this.getTasksFor(task.type);\n            for (var i = 0; i < tasks.length; i++) {\n                if (tasks[i] == task) {\n                    tasks.splice(i, 1);\n                    break;\n                }\n            }\n            return parentZoneDelegate.invokeTask(targetZone, task, applyThis, applyArgs);\n        };\n        TaskTrackingZoneSpec.prototype.clearEvents = function () {\n            while (this.eventTasks.length) {\n                Zone.current.cancelTask(this.eventTasks[0]);\n            }\n        };\n        return TaskTrackingZoneSpec;\n    }());\n    // Export the class so that new instances can be created with proper\n    // constructor params.\n    Zone['TaskTrackingZoneSpec'] = TaskTrackingZoneSpec;\n})));\n","'use strict';\n/**\n * @license Angular v12.0.0-next.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst Zone$1 = (function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                if (!nativeThen) {\n                    // native Promise is not patchable, we need to use `then` directly\n                    // issue 1078\n                    nativeThen = nativeMicroTaskQueuePromise['then'];\n                }\n                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.substr(2);\n    let eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        let previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames$1 = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames$1[eventName] = {};\n    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check upatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames$1[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames$1[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames$1[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames$1[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                        api._redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nconst documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange', 'resume'\n];\nconst windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplayconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nconst htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nconst mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nconst ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nconst webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nconst formEventNames = ['autocomplete', 'autocompleteerror'];\nconst detailEventNames = ['toggle'];\nconst frameEventNames = ['load'];\nconst frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nconst marqueeEventNames = ['bounce', 'finish', 'start'];\nconst XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nconst IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nconst websocketEventNames = ['close', 'error', 'open', 'message'];\nconst workerEventNames = ['error', 'message'];\nconst eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const supportsWebSocket = typeof WebSocket !== 'undefined';\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    if (isBrowser) {\n        const internalWindow = window;\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n        patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n        if (typeof internalWindow['SVGElement'] !== 'undefined') {\n            patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n        }\n        patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n        const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n        if (HTMLMarqueeElement) {\n            patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n        }\n        const Worker = internalWindow['Worker'];\n        if (Worker) {\n            patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n        }\n    }\n    const XMLHttpRequest = _global['XMLHttpRequest'];\n    if (XMLHttpRequest) {\n        // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget) {\n        patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    if (typeof IDBIndex !== 'undefined') {\n        patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n    }\n    if (supportsWebSocket) {\n        patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames: zoneSymbolEventNames$1,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n"],"sourceRoot":"webpack:///","file":"polyfills.f90af62a9d8e84f4.js"}