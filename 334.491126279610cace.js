"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[334],{3334:e=>{e.exports=JSON.parse('{"url":"https://api.github.com/repos/kemu3007/portal/issues/6","repository_url":"https://api.github.com/repos/kemu3007/portal","labels_url":"https://api.github.com/repos/kemu3007/portal/issues/6/labels{/name}","comments_url":"https://api.github.com/repos/kemu3007/portal/issues/6/comments","events_url":"https://api.github.com/repos/kemu3007/portal/issues/6/events","html_url":"https://github.com/kemu3007/portal/issues/6","id":1160543028,"node_id":"I_kwDOG7qoq85FLHs0","number":6,"title":"Django Admin\u3092\u81ea\u52d5\u751f\u6210\u3059\u308b","user":{"login":"kemu3007","id":29157528,"node_id":"MDQ6VXNlcjI5MTU3NTI4","avatar_url":"https://avatars.githubusercontent.com/u/29157528?v=4","gravatar_id":"","url":"https://api.github.com/users/kemu3007","html_url":"https://github.com/kemu3007","followers_url":"https://api.github.com/users/kemu3007/followers","following_url":"https://api.github.com/users/kemu3007/following{/other_user}","gists_url":"https://api.github.com/users/kemu3007/gists{/gist_id}","starred_url":"https://api.github.com/users/kemu3007/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kemu3007/subscriptions","organizations_url":"https://api.github.com/users/kemu3007/orgs","repos_url":"https://api.github.com/users/kemu3007/repos","events_url":"https://api.github.com/users/kemu3007/events{/privacy}","received_events_url":"https://api.github.com/users/kemu3007/received_events","type":"User","site_admin":false},"labels":[{"id":3898939400,"node_id":"LA_kwDOG7qoq87oZRgI","url":"https://api.github.com/repos/kemu3007/portal/labels/article","name":"article","color":"C200E5","default":false,"description":""},{"id":3900075763,"node_id":"LA_kwDOG7qoq87odm7z","url":"https://api.github.com/repos/kemu3007/portal/labels/Django","name":"Django","color":"5FC353","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":[],"created_at":"2022-03-06T07:45:18Z","updated_at":"2022-03-06T15:21:16Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"admin\u767b\u9332\u5fd8\u308c\u3066\u3081\u3093\u3069\u304f\u3055\u3044\u306a\uff5e\u3068\u3044\u3046\u3053\u3068\u304c\u3042\u3063\u305f\u306e\u3067\u30e1\u30e2\u4ee3\u308f\u308a\u306b\u6b8b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\\r\\n\\r\\n#### \u4fbf\u5229\u306a\u30bf\u30a4\u30df\u30f3\u30b0\\r\\n- Django Admin\u306b\u305d\u308c\u307b\u3069\u529b\u3092\u3044\u308c\u305f\u304f\u306a\u3044\u3051\u308c\u3069\u6700\u4f4e\u9650\u306e\u6a5f\u80fd\u306f\u307b\u3057\u3044\\r\\n- \u30e2\u30c7\u30eb\u8ffd\u52a0\u6642\u306b`admin.site.register`\u3092\u5fd8\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u306a\u3093\u3068\u304b\u3057\u305f\u3044\\r\\n\\r\\n#### \u5b9f\u969b\u306e\u30b3\u30fc\u30c9\\r\\n- urls.py\\r\\n\\r\\n```python \\r\\nurlpatterns = [\\r\\n    path(\\"admin/native/\\", AutoGenerateAdminSite().urls),\\r\\n]\\r\\n```\\r\\n\\r\\n- admin.py\\r\\n\\r\\n```python\\r\\nfrom typing import Type\\r\\nfrom django.contrib.admin.options import ModelAdmin\\r\\nfrom django.contrib.admin.sites import AdminSite\\r\\nfrom django.apps import apps\\r\\nfrom django.db import models\\r\\nfrom colorfield.fields import ColorField\\r\\n\\r\\n\\r\\ndef get_admin_model(model: Type[models.Model]) -> Type[ModelAdmin]:\\r\\n    list_display_fields = [models.CharField, models.IntegerField, models.PositiveIntegerField, models.ForeignKey, models.BooleanField, ColorField]\\r\\n    list_editable_field = [models.IntegerField, models.PositiveIntegerField, models.BooleanField, ColorField]\\r\\n    list_display = [\\"pk\\"]\\r\\n    list_editable = []\\r\\n    for field in model._meta.fields:\\r\\n        if type(field) in list_display_fields:\\r\\n            list_display.append(field.name)\\r\\n        if type(field) in list_editable_field and field.editable:\\r\\n            list_editable.append(field.name)\\r\\n    return type(f\\"{model._meta.model_name}ModelAdmin\\", (ModelAdmin, ), {\\"list_display\\": list_display, \\"list_editable\\": list_editable, \\"ordering\\": model._meta.ordering or [\\"pk\\"]})\\r\\n\\r\\n\\r\\nclass AutoGenerateAdminSite(AdminSite):\\r\\n    display_app_list = [\'sites\', \'shared\', \'article\', \'contact\']\\r\\n\\r\\n    def __init__(self, *args, **kwargs) -> None:\\r\\n        super().__init__(*args, **kwargs)\\r\\n        self._registry = {model: get_admin_model(model)(model=model, admin_site=self) for model in apps.get_models()}\\r\\n\\r\\n    def _build_app_dict(self, request):\\r\\n        app_dict = super()._build_app_dict(request)\\r\\n        return dict(filter(lambda app: app[0] in self.display_app_list, app_dict.items()))\\r\\n```\\r\\n\\r\\n`django.contrib.admin.sites.AdminSite`\u3092\u7d99\u627f\u3057\u305f`AutoGenerateAdminSite`\u3092\u4f5c\u6210\u3057\u3001\u4efb\u610f\u306e\u30e2\u30c7\u30eb\u3092`AutoGenerateAdminSite._registry `\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\\r\\n\\r\\n`django.apps.get_models`\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u305f\u3081session\u306a\u3069admin\u3067\u3082\u3042\u307e\u308a\u898b\u3089\u308c\u305f\u304f\u306a\u3044\u30c7\u30fc\u30bf\u3082\u8868\u793a\u3055\u308c\u307e\u3059\u3002\\r\\n\\r\\n\u305d\u3046\u3044\u3063\u305f\u30c7\u30fc\u30bf\u3092app\u5358\u4f4d\u3067\u9664\u304f\u305f\u3081\u3001`_build_app_dict`\u5185\u3067\u8868\u793a\u3059\u308bapp\u306e\u7d5e\u308a\u8fbc\u307f\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\\r\\n\\r\\n\u4eca\u56de\u52d5\u4f5c\u691c\u8a3c\u306b\u7528\u3044\u305f\u30b3\u30fc\u30c9\u306f[\u3053\u3061\u3089](https://github.com/kemu3007/blog/blob/master/src/apps/admin.py)","reactions":{"url":"https://api.github.com/repos/kemu3007/portal/issues/6/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/kemu3007/portal/issues/6/timeline","performed_via_github_app":null}')}}]);